{"ast":null,"code":"import _toConsumableArray from\"C:\\\\Users\\\\Ben\\\\Desktop\\\\John Bryce\\\\\\u05E4\\u05E8\\u05D5\\u05D9\\u05D9\\u05E7\\u05D8\\u05D9\\u05DD\\\\project3 - Vacations\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";import _objectSpread from\"C:\\\\Users\\\\Ben\\\\Desktop\\\\John Bryce\\\\\\u05E4\\u05E8\\u05D5\\u05D9\\u05D9\\u05E7\\u05D8\\u05D9\\u05DD\\\\project3 - Vacations\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";import{ActionType}from\"./ActionType\";// --------------- This is the reducer (acts like a state machine) --------------- //\nexport default function reduce(oldAppState,action){// Copying the old app state, in order to modify it, based on the action\nvar newAppState=_objectSpread({},oldAppState);switch(action.type){case ActionType.GetAllVacations:newAppState.allVacations=_toConsumableArray(action.payload);break;case ActionType.SetFollowedVacation:newAppState.favoriteVacations.push(action.payload);break;case ActionType.GetFavoriteVacations:newAppState.favoriteVacations=_toConsumableArray(action.payload);break;case ActionType.UnfollowVacation:newAppState.favoriteVacations.splice(action.payload,1);break;case ActionType.AddVacation:newAppState.allVacations.push(action.payload);break;case ActionType.UpdateVacation:newAppState.allVacations[action.payload.indexOfClickedVacationInGlobalStore]=action.payload.convertedValidDataForUIDisplay;break;case ActionType.UpdateFavoriteVacation:newAppState.favoriteVacations[action.payload.indexOfClickedFavoriteVacationInGlobalStore]=action.payload.convertedValidDataForUIDisplay;break;case ActionType.DeleteVacationViaSocketIO:newAppState.allVacations.splice(action.payload,1);break;case ActionType.DeleteFavoriteVacationViaSocketIO:newAppState.favoriteVacations.splice(action.payload,1);break;case ActionType.IncreaseVacationFollowersCount:newAppState.allVacations[action.payload.indexOfClickedVacationInGlobalStore].followersCount=action.payload.newFollowersCount;break;case ActionType.IncreaseFavoriteVacationFollowersCount:newAppState.favoriteVacations[action.payload.indexOfFavoriteClickedVacationInGlobalStore].followersCount=action.payload.newFollowersCount;break;case ActionType.DecreaseVacationFollowersCount:newAppState.allVacations[action.payload.indexOfClickedVacationInGlobalStore].followersCount=action.payload.newFollowersCount;break;case ActionType.DecreaseFavoriteVacationFollowersCount:newAppState.favoriteVacations[action.payload.indexOfFavoriteClickedVacationInGlobalStore].followersCount=action.payload.newFollowersCount;break;case ActionType.DeleteVacation:newAppState.allVacations.splice(action.payload,1);break;case ActionType.OnUserLogout:// Clearing the user's favorite vacations on logout\nnewAppState.favoriteVacations=new Array();break;}return newAppState;}","map":{"version":3,"sources":["C:/Users/Ben/Desktop/John Bryce/פרוייקטים/project3 - Vacations/client/src/Redux/Reducer.ts"],"names":["ActionType","reduce","oldAppState","action","newAppState","type","GetAllVacations","allVacations","payload","SetFollowedVacation","favoriteVacations","push","GetFavoriteVacations","UnfollowVacation","splice","AddVacation","UpdateVacation","indexOfClickedVacationInGlobalStore","convertedValidDataForUIDisplay","UpdateFavoriteVacation","indexOfClickedFavoriteVacationInGlobalStore","DeleteVacationViaSocketIO","DeleteFavoriteVacationViaSocketIO","IncreaseVacationFollowersCount","followersCount","newFollowersCount","IncreaseFavoriteVacationFollowersCount","indexOfFavoriteClickedVacationInGlobalStore","DecreaseVacationFollowersCount","DecreaseFavoriteVacationFollowersCount","DeleteVacation","OnUserLogout","Array"],"mappings":"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","sourcesContent":["import AppState from \"./AppState\";\r\nimport Action from \"./Action\";\r\nimport { ActionType } from \"./ActionType\";\r\nimport Vacation from \"../models/Vacation\";\r\n\r\n\r\n// --------------- This is the reducer (acts like a state machine) --------------- //\r\n\r\nexport default function reduce (oldAppState : AppState, action : Action): AppState {\r\n\r\n    // Copying the old app state, in order to modify it, based on the action\r\n    const newAppState = {...oldAppState};\r\n\r\n    switch (action.type) {\r\n        case ActionType.GetAllVacations:\r\n            newAppState.allVacations = [...action.payload];\r\n            break;\r\n\r\n        case ActionType.SetFollowedVacation:\r\n            newAppState.favoriteVacations.push(action.payload);\r\n            break;\r\n\r\n        case ActionType.GetFavoriteVacations:\r\n            newAppState.favoriteVacations = [...action.payload];\r\n            break;\r\n\r\n        case ActionType.UnfollowVacation:\r\n            newAppState.favoriteVacations.splice(action.payload, 1);\r\n            break;\r\n\r\n        case ActionType.AddVacation:\r\n            newAppState.allVacations.push(action.payload);\r\n            break;\r\n\r\n        case ActionType.UpdateVacation:\r\n            newAppState.allVacations[action.payload.indexOfClickedVacationInGlobalStore] = action.payload.convertedValidDataForUIDisplay;\r\n            break;\r\n        \r\n        case ActionType.UpdateFavoriteVacation:\r\n            newAppState.favoriteVacations[action.payload.indexOfClickedFavoriteVacationInGlobalStore] = action.payload.convertedValidDataForUIDisplay;\r\n            break;\r\n\r\n        case ActionType.DeleteVacationViaSocketIO:\r\n            newAppState.allVacations.splice(action.payload, 1);\r\n            break;\r\n\r\n        case ActionType.DeleteFavoriteVacationViaSocketIO:\r\n            newAppState.favoriteVacations.splice(action.payload, 1);\r\n            break;\r\n\r\n        case ActionType.IncreaseVacationFollowersCount:\r\n            newAppState.allVacations[action.payload.indexOfClickedVacationInGlobalStore].followersCount = action.payload.newFollowersCount;\r\n            break;\r\n\r\n        case ActionType.IncreaseFavoriteVacationFollowersCount:\r\n            newAppState.favoriteVacations[action.payload.indexOfFavoriteClickedVacationInGlobalStore].followersCount = action.payload.newFollowersCount;\r\n            break;\r\n\r\n        case ActionType.DecreaseVacationFollowersCount:\r\n            newAppState.allVacations[action.payload.indexOfClickedVacationInGlobalStore].followersCount = action.payload.newFollowersCount;\r\n            break;\r\n\r\n        case ActionType.DecreaseFavoriteVacationFollowersCount:\r\n            newAppState.favoriteVacations[action.payload.indexOfFavoriteClickedVacationInGlobalStore].followersCount = action.payload.newFollowersCount;\r\n            break;\r\n\r\n        case ActionType.DeleteVacation:\r\n            newAppState.allVacations.splice(action.payload, 1);\r\n            break;            \r\n\r\n        case ActionType.OnUserLogout:\r\n            // Clearing the user's favorite vacations on logout\r\n            newAppState.favoriteVacations = new Array <Vacation> ();\r\n            break;\r\n    }\r\n\r\n    return newAppState;\r\n}"]},"metadata":{},"sourceType":"module"}