{"ast":null,"code":"// Explanation -> The interceptor is a just JS variable (from 'axios' library). On refresh => it resets.\n// So, this Model takes the token the user got from the server (which is now inside the sessionStorage),\n// and assign it to the interceptor\n// Checking if the interceptor is empty\nexport const interceptorHandler = () => {// if (axios.defaults.headers.common['Authorization'] === undefined) {\n  //     let userData = JSON.parse(sessionStorage.getItem(\"userInfo\"));\n  //     // Checking if the user has a correct sessionStorage JSON\n  //     if (userData !== null) {\n  //         // Checking if the user has a token\n  //         if (userData.token !== undefined) {\n  //             let brearerToken = \"Bearer \" + userData.token;\n  //             axios.defaults.headers.common['Authorization'] = brearerToken;\n  //         }\n  //     }\n  // }\n};","map":{"version":3,"sources":["C:/Users/Ben/Desktop/John Bryce/פרוייקטים/project3 - Vacations/client/src/models/InterceptorHandler.ts"],"names":["interceptorHandler"],"mappings":"AAEA;AACA;AACA;AAEA;AACA,OAAO,MAAMA,kBAAkB,GAAG,MAAM,CAEpC;AAEA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACH,CAjBM","sourcesContent":["import axios from 'axios';\r\n\r\n// Explanation -> The interceptor is a just JS variable (from 'axios' library). On refresh => it resets.\r\n// So, this Model takes the token the user got from the server (which is now inside the sessionStorage),\r\n// and assign it to the interceptor\r\n\r\n// Checking if the interceptor is empty\r\nexport const interceptorHandler = () => {\r\n\r\n    // if (axios.defaults.headers.common['Authorization'] === undefined) {\r\n\r\n    //     let userData = JSON.parse(sessionStorage.getItem(\"userInfo\"));\r\n    \r\n    //     // Checking if the user has a correct sessionStorage JSON\r\n    //     if (userData !== null) {\r\n\r\n    //         // Checking if the user has a token\r\n    //         if (userData.token !== undefined) {\r\n    \r\n    //             let brearerToken = \"Bearer \" + userData.token;\r\n    //             axios.defaults.headers.common['Authorization'] = brearerToken;\r\n    //         }\r\n    //     }\r\n    // }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}