{"ast":null,"code":"import axios from 'axios';\n/*\r\n    Explanation -> This Model is called whenever a successful login has happaned\r\n    (Automatically after a successful login / after a regular login).\r\n\r\n    This Model is gesignated to prevent duplication of code from all components that needs to make this proccess.\r\n*/\n// ---------- Attaching the user's token to the interceptor ---------- //\n\nconst attachTokenToInterceptor = token => {\n  // Attaching the Token we received from the server, to every HTTP request we'll send from now on\n  // This is the 'Interceptor'\n  let brearerToken = \"Bearer \" + token;\n  axios.defaults.headers.common['Authorization'] = brearerToken;\n};\n\nexport const successfulLoginHandler = loginServerResponse => {\n  // Attaching the Token we received from the server, to every HTTP request we'll send from now on\n  // This is our 'Interceptor'\n  attachTokenToInterceptor(loginServerResponse.token); // ---------- Inserting the user's info to the sessionStorage ---------- //\n\n  let strUserInfo = JSON.stringify(loginServerResponse);\n  sessionStorage.setItem('userInfo', strUserInfo);\n};","map":{"version":3,"sources":["C:/Users/Ben/Desktop/John Bryce/פרוייקטים/project3 - Vacations/client/src/models/SuccessfulLoginHandler.ts"],"names":["axios","attachTokenToInterceptor","token","brearerToken","defaults","headers","common","successfulLoginHandler","loginServerResponse","strUserInfo","JSON","stringify","sessionStorage","setItem"],"mappings":"AACA,OAAOA,KAAP,MAAkB,OAAlB;AAEA;;;;;;AAQA;;AAEA,MAAMC,wBAAwB,GAAIC,KAAD,IAAmB;AAEhD;AACA;AAEA,MAAIC,YAAY,GAAG,YAAYD,KAA/B;AACAF,EAAAA,KAAK,CAACI,QAAN,CAAeC,OAAf,CAAuBC,MAAvB,CAA8B,eAA9B,IAAiDH,YAAjD;AACH,CAPD;;AAUA,OAAO,MAAMI,sBAAsB,GAAIC,mBAAD,IAAyD;AAE3F;AACA;AAEAP,EAAAA,wBAAwB,CAACO,mBAAmB,CAACN,KAArB,CAAxB,CAL2F,CAQ3F;;AAEA,MAAIO,WAAW,GAAGC,IAAI,CAACC,SAAL,CAAeH,mBAAf,CAAlB;AACAI,EAAAA,cAAc,CAACC,OAAf,CAAuB,UAAvB,EAAmCJ,WAAnC;AACH,CAZM","sourcesContent":["import SuccessfulLoginServerResponse from './SuccessfulLoginServerResponse';\r\nimport axios from 'axios';\r\n\r\n/*\r\n    Explanation -> This Model is called whenever a successful login has happaned\r\n    (Automatically after a successful login / after a regular login).\r\n\r\n    This Model is gesignated to prevent duplication of code from all components that needs to make this proccess.\r\n*/\r\n\r\n\r\n// ---------- Attaching the user's token to the interceptor ---------- //\r\n\r\nconst attachTokenToInterceptor = (token: string) => {\r\n\r\n    // Attaching the Token we received from the server, to every HTTP request we'll send from now on\r\n    // This is the 'Interceptor'\r\n\r\n    let brearerToken = \"Bearer \" + token;\r\n    axios.defaults.headers.common['Authorization'] = brearerToken;\r\n}\r\n\r\n\r\nexport const successfulLoginHandler = (loginServerResponse : SuccessfulLoginServerResponse) => {\r\n\r\n    // Attaching the Token we received from the server, to every HTTP request we'll send from now on\r\n    // This is our 'Interceptor'\r\n\r\n    attachTokenToInterceptor(loginServerResponse.token);\r\n\r\n    \r\n    // ---------- Inserting the user's info to the sessionStorage ---------- //\r\n\r\n    let strUserInfo = JSON.stringify(loginServerResponse);\r\n    sessionStorage.setItem('userInfo', strUserInfo);\r\n}"]},"metadata":{},"sourceType":"module"}