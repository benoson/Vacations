{"ast":null,"code":"","map":{"version":3,"sources":[],"names":[],"mappings":"","sourcesContent":["import axios from 'axios';\r\n\r\n// Explanation -> The interceptor is a just JS variable (from 'axios' library). On refresh => it resets.\r\n// So, this Model takes the token the user got from the server (which is now inside the sessionStorage),\r\n// and assign it to the interceptor\r\n\r\n// Checking if the interceptor is empty\r\n// export const interceptorHandler = () => {\r\n\r\n//     if (axios.defaults.headers.common['Authorization'] === undefined) {\r\n\r\n//         let userData = JSON.parse(sessionStorage.getItem(\"userInfo\"));\r\n    \r\n//         // Checking if the user has a correct sessionStorage JSON\r\n//         if (userData !== null) {\r\n\r\n//             // Checking if the user has a token\r\n//             if (userData.token !== undefined) {\r\n    \r\n//                 let brearerToken = \"Bearer \" + userData.token;\r\n//                 axios.defaults.headers.common['Authorization'] = brearerToken;\r\n//             }\r\n//         }\r\n//     }\r\n// }\r\n"]},"metadata":{},"sourceType":"module"}