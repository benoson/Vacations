{"ast":null,"code":"import _createForOfIteratorHelper from\"C:\\\\Users\\\\Ben\\\\Desktop\\\\John Bryce\\\\\\u05E4\\u05E8\\u05D5\\u05D9\\u05D9\\u05E7\\u05D8\\u05D9\\u05DD\\\\project3 - Vacations\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createForOfIteratorHelper\";import _slicedToArray from\"C:\\\\Users\\\\Ben\\\\Desktop\\\\John Bryce\\\\\\u05E4\\u05E8\\u05D5\\u05D9\\u05D9\\u05E7\\u05D8\\u05D9\\u05DD\\\\project3 - Vacations\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";import _regeneratorRuntime from\"C:\\\\Users\\\\Ben\\\\Desktop\\\\John Bryce\\\\\\u05E4\\u05E8\\u05D5\\u05D9\\u05D9\\u05E7\\u05D8\\u05D9\\u05DD\\\\project3 - Vacations\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";import _asyncToGenerator from\"C:\\\\Users\\\\Ben\\\\Desktop\\\\John Bryce\\\\\\u05E4\\u05E8\\u05D5\\u05D9\\u05D9\\u05E7\\u05D8\\u05D9\\u05DD\\\\project3 - Vacations\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";import _classCallCheck from\"C:\\\\Users\\\\Ben\\\\Desktop\\\\John Bryce\\\\\\u05E4\\u05E8\\u05D5\\u05D9\\u05D9\\u05E7\\u05D8\\u05D9\\u05DD\\\\project3 - Vacations\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";import _createClass from\"C:\\\\Users\\\\Ben\\\\Desktop\\\\John Bryce\\\\\\u05E4\\u05E8\\u05D5\\u05D9\\u05D9\\u05E7\\u05D8\\u05D9\\u05DD\\\\project3 - Vacations\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";import _inherits from\"C:\\\\Users\\\\Ben\\\\Desktop\\\\John Bryce\\\\\\u05E4\\u05E8\\u05D5\\u05D9\\u05D9\\u05E7\\u05D8\\u05D9\\u05DD\\\\project3 - Vacations\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";import _createSuper from\"C:\\\\Users\\\\Ben\\\\Desktop\\\\John Bryce\\\\\\u05E4\\u05E8\\u05D5\\u05D9\\u05D9\\u05E7\\u05D8\\u05D9\\u05DD\\\\project3 - Vacations\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";import React,{Component}from'react';import{store}from'../../Redux/Store';import axios from'axios';import{ActionType}from'../../Redux/ActionType';import{withRouter}from'react-router';import{NavLink}from'react-router-dom';import settingsImage from'../../assets/settingsImg.png';import deleteSVG from\"../../assets/deleteSVG.svg\";import spinningEarthSVG from\"../../assets/spinningEarthSVG.svg\";import{isUserLoggedValidator}from'../../models/IsUserLoggedValidator';import{interceptorHandler}from'../../models/InterceptorHandler';import{getUserInfoFromServerCache}from'../../models/GetUserInfoFromServerCache';import VacationComponent from'../vacationComponent/VacationComponent';import TextField from'@material-ui/core/TextField';import socketIOClient from\"socket.io-client\";import'./allVacations.css';import'../topNavbar/topNavbar.css';// ------------------------------------------------- This Component Displays All The Vacations The Website Has To Offer  ------------------------------------------------- //\nexport var AllVacations=/*#__PURE__*/function(_Component){_inherits(AllVacations,_Component);var _super=_createSuper(AllVacations);function AllVacations(props){var _this;_classCallCheck(this,AllVacations);_this=_super.call(this,props);_this.unSubscribeStore=void 0;_this.userTypeFromServerCache=void 0;_this.userNameFromServerCache=void 0;_this.imageToDeleteFromServer=void 0;_this.socket=void 0;_this.componentWillUnmount=function(){// Unsubscribing the store's listener right before the component will unmount\n// In order to make a small space optimization\n_this.unSubscribeStore();try{// Disconnecting from the socket connection\n_this.socket.disconnect();}catch(_unused){_this.vacationsErrorHandler('Something went wrong while trying to disconnect from Socket');}};_this.componentDidMount=/*#__PURE__*/_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var isUserLogged;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:// Optimizing a bit the memory leak of the store listener. Also subscribes automatically to the store\n_this.unSubscribeStore=store.subscribe(function(){return _this.setState({allVacations:store.getState().allVacations});});isUserLogged=isUserLoggedValidator();if(!isUserLogged){_context.next=6;break;}_context.next=5;return _this.getUserInfoFromServerCache();case 5:// Initiating the Socket connection to the server\n_this.initiateSocket();case 6:_this.checkIfGlobalStoraHasAllVacations();case 7:case\"end\":return _context.stop();}}},_callee);}));_this.getAllVacationsFromServer=/*#__PURE__*/_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(){var response,allVacations,errorMessage;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:_context2.prev=0;_context2.next=3;return axios.get('http://34.65.28.6:3001/vacations');case 3:response=_context2.sent;// Here we are receiving all the vacations from the server, as a JSON\nallVacations=response.data;// Insert all the vacations from the server to the Global Store\nstore.dispatch({type:ActionType.GetAllVacations,payload:allVacations});_context2.next=11;break;case 8:_context2.prev=8;_context2.t0=_context2[\"catch\"](0);// In case of an error, receiving the error, and displaying it in a Pop-Up UI message for the user\ntry{errorMessage=_context2.t0.response.data.error;_this.vacationsErrorHandler(errorMessage);}catch(_unused2){_this.vacationsErrorHandler(_context2.t0);}case 11:case\"end\":return _context2.stop();}}},_callee2,null,[[0,8]]);}));_this.followVacation=/*#__PURE__*/function(){var _ref3=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee3(clickedVacation){var likeButtonsNodeList,likeButtonsArr,clickedVacationID,socketInfo,errorMessage;return _regeneratorRuntime.wrap(function _callee3$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:// This function occurs after validations approved that this vacation can be liked by the user\ninterceptorHandler();// Defining all 'like' buttons in order to disable them until the request is done\nlikeButtonsNodeList=document.getElementsByClassName(\"likeBtn\");likeButtonsArr=Array.from(likeButtonsNodeList);_context3.prev=3;_this.disableButtonsGroup(likeButtonsArr);// Attempting to make a POST request to the server with the clicked vacation's ID, to follow that vacation\nclickedVacationID=clickedVacation.vacationID;_context3.next=8;return axios.post(\"http://34.65.28.6:3001/vacations/follow_vacation/\".concat(clickedVacationID));case 8:// Updating The Global Store\n// store.dispatch({type: ActionType.SetFollowedVacation, payload: clickedVacation});\n// Emitting a socket message to the server, in order to inform all clients about the new followed vacation in the UI\nsocketInfo={clickedVacationID:clickedVacationID,userName:_this.userNameFromServerCache};_this.socket.emit('increase-vacation-followers-count',socketInfo);_context3.next=15;break;case 12:_context3.prev=12;_context3.t0=_context3[\"catch\"](3);try{errorMessage=_context3.t0.response.data.error;_this.vacationsErrorHandler(errorMessage);}catch(_unused3){_this.vacationsErrorHandler(_context3.t0);}case 15:_context3.prev=15;_this.enableButtonsGroup(likeButtonsArr);return _context3.finish(15);case 18:case\"end\":return _context3.stop();}}},_callee3,null,[[3,12,15,18]]);}));return function(_x){return _ref3.apply(this,arguments);};}();_this.unfollowVacation=/*#__PURE__*/function(){var _ref4=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee4(clickedVacation){var likeButtonsNodeList,likeButtonsArr,clickedVacationID,socketInfo,errorMessage;return _regeneratorRuntime.wrap(function _callee4$(_context4){while(1){switch(_context4.prev=_context4.next){case 0:// This function is designated to make the user 'unfollow' a vacation\ninterceptorHandler();// Defining all 'like' buttons in order to disable them until the request is done\nlikeButtonsNodeList=document.getElementsByClassName(\"likeBtn\");likeButtonsArr=Array.from(likeButtonsNodeList);_context4.prev=3;_this.disableButtonsGroup(likeButtonsArr);// Attempting to make a POST request to the server with the clicked vacation's ID, to unfollow a vacation\nclickedVacationID=clickedVacation.vacationID;_context4.next=8;return axios.post(\"http://34.65.28.6:3001/vacations/unfollow_vacation/\".concat(clickedVacationID));case 8:// Emitting a socket message to the server, in order to inform all clients about the new unfollowed vacation in the UI\nsocketInfo={clickedVacationID:clickedVacationID,userName:_this.userNameFromServerCache};_this.socket.emit('decrease-vacation-followers-count',socketInfo);_context4.next=15;break;case 12:_context4.prev=12;_context4.t0=_context4[\"catch\"](3);try{errorMessage=_context4.t0.response.data.error;_this.vacationsErrorHandler(errorMessage);}catch(_unused4){_this.vacationsErrorHandler(_context4.t0);}case 15:_context4.prev=15;_this.enableButtonsGroup(likeButtonsArr);return _context4.finish(15);case 18:case\"end\":return _context4.stop();}}},_callee4,null,[[3,12,15,18]]);}));return function(_x2){return _ref4.apply(this,arguments);};}();_this.addVacation=/*#__PURE__*/function(){var _ref5=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee5(addModalBackground){var allInputsArr,_this$validateNewVaca,_this$validateNewVaca2,isNewVacationDataValid,newVacationData,serverResponse,newlyAddedVacation,errorMessage;return _regeneratorRuntime.wrap(function _callee5$(_context5){while(1){switch(_context5.prev=_context5.next){case 0:allInputsArr=_this.getAllInputsArrForAddedVacation();// Validating that all the fields of the added vacation are valid\n_this$validateNewVaca=_this.validateNewVacationData(allInputsArr),_this$validateNewVaca2=_slicedToArray(_this$validateNewVaca,2),isNewVacationDataValid=_this$validateNewVaca2[0],newVacationData=_this$validateNewVaca2[1];if(!isNewVacationDataValid){_context5.next=17;break;}interceptorHandler();_context5.prev=4;_context5.next=7;return axios.post(\"http://34.65.28.6:3001/vacations/add_vacation\",newVacationData);case 7:serverResponse=_context5.sent;newlyAddedVacation=serverResponse.data[0];// Emitting a socket command to the server, in order to inform all clients about the new vacation\n_this.socket.emit('add-vacation',newlyAddedVacation);_this.hideModal(addModalBackground);_context5.next=17;break;case 13:_context5.prev=13;_context5.t0=_context5[\"catch\"](4);errorMessage=_context5.t0.response.data.error;_this.vacationsErrorHandler(errorMessage);case 17:case\"end\":return _context5.stop();}}},_callee5,null,[[4,13]]);}));return function(_x3){return _ref5.apply(this,arguments);};}();_this.updateVacation=/*#__PURE__*/function(){var _ref6=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee6(clickedVacation,editModalBackground){var allInputsArr,_this$validateNewVaca3,_this$validateNewVaca4,isNewVacationDataValid,newVacationData,convertedValidDataForUIDisplay,clickedVacationID,response,imageToPreview,errorMessage;return _regeneratorRuntime.wrap(function _callee6$(_context6){while(1){switch(_context6.prev=_context6.next){case 0:allInputsArr=_this.getAllInputsArrForUpdatedVacation();// Validating all fields of the updated vacation are valid, and getting back the valid data\n_this$validateNewVaca3=_this.validateNewVacationData(allInputsArr),_this$validateNewVaca4=_slicedToArray(_this$validateNewVaca3,2),isNewVacationDataValid=_this$validateNewVaca4[0],newVacationData=_this$validateNewVaca4[1];if(!isNewVacationDataValid){_context6.next=20;break;}// Converting the data to for suitable UI display -> preventing retrieving the updated vacation from the DB\nconvertedValidDataForUIDisplay=_this.convertVacationDataForUIDisplay(allInputsArr,clickedVacation);interceptorHandler();_context6.prev=5;clickedVacationID=clickedVacation.vacationID;_context6.next=9;return axios.put(\"http://34.65.28.6:3001/vacations/update_vacation/\".concat(clickedVacationID),{newVacationData:newVacationData,imageToDeleteFromServer:_this.imageToDeleteFromServer});case 9:response=_context6.sent;imageToPreview=response.data;convertedValidDataForUIDisplay.imageURL=imageToPreview;// Emitting a socket command to the server, in order to inform all clients about the updated vacation\n_this.socket.emit('update-vacation-info',convertedValidDataForUIDisplay);_this.hideModal(editModalBackground);_context6.next=20;break;case 16:_context6.prev=16;_context6.t0=_context6[\"catch\"](5);errorMessage=_context6.t0.response.data.error;_this.vacationsErrorHandler(errorMessage);case 20:case\"end\":return _context6.stop();}}},_callee6,null,[[5,16]]);}));return function(_x4,_x5){return _ref6.apply(this,arguments);};}();_this.deleteVacation=/*#__PURE__*/function(){var _ref7=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee7(clickedVacationID){var imageToDeleteFromServer,errorMessage;return _regeneratorRuntime.wrap(function _callee7$(_context7){while(1){switch(_context7.prev=_context7.next){case 0:interceptorHandler();_context7.prev=1;imageToDeleteFromServer=_this.imageToDeleteFromServer;_context7.next=5;return axios.post(\"http://34.65.28.6:3001/vacations/delete_vacation/\".concat(clickedVacationID),{imageToDeleteFromServer:imageToDeleteFromServer});case 5:// Emitting a socket command to the server, in order to inform all clients about the new deleted vacation\n_this.socket.emit('delete-vacation',clickedVacationID);_context7.next=12;break;case 8:_context7.prev=8;_context7.t0=_context7[\"catch\"](1);errorMessage=_context7.t0.response.data.error;_this.vacationsErrorHandler(errorMessage);case 12:case\"end\":return _context7.stop();}}},_callee7,null,[[1,8]]);}));return function(_x6){return _ref7.apply(this,arguments);};}();_this.getUserInfoFromServerCache=/*#__PURE__*/_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee8(){var userInfoFromServerCache,errorMessage;return _regeneratorRuntime.wrap(function _callee8$(_context8){while(1){switch(_context8.prev=_context8.next){case 0:_context8.prev=0;_context8.next=3;return getUserInfoFromServerCache();case 3:userInfoFromServerCache=_context8.sent;_this.userTypeFromServerCache=userInfoFromServerCache.userType;_this.userNameFromServerCache=userInfoFromServerCache.userName;_context8.next=11;break;case 8:_context8.prev=8;_context8.t0=_context8[\"catch\"](0);try{errorMessage=_context8.t0.response.data.error;_this.vacationsErrorHandler(errorMessage);}catch(_unused5){_this.vacationsErrorHandler(_context8.t0);}case 11:case\"end\":return _context8.stop();}}},_callee8,null,[[0,8]]);}));_this.checkIfGlobalStoraHasAllVacations=function(){// Checking if the Gloabl Store has all the vacations to display, and if not, get them from the server\nvar allVacationsInGlobalStore=store.getState().allVacations;if(allVacationsInGlobalStore.length===0){_this.getAllVacationsFromServer();}else{_this.setState({allVacations:allVacationsInGlobalStore});}};_this.registerAllSocketListeners=function(){// Registering all Socket.io Listeners\n// Registering an 'add vacation' listener, which updates the UI for all the clients\n_this.socket.on('add-vacation',function(newlyAddedVacation){_this.addVacationViaSocketIO(newlyAddedVacation);});// Registering an 'update vacation' listener, which updates the UI for all the clients\n_this.socket.on('update-vacation-info',function(convertedValidDataForUIDisplay){_this.updateVacationInfoViaSocketIO(convertedValidDataForUIDisplay);});// Registering a 'delete vacation' listener, which updates the UI for all the clients\n_this.socket.on('delete-vacation',function(clickedVacationID){_this.deleteVacationViaSocketIO(clickedVacationID);});// Registering an 'increase vacation followers count' listener, which updates the UI for all the clients\n_this.socket.on('increase-vacation-followers-count',function(socketInfo){_this.increaseVacationFollowersCountViaSocketIO(socketInfo);});// Registering a 'decrease vacation followers count' listener, which updates the UI for all the clients\n_this.socket.on('decrease-vacation-followers-count',function(socketInfo){_this.decreaseVacationFollowersCountViaSocketIO(socketInfo);});};_this.convertVacationDataForUIDisplay=function(inputsArr,clickedVacation){// This function gets a vacation data that the admin has changed locally, and converts it to display it locally (without reaching for the DB)\nvar clickedVacationID=clickedVacation.vacationID;var clickedVacationFollowersCount=clickedVacation.followersCount;var newNameTrimmedValue=inputsArr[0].value.trim();var vacationStartDateValue=inputsArr[1].value;var vacationEndDateValue=inputsArr[2].value;var newPriceValue=inputsArr[3].valueAsNumber;var newDescriptionTrimmedValue=inputsArr[4].value.trim();var newVacationURL=inputsArr[5].value.trim();var convertedStartDate=_this.convertStartDateForUIDisplay(vacationStartDateValue);var convertedEndDate=_this.convertEndDateForUIDisplay(vacationEndDateValue);// Creating the converted vacation UI display object\nvar convertedValidDataForUIDisplay={vacationID:clickedVacationID,vacationName:newNameTrimmedValue,startDate:convertedStartDate,endDate:convertedEndDate,vacationPrice:newPriceValue,vacationDescription:newDescriptionTrimmedValue,imageURL:newVacationURL,followersCount:clickedVacationFollowersCount};return convertedValidDataForUIDisplay;};_this.convertStartDateForUIDisplay=function(vacationStartDateValue){// This function converts the start date of a given vacation, to be suitable for the UI\nvar startDateYear=+vacationStartDateValue.split('-')[2];var startDateMonth=+vacationStartDateValue.split('-')[1];var startDateDay=+vacationStartDateValue.split('-')[0];var fullStartDate=startDateYear+\"/\"+startDateMonth+\"/\"+startDateDay;return fullStartDate;};_this.convertEndDateForUIDisplay=function(vacationEndDateValue){// This function converts the start date of a given vacation, to be suitable for the UI\nvar endDateYear=+vacationEndDateValue.split('-')[2];var endDateMonth=+vacationEndDateValue.split('-')[1];var endDateDay=+vacationEndDateValue.split('-')[0];var fullEndDate=endDateYear+\"/\"+endDateMonth+\"/\"+endDateDay;return fullEndDate;};_this.getAllInputsArrForAddedVacation=function(){// Defining, and returning an array of all the inputs inside the 'Add Vacation' modal\nvar vacationName=document.querySelector(\"#addedVacationName\");var vacationStartDate=document.querySelector(\"#addStartDate\");var vacationEndDate=document.querySelector(\"#addEndDate\");var vacationPrice=document.querySelector(\"#addedVacationPrice\");var vacationDescription=document.querySelector(\"#addedVacationDescription\");var vacationImageURL=document.querySelector(\"#addedVacationImageURL\");var allInputsArr=[vacationName,vacationStartDate,vacationEndDate,vacationPrice,vacationDescription,vacationImageURL];return allInputsArr;};_this.getAllInputsArrForUpdatedVacation=function(){// Defining, and returning an array of all the inputs inside the 'Update Vacation' modal\nvar vacationName=document.querySelector(\"#editedVacationName\");var vacationStartDate=document.querySelector(\"#editStartDate\");var vacationEndDate=document.querySelector(\"#editEndDate\");var vacationPrice=document.querySelector(\"#editedVacationPrice\");var vacationDescription=document.querySelector(\"#editedVacationDescription\");var vacationImageURL=document.querySelector(\"#editedVacationImageURL\");var allInputsArr=[vacationName,vacationStartDate,vacationEndDate,vacationPrice,vacationDescription,vacationImageURL];return allInputsArr;};_this.onVacationFollowAttempt=function(clickedVacation){/*\r\n            Before the 'follow' action, checking if the user is currently logged in.\r\n            This validation is made because a user might delete his token before trying\r\n            to like a vacation. In that case, throw him out to login again.\r\n        */ // Using a Model I made to check if the user is still logged (Preventing duplication of code from all components that needs to make this validation).\nvar isUserLogged=isUserLoggedValidator();// If the user is currently logged in\nif(isUserLogged){// checking if the user hasn't liked this vacation already\nvar vacationIsNotAlreadyLikedByTheUser=_this.validateVacationIsNotLikedByTheUser(clickedVacation);// If the vacation selected is not already liked by the user, follow that vacation\nif(vacationIsNotAlreadyLikedByTheUser){_this.followVacation(clickedVacation);}// If the vacation selected is already liked by the user, unfollow that vacation.\nelse{_this.unfollowVacation(clickedVacation);}}// In case a guest tried to follow a vacation, send him to the login page in order for him to login\nelse{_this.props.history.push('/login');}};_this.validateVacationIsNotLikedByTheUser=function(clickedVacation){// Validating the vacation chosen is not already liked by the user\nvar favoriteVacationsFromGlobalState=store.getState().favoriteVacations;var clickedVacationID=clickedVacation.vacationID;// Searching the clicked vacation's ID inside our global store\nvar clickedVacationInGlobalStore=favoriteVacationsFromGlobalState.find(function(favoriteVacation){return favoriteVacation.vacationID===clickedVacationID;});// If no result came back (if the user hasn't liked this vacation already)\nif(clickedVacationInGlobalStore===undefined){return true;}return false;};_this.getIndexOfVacationByID=function(vacationID){// Finding and returning an index of a vacation from the Global Store's 'all vacations' array\nvar allVacations=store.getState().allVacations;var clickedVacationInGlobalStore=allVacations.find(function(allVacations){return allVacations.vacationID===vacationID;});var indexOfClickedVacationInGlobalStore=allVacations.indexOf(clickedVacationInGlobalStore);return indexOfClickedVacationInGlobalStore;};_this.getIndexOfFavoriteVacationByID=function(vacationID){// Finding and returning an index of a vacation from the Global Store's 'favorites' array\nvar favoriteVacations=store.getState().favoriteVacations;var clickedVacationInGlobalStore=favoriteVacations.find(function(favoriteVacation){return favoriteVacation.vacationID===vacationID;});var indexOfClickedVacationInGlobalStore=favoriteVacations.indexOf(clickedVacationInGlobalStore);return indexOfClickedVacationInGlobalStore;};_this.onVacationAdditionAttempt=function(){/*\r\n            Before the 'add' action, checking if the user is currently logged in.\r\n            This validation is made because a user might delete his token before trying\r\n            to delete a vacation. In that case, throw him out to login again.\r\n        */ // Using a Model I made to check if the user is still logged (Preventing duplication of code from all components that needs to make this validation).\nvar isUserLogged=isUserLoggedValidator();if(isUserLogged){_this.displayAdditionModal();}// If the Admin has decided to delete his Token from the sessionStorage, throw him out to login again\nelse{_this.props.history.push('/login');}};_this.onVacationEditAttempt=function(clickedVacation,event){/*\r\n            Before the 'edit' action, checking if the user is currently logged in.\r\n            This validation is made because a user might delete his token before trying\r\n            to edit a vacation. In that case, throw him out to login again.\r\n        */ // Using a Model I made to check if the user is still logged (Preventing duplication of code from all components that needs to make this validation).\nvar isUserLogged=isUserLoggedValidator();if(isUserLogged){var button=event.target;_this.disableButton(button);_this.displayEditModal(clickedVacation);_this.enableButton(button);}// If the Admin has decided to delete his Token from the sessionStorage, throw him out to login again\nelse{_this.props.history.push('/login');}};_this.onVacationDeleteAttempt=function(clickedVacation,event){/*\r\n            Before the 'delete' action, checking if the user is currently logged in.\r\n            This validation is made because a user might delete his token before trying\r\n            to delete a vacation. In that case, throw him out to login again.\r\n        */ // Using a Model I made to check if the user is still logged (Preventing duplication of code from all components that needs to make this validation).\nvar isUserLogged=isUserLoggedValidator();if(isUserLogged){var button=event.target;_this.disableButton(button);_this.displayDeletionModal(clickedVacation);_this.enableButton(button);}// If the Admin has decided to delete his Token from the sessionStorage, throw him out to login again\nelse{_this.props.history.push('/login');}};_this.validateNewVacationData=function(inputsArr){// This function validates all the Modal's fields are valid\nvar newNameTrimmedValue=inputsArr[0].value.trim();var vacationStartDateValue=inputsArr[1].value;var vacationEndDateValue=inputsArr[2].value;var newPriceValue=inputsArr[3].valueAsNumber;var newDescriptionTrimmedValue=inputsArr[4].value.trim();var newVacationURL=inputsArr[5].value.trim();// Validating all Modal fields are valid\nvar isNewVacationURLValid=_this.validateNewVacationURL(newVacationURL);var isNewDescriptionValid=_this.validateNewDescription(newDescriptionTrimmedValue);var isNewPriceValid=_this.validateNewPrice(newPriceValue);var areDatesValid=_this.validateNewDates(vacationStartDateValue,vacationEndDateValue);var isNewNameValid=_this.validateNewName(newNameTrimmedValue);if(isNewNameValid){if(isNewPriceValid){if(isNewDescriptionValid){if(areDatesValid){if(isNewVacationURLValid){// Creating an object that has all the necessary data for adding / updating a vacation locally\nvar newVacationData={vacationName:newNameTrimmedValue,vacationPrice:newPriceValue,vacationDescription:newDescriptionTrimmedValue,startDate:vacationStartDateValue,endDate:vacationEndDateValue,imageURL:newVacationURL};// retrning the data + a 'true', in order to inform the caller that the data is valid\nreturn[true,newVacationData];}}}}}// In case one of the parameters of the updated vacation is not valid\nreturn[false,{}];};_this.validateNewName=function(newTrimmedName){// Validating the vacation's name inside the Modal\nif(newTrimmedName!==\"\"){if(newTrimmedName.length>=3){if(newTrimmedName.length<=44){return true;}}}_this.vacationsErrorHandler(\"The new name must be between 3 - 44 characters long\");return false;};_this.validateNewPrice=function(newPrice){// Validating the vacation's price inside the Modal\nif(newPrice>0){if(newPrice<100000){return true;}}_this.vacationsErrorHandler(\"The new price must be larger than 0 and Lower than 100,000\");return false;};_this.validateNewDescription=function(newTrimmedDescription){// Validating the vacation's description inside the Modal\nif(newTrimmedDescription!==\"\"){if(newTrimmedDescription.length>=5){if(newTrimmedDescription.length<=249){return true;}}}_this.vacationsErrorHandler(\"The new description must be between 5 - 249 characters long\");return false;};_this.validateNewDates=function(newVacationStartDate,newVacationEndDate){// Validating the logic of the dates inputs in the 'add Modal'\nif(newVacationStartDate!==\"\"){if(newVacationStartDate!==undefined){if(newVacationEndDate!==\"\"){if(newVacationEndDate!==undefined){var currentDate=new Date().setHours(0,0,0,0);var startDate=new Date(newVacationStartDate).setHours(0,0,0,0);var endDate=new Date(newVacationEndDate).setHours(0,0,0,0);// Checking if the starting date is not in the past\nif(startDate>=currentDate){// Checking if the ending date is greater than the starting date\nif(endDate>startDate){return true;}else{_this.vacationsErrorHandler(\"The return date must be later than the starting date\");return false;}}else{_this.vacationsErrorHandler(\"The starting date must be later than today\");return false;}}}}}_this.vacationsErrorHandler(\"Vacation Dates Not Valid, Try Again\");return false;};_this.validateNewVacationURL=function(newTrimmedImageURL){// Validating the vacation's URL inside the Modal\nif(newTrimmedImageURL!==\"\"){if(newTrimmedImageURL.length>=10){if(newTrimmedImageURL.length<=998){return true;}}}_this.vacationsErrorHandler(\"Image URL must be between 10 - 998 characters long\");return false;};_this.addVacationViaSocketIO=function(newlyAddedVacation){// This function occurs whenever an admin adds a new vacation (the listener triggers this function using a Socket.io message).\n// Updating the Global Store with the new vacation, in order to update the UI\nstore.dispatch({type:ActionType.AddVacation,payload:newlyAddedVacation});};_this.updateVacationInfoViaSocketIO=function(convertedValidDataForUIDisplay){// Updating the user's UI with the vacation that was updated (edited) by the admin, via Socket.io\n// Finding the indexes of the changed vacation in the Global Store, and updating them locally\nvar updatedVacationID=convertedValidDataForUIDisplay.vacationID;var indexOfClickedFavoriteVacationInGlobalStore=_this.getIndexOfFavoriteVacationByID(updatedVacationID);var indexOfClickedVacationInGlobalStore=_this.getIndexOfVacationByID(updatedVacationID);// Updating the vacations in the 'all vacations' component\nstore.dispatch({type:ActionType.UpdateVacation,payload:{indexOfClickedVacationInGlobalStore:indexOfClickedVacationInGlobalStore,convertedValidDataForUIDisplay:convertedValidDataForUIDisplay}});// Updating the vacations in the user's 'favorite vacations' component\nif(indexOfClickedFavoriteVacationInGlobalStore!==-1){store.dispatch({type:ActionType.UpdateFavoriteVacation,payload:{indexOfClickedFavoriteVacationInGlobalStore:indexOfClickedFavoriteVacationInGlobalStore,convertedValidDataForUIDisplay:convertedValidDataForUIDisplay}});}};_this.deleteVacationViaSocketIO=function(clickedVacationID){// Updating the user's UI with the vacation that was deleted by the admin, via Socket.io\n// Finding the indexes of the changed vacation in the Global Store, and updating them locally\nvar indexOfClickedFavoriteVacationInGlobalStore=_this.getIndexOfFavoriteVacationByID(clickedVacationID);var indexOfClickedVacationInGlobalStore=_this.getIndexOfVacationByID(clickedVacationID);// Updating the vacations in the 'all vacations' component\nstore.dispatch({type:ActionType.DeleteVacationViaSocketIO,payload:indexOfClickedVacationInGlobalStore});// Checking if the user has liked this vacation\n// Updating the vacations in the user's 'favorite vacations' component\nif(indexOfClickedFavoriteVacationInGlobalStore!==-1){store.dispatch({type:ActionType.DeleteFavoriteVacationViaSocketIO,payload:indexOfClickedFavoriteVacationInGlobalStore});}};_this.increaseVacationFollowersCountViaSocketIO=function(socketInfo){// Updating the user's UI with the followers count of the vacation that was liked by other users, via Socket.io\n// Finding the indexes of the changed vacation in the Global Store, and updating them locally\nvar indexOfClickedVacationInGlobalStore=_this.getIndexOfVacationByID(socketInfo.clickedVacationID);var indexOfFavoriteClickedVacationInGlobalStore=_this.getIndexOfFavoriteVacationByID(socketInfo.clickedVacationID);var newFollowersCount=store.getState().allVacations[indexOfClickedVacationInGlobalStore].followersCount+1;// Checking if the user has liked this vacation\nif(indexOfFavoriteClickedVacationInGlobalStore!==-1){// Updating the vacation's followers count in the UI\nstore.dispatch({type:ActionType.IncreaseFavoriteVacationFollowersCount,payload:{indexOfFavoriteClickedVacationInGlobalStore:indexOfFavoriteClickedVacationInGlobalStore,newFollowersCount:newFollowersCount}});}// Updating the vacation's followers count in the UI\nstore.dispatch({type:ActionType.IncreaseVacationFollowersCount,payload:{indexOfClickedVacationInGlobalStore:indexOfClickedVacationInGlobalStore,newFollowersCount:newFollowersCount}});_this.checkIfUserShouldIncreaseFollowersCountInUI(socketInfo);};_this.decreaseVacationFollowersCountViaSocketIO=function(socketInfo){// Updating the user's UI with the followers count of the vacation that was unliked by other users, via Socket.io\n// Finding the indexes of the changed vacation in the Global Store, and updating them locally\nvar indexOfClickedVacationInGlobalStore=_this.getIndexOfVacationByID(socketInfo.clickedVacationID);var indexOfFavoriteClickedVacationInGlobalStore=_this.getIndexOfFavoriteVacationByID(socketInfo.clickedVacationID);var newFollowersCount=store.getState().allVacations[indexOfClickedVacationInGlobalStore].followersCount-1;// Checking if the user has liked this vacation\nif(indexOfFavoriteClickedVacationInGlobalStore!==-1){// Updating the vacation's followers count in the UI\nstore.dispatch({type:ActionType.DecreaseFavoriteVacationFollowersCount,payload:{indexOfFavoriteClickedVacationInGlobalStore:indexOfFavoriteClickedVacationInGlobalStore,newFollowersCount:newFollowersCount}});}// Updating the vacation's followers count in the UI\nstore.dispatch({type:ActionType.DecreaseVacationFollowersCount,payload:{indexOfClickedVacationInGlobalStore:indexOfClickedVacationInGlobalStore,newFollowersCount:newFollowersCount}});_this.checkIfUserShouldDecreaseFollowersCountInUI(socketInfo);};_this.checkIfUserShouldIncreaseFollowersCountInUI=function(socketInfo){var clickedVacationID=socketInfo.clickedVacationID;var clickedVacationIndex=_this.getIndexOfVacationByID(clickedVacationID);var clickedVacation=store.getState().allVacations[clickedVacationIndex];if(_this.userNameFromServerCache===socketInfo.userName){store.dispatch({type:ActionType.SetFollowedVacation,payload:clickedVacation});};};_this.checkIfUserShouldDecreaseFollowersCountInUI=function(socketInfo){var clickedVacationID=socketInfo.clickedVacationID;var clickedVacationIndex=_this.getIndexOfFavoriteVacationByID(clickedVacationID);if(_this.userNameFromServerCache===socketInfo.userName){store.dispatch({type:ActionType.UnfollowVacation,payload:clickedVacationIndex});};};_this.initiateSocket=function(){// Connecting to the server's socket\nvar userTokenForSocketIdentification=JSON.parse(sessionStorage.getItem('userInfo')).token;_this.socket=socketIOClient('http://34.65.28.6:3002',{query:\"userToken=\"+userTokenForSocketIdentification});_this.registerAllSocketListeners();};_this.disableButton=function(button){button.disabled=true;button.style.cursor=\"not-allowed\";};_this.enableButton=function(button){button.disabled=false;button.style.cursor=\"pointer\";};_this.disableButtonsGroup=function(buttonsGroup){var _iterator=_createForOfIteratorHelper(buttonsGroup),_step;try{for(_iterator.s();!(_step=_iterator.n()).done;){var button=_step.value;_this.disableButton(button);}}catch(err){_iterator.e(err);}finally{_iterator.f();}};_this.enableButtonsGroup=function(buttonsGroup){var _iterator2=_createForOfIteratorHelper(buttonsGroup),_step2;try{for(_iterator2.s();!(_step2=_iterator2.n()).done;){var button=_step2.value;_this.enableButton(button);}}catch(err){_iterator2.e(err);}finally{_iterator2.f();}};_this.vacationsErrorHandler=function(errorMessage){// Letting the user know he received an error, by displaying a Pop-Up Message at the bottom of the screen\nvar snackbar=document.querySelector(\"#snackbar\");snackbar.className=\"show\";snackbar.textContent=errorMessage;setTimeout(function(){snackbar.className=snackbar.className.replace(\"show\",\"\");},6000);};_this.displayVacationNameInEditModal=function(clickedVacationName){// Displaying 'Edit' Modal Name\nvar editedVacationNameField=document.querySelector(\"#editedVacationName\");editedVacationNameField.value=clickedVacationName;};_this.displayVacationPriceInEditModal=function(clickedVacationPrice){// Dusplaying 'Edit' Modal Price\nvar editedVacationPriceField=document.querySelector(\"#editedVacationPrice\");editedVacationPriceField.valueAsNumber=clickedVacationPrice;};_this.displayVacationDatesInEditModal=function(clickedVacationStartDate,clickedVacationEndDate){// Displaying 'Edit' Modal Dates\nvar editStartDateField=document.querySelector(\"#editStartDate\");var editEndDateField=document.querySelector(\"#editEndDate\");// Start Date\nvar startDateYear=+clickedVacationStartDate.split('/')[2];var startDateMonth=+clickedVacationStartDate.split('/')[1];var startDateDay=+clickedVacationStartDate.split('/')[0];var fullStartDate=startDateYear+\"-\"+startDateMonth+\"-\"+startDateDay;// End Date\nvar endDateYear=+clickedVacationEndDate.split('/')[2];var endDateMonth=+clickedVacationEndDate.split('/')[1];var endDateDay=+clickedVacationEndDate.split('/')[0];var fullEndDate=endDateYear+\"-\"+endDateMonth+\"-\"+endDateDay;editStartDateField.valueAsDate=new Date(fullStartDate);editEndDateField.valueAsDate=new Date(fullEndDate);};_this.displayVacationDescriptionInEditModal=function(clickedVacationDescription){// Displaying 'Edit' Modal Description\nvar editVacationDescriptionField=document.querySelector(\"#editedVacationDescription\");editVacationDescriptionField.value=clickedVacationDescription;};_this.displayVacationImageInEditModal=function(clickedVacationImageURL){var editedVacationImageURL=document.querySelector(\"#editedVacationImageURL\");editedVacationImageURL.value=clickedVacationImageURL;};_this.displayAdditionModal=function(){// Defining the 'Add' Modal in the UI\nvar addModalBackground=document.querySelector(\"#addModalContainer\");var addModalDoneBtn=document.querySelector(\"#addModalDoneBtn\");var addModalCancelBtn=document.querySelector(\"#addModalCancelBtn\");addModalBackground.style.display=\"block\";// Defining the event listeners for the modal\naddModalCancelBtn.onclick=function(){_this.hideModal(addModalBackground);};addModalDoneBtn.onclick=function(){_this.addVacation(addModalBackground);};window.addEventListener(\"click\",function(event){if(event.target===addModalBackground){_this.hideModal(addModalBackground);}});};_this.displayEditModal=function(clickedVacation){// Defining the 'Edit' Modal in the UI\nvar editModalBackground=document.querySelector(\"#editModalContainer\");var editModalIcon=document.querySelector(\"#editModalIcon\");var editModalHeader=document.querySelector(\"#editModalHeader\");var editModalDoneBtn=document.querySelector(\"#editModalDoneBtn\");var editModalCancelBtn=document.querySelector(\"#editModalCancelBtn\");// Displaying the values inside the 'Edit' Modal\n_this.displayVacationNameInEditModal(clickedVacation.vacationName);_this.displayVacationPriceInEditModal(clickedVacation.vacationPrice);_this.displayVacationDescriptionInEditModal(clickedVacation.vacationDescription);_this.displayVacationDatesInEditModal(clickedVacation.startDate,clickedVacation.endDate);_this.displayVacationImageInEditModal(clickedVacation.imageURL);_this.imageToDeleteFromServer=clickedVacation.imageURL;editModalBackground.style.display=\"block\";editModalHeader.textContent=\"Update \".concat(clickedVacation.vacationName);editModalIcon.src=clickedVacation.imageURL;// Defining the event listeners for the modal\neditModalCancelBtn.onclick=function(){_this.hideModal(editModalBackground);};editModalDoneBtn.onclick=function(){_this.updateVacation(clickedVacation,editModalBackground);};window.onclick=function(event){if(event.target===editModalBackground){editModalBackground.style.display=\"none\";}};};_this.displayDeletionModal=function(clickedVacation){var clickedVacationID=clickedVacation.vacationID;var deletionModalBackground=document.querySelector(\"#deletionModalContainer\");var deletionModalHeader=document.querySelector(\"#deletionModalHeader\");var deletionModalTextParagraph=document.querySelector(\"#deletionModalText\");var deleteBtn=document.querySelector(\"#deleteBtn\");var dontDeleteBtn=document.querySelector(\"#dontDeleteBtn\");var deletionModalVacationName=document.querySelector(\"#deletionModalVacationName\");deletionModalBackground.style.display=\"block\";deletionModalHeader.textContent=\"Confirm Your Deletion\";deletionModalTextParagraph.textContent=\"Are You Sure You Would Like To Delete\";deletionModalVacationName.textContent=\"\".concat(clickedVacation.vacationName,\" ?\");_this.imageToDeleteFromServer=clickedVacation.imageURL;// Defining the event listeners for the modal\ndontDeleteBtn.onclick=function(){_this.hideModal(deletionModalBackground);};deleteBtn.onclick=function(){_this.deleteVacation(clickedVacationID);_this.hideModal(deletionModalBackground);};window.onclick=function(event){if(event.target===deletionModalBackground){deletionModalBackground.style.display=\"none\";}};};_this.clearModalInputs=function(){// Clearing the inputs of the 'Add' Modal\nvar additionModalNameInput=document.querySelector(\"#addedVacationName\");var additionModalStartDateInput=document.querySelector(\"#addStartDate\");var additionModalEndDateInput=document.querySelector(\"#addEndDate\");var additionModalPriceInput=document.querySelector(\"#addedVacationPrice\");var additionModalDescriptionInput=document.querySelector(\"#addedVacationDescription\");var additionModalImageURLInput=document.querySelector(\"#addedVacationImageURL\");additionModalNameInput.value=\"\";additionModalStartDateInput.value=\"\";additionModalEndDateInput.value=\"\";additionModalPriceInput.valueAsNumber=0;additionModalDescriptionInput.value=\"\";additionModalImageURLInput.value=\"\";};_this.hideModal=function(modal){modal.style.display=\"none\";_this.clearModalInputs();};_this.state={allVacations:new Array()};return _this;}// ------------------------------------------------- Component Settings ------------------------------------------------- //\n_createClass(AllVacations,[{key:\"render\",value:function render(){var _this2=this;return/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(\"div\",{className:\"allVacationsSection\",id:\"allVacationsSection\"},this.userTypeFromServerCache===\"ADMIN\"&&/*#__PURE__*/React.createElement(\"div\",{className:\"topNavbarSection\"},/*#__PURE__*/React.createElement(\"span\",{id:\"adminText\"},\"Logged as an Admin\"),/*#__PURE__*/React.createElement(\"span\",{id:\"reportsNavItem\",className:\"topNavItem reportsNavItem\"},/*#__PURE__*/React.createElement(NavLink,{to:\"/reports\"},\"View Reports Page\"))),/*#__PURE__*/React.createElement(\"div\",{className:\"headerContainer\"},this.userTypeFromServerCache===\"ADMIN\"?/*#__PURE__*/React.createElement(\"h2\",{className:\"allVacationsHeader sharp-text\"},\"All \",this.state.allVacations.length,\" Vacations You Can Edit\"):/*#__PURE__*/React.createElement(\"h2\",{className:\"allVacationsHeader sharp-text\"},\"All \",this.state.allVacations.length,\" Vacations We've Got For You\")),/*#__PURE__*/React.createElement(\"div\",{className:\"allVacations\"},this.userTypeFromServerCache===\"ADMIN\"&&/*#__PURE__*/React.createElement(\"div\",{className:\"addVacationSquare\",onClick:this.onVacationAdditionAttempt},/*#__PURE__*/React.createElement(\"div\",{className:\"newVacationText\"},/*#__PURE__*/React.createElement(\"h2\",{className:\"sharp-text\"},\"New Vacation\"))),this.state.allVacations.length>0?// ---------- In case the user type in the server's cache is type 'USER' ---------- //\nthis.state.allVacations.map(function(vacation,index){return/*#__PURE__*/React.createElement(VacationComponent,{key:index,vacation:vacation,onVacationFollowAttempt:_this2.onVacationFollowAttempt,validateVacationIsNotLikedByTheUser:_this2.validateVacationIsNotLikedByTheUser,onVacationDeleteAttempt:_this2.onVacationDeleteAttempt,onVacationEditAttempt:_this2.onVacationEditAttempt,userTypeFromServerCache:_this2.userTypeFromServerCache,disableBtn:_this2.disableButton,enableBtn:_this2.enableButton});})// ---------- else, if the vacations were not retrieved from the server for some reason ---------- //\n:/*#__PURE__*/React.createElement(\"div\",{className:\"noVcationsSection\"},/*#__PURE__*/React.createElement(\"img\",{className:\"settingsImage\",src:settingsImage,alt:\"\"}),/*#__PURE__*/React.createElement(\"h1\",{className:\"sharp-text\"},\"Oops, We Could Not Find Any Vacations\")))),/*#__PURE__*/React.createElement(\"div\",{id:\"deletionModalContainer\"},/*#__PURE__*/React.createElement(\"div\",{id:\"deletionModal\"},/*#__PURE__*/React.createElement(\"h1\",{id:\"deletionModalHeader\"},\".\"),/*#__PURE__*/React.createElement(\"p\",{id:\"deletionModalText\"}),/*#__PURE__*/React.createElement(\"h2\",{id:\"deletionModalVacationName\"},\".\"),/*#__PURE__*/React.createElement(\"img\",{id:\"deleteModalIcon\",src:deleteSVG,alt:\"Delete Vacation Modal\"}),/*#__PURE__*/React.createElement(\"div\",{className:\"buttonsSection\"},/*#__PURE__*/React.createElement(\"button\",{id:\"dontDeleteBtn\"},\"Don't Delete\"),/*#__PURE__*/React.createElement(\"button\",{id:\"deleteBtn\"},\"Delete\")))),/*#__PURE__*/React.createElement(\"div\",{id:\"editModalContainer\"},/*#__PURE__*/React.createElement(\"div\",{id:\"editModal\"},/*#__PURE__*/React.createElement(\"h1\",{id:\"editModalHeader\"},\".\"),/*#__PURE__*/React.createElement(\"img\",{id:\"editModalIcon\",alt:\"Add New Vacation Modal\"}),/*#__PURE__*/React.createElement(\"div\",{id:\"editInputs\"},/*#__PURE__*/React.createElement(TextField,{id:\"editedVacationName\",label:\"Name\",variant:\"standard\"}),/*#__PURE__*/React.createElement(\"div\",{id:\"editDatesSection\"},/*#__PURE__*/React.createElement(\"input\",{type:\"date\",min:new Date().toISOString().slice(0,10),max:\"2999-01-01\",id:\"editStartDate\"}),/*#__PURE__*/React.createElement(\"span\",null,\"-\"),/*#__PURE__*/React.createElement(\"input\",{type:\"date\",min:new Date().toISOString().slice(0,10),max:\"2999-01-01\",id:\"editEndDate\"})),/*#__PURE__*/React.createElement(TextField,{id:\"editedVacationPrice\",type:\"number\",label:\"Price\",variant:\"standard\"}),/*#__PURE__*/React.createElement(TextField,{id:\"editedVacationDescription\",label:\"Description\"}),/*#__PURE__*/React.createElement(TextField,{id:\"editedVacationImageURL\",label:\"Image URL\"}),/*#__PURE__*/React.createElement(\"p\",null,\"The Image You Upload Will Be Saved!\")),/*#__PURE__*/React.createElement(\"div\",{className:\"buttonsSection\"},/*#__PURE__*/React.createElement(\"button\",{id:\"editModalCancelBtn\"},\"Cancel\"),/*#__PURE__*/React.createElement(\"button\",{id:\"editModalDoneBtn\"},\"Update\")))),/*#__PURE__*/React.createElement(\"div\",{id:\"addModalContainer\"},/*#__PURE__*/React.createElement(\"div\",{id:\"addModal\"},/*#__PURE__*/React.createElement(\"h1\",{id:\"addModalHeader\"},\"Add a New Vacation !\"),/*#__PURE__*/React.createElement(\"img\",{id:\"addModalIcon\",src:spinningEarthSVG,alt:\"Vacation URL Is Broken\"}),/*#__PURE__*/React.createElement(\"div\",{id:\"addInputs\"},/*#__PURE__*/React.createElement(TextField,{id:\"addedVacationName\",label:\"Name\",variant:\"standard\"}),/*#__PURE__*/React.createElement(\"div\",{id:\"addDatesSection\"},/*#__PURE__*/React.createElement(\"input\",{type:\"date\",min:new Date().toISOString().slice(0,10),max:\"2999-01-01\",id:\"addStartDate\"}),/*#__PURE__*/React.createElement(\"span\",null,\"-\"),/*#__PURE__*/React.createElement(\"input\",{type:\"date\",min:new Date().toISOString().slice(0,10),max:\"2999-01-01\",id:\"addEndDate\"})),/*#__PURE__*/React.createElement(TextField,{id:\"addedVacationPrice\",type:\"number\",label:\"Price\",variant:\"standard\"}),/*#__PURE__*/React.createElement(TextField,{id:\"addedVacationDescription\",label:\"Description\"}),/*#__PURE__*/React.createElement(TextField,{id:\"addedVacationImageURL\",label:\"Image URL\"}),/*#__PURE__*/React.createElement(\"p\",null,\"The Image You Upload Will Be Saved!\")),/*#__PURE__*/React.createElement(\"div\",{className:\"buttonsSection\"},/*#__PURE__*/React.createElement(\"button\",{id:\"addModalCancelBtn\"},\"Cancel\"),/*#__PURE__*/React.createElement(\"button\",{id:\"addModalDoneBtn\"},\"Add\")))),/*#__PURE__*/React.createElement(\"div\",{id:\"snackbar\"}));}}]);return AllVacations;}(Component);export default withRouter(AllVacations);","map":{"version":3,"sources":["C:/Users/Ben/Desktop/John Bryce/פרוייקטים/project3 - Vacations/client/src/components/allVacations/AllVacations.tsx"],"names":["React","Component","store","axios","ActionType","withRouter","NavLink","settingsImage","isUserLoggedValidator","interceptorHandler","getUserInfoFromServerCache","VacationComponent","TextField","socketIOClient","AllVacations","props","unSubscribeStore","userTypeFromServerCache","userNameFromServerCache","imageToDeleteFromServer","socket","componentWillUnmount","disconnect","vacationsErrorHandler","componentDidMount","subscribe","setState","allVacations","getState","isUserLogged","initiateSocket","checkIfGlobalStoraHasAllVacations","getAllVacationsFromServer","get","response","data","dispatch","type","GetAllVacations","payload","errorMessage","error","followVacation","clickedVacation","likeButtonsNodeList","document","getElementsByClassName","likeButtonsArr","Array","from","disableButtonsGroup","clickedVacationID","vacationID","post","socketInfo","userName","emit","enableButtonsGroup","unfollowVacation","addVacation","addModalBackground","allInputsArr","getAllInputsArrForAddedVacation","validateNewVacationData","isNewVacationDataValid","newVacationData","serverResponse","newlyAddedVacation","hideModal","updateVacation","editModalBackground","getAllInputsArrForUpdatedVacation","convertedValidDataForUIDisplay","convertVacationDataForUIDisplay","put","imageToPreview","imageURL","deleteVacation","userInfoFromServerCache","userType","allVacationsInGlobalStore","length","registerAllSocketListeners","on","addVacationViaSocketIO","updateVacationInfoViaSocketIO","deleteVacationViaSocketIO","increaseVacationFollowersCountViaSocketIO","decreaseVacationFollowersCountViaSocketIO","inputsArr","clickedVacationFollowersCount","followersCount","newNameTrimmedValue","value","trim","vacationStartDateValue","vacationEndDateValue","newPriceValue","valueAsNumber","newDescriptionTrimmedValue","newVacationURL","convertedStartDate","convertStartDateForUIDisplay","convertedEndDate","convertEndDateForUIDisplay","vacationName","startDate","endDate","vacationPrice","vacationDescription","startDateYear","split","startDateMonth","startDateDay","fullStartDate","endDateYear","endDateMonth","endDateDay","fullEndDate","querySelector","vacationStartDate","vacationEndDate","vacationImageURL","onVacationFollowAttempt","vacationIsNotAlreadyLikedByTheUser","validateVacationIsNotLikedByTheUser","history","push","favoriteVacationsFromGlobalState","favoriteVacations","clickedVacationInGlobalStore","find","favoriteVacation","undefined","getIndexOfVacationByID","indexOfClickedVacationInGlobalStore","indexOf","getIndexOfFavoriteVacationByID","onVacationAdditionAttempt","displayAdditionModal","onVacationEditAttempt","event","button","target","disableButton","displayEditModal","enableButton","onVacationDeleteAttempt","displayDeletionModal","isNewVacationURLValid","validateNewVacationURL","isNewDescriptionValid","validateNewDescription","isNewPriceValid","validateNewPrice","areDatesValid","validateNewDates","isNewNameValid","validateNewName","newTrimmedName","newPrice","newTrimmedDescription","newVacationStartDate","newVacationEndDate","currentDate","Date","setHours","newTrimmedImageURL","AddVacation","updatedVacationID","indexOfClickedFavoriteVacationInGlobalStore","UpdateVacation","UpdateFavoriteVacation","DeleteVacationViaSocketIO","DeleteFavoriteVacationViaSocketIO","indexOfFavoriteClickedVacationInGlobalStore","newFollowersCount","IncreaseFavoriteVacationFollowersCount","IncreaseVacationFollowersCount","checkIfUserShouldIncreaseFollowersCountInUI","DecreaseFavoriteVacationFollowersCount","DecreaseVacationFollowersCount","checkIfUserShouldDecreaseFollowersCountInUI","clickedVacationIndex","SetFollowedVacation","UnfollowVacation","userTokenForSocketIdentification","JSON","parse","sessionStorage","getItem","token","query","disabled","style","cursor","buttonsGroup","snackbar","className","textContent","setTimeout","replace","displayVacationNameInEditModal","clickedVacationName","editedVacationNameField","displayVacationPriceInEditModal","clickedVacationPrice","editedVacationPriceField","displayVacationDatesInEditModal","clickedVacationStartDate","clickedVacationEndDate","editStartDateField","editEndDateField","valueAsDate","displayVacationDescriptionInEditModal","clickedVacationDescription","editVacationDescriptionField","displayVacationImageInEditModal","clickedVacationImageURL","editedVacationImageURL","addModalDoneBtn","addModalCancelBtn","display","onclick","window","addEventListener","editModalIcon","editModalHeader","editModalDoneBtn","editModalCancelBtn","src","deletionModalBackground","deletionModalHeader","deletionModalTextParagraph","deleteBtn","dontDeleteBtn","deletionModalVacationName","clearModalInputs","additionModalNameInput","additionModalStartDateInput","additionModalEndDateInput","additionModalPriceInput","additionModalDescriptionInput","additionModalImageURLInput","modal","state","map","vacation","index","deleteSVG","toISOString","slice","spinningEarthSVG"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport Vacation from '../../models/Vacation';\r\nimport { store } from '../../Redux/Store';\r\nimport axios from 'axios';\r\nimport { ActionType } from '../../Redux/ActionType';\r\nimport { Unsubscribe } from 'redux';\r\nimport {withRouter} from 'react-router';\r\nimport { NavLink } from 'react-router-dom';\r\nimport settingsImage from '../../assets/settingsImg.png';\r\nimport deleteSVG from '../../assets/deleteSVG.svg';\r\nimport spinningEarthSVG from '../../assets/spinningEarthSVG.svg';\r\nimport { isUserLoggedValidator } from '../../models/IsUserLoggedValidator';\r\nimport { interceptorHandler } from '../../models/InterceptorHandler';\r\nimport { getUserInfoFromServerCache } from '../../models/GetUserInfoFromServerCache';\r\nimport VacationComponent from '../vacationComponent/VacationComponent';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport socketIOClient from \"socket.io-client\";\r\nimport './allVacations.css';\r\nimport '../topNavbar/topNavbar.css';\r\n\r\n\r\n// ------------------------------------------------- This Component Displays All The Vacations The Website Has To Offer  ------------------------------------------------- //\r\n\r\ninterface allVacationsState {\r\n    allVacations : Vacation[];\r\n}\r\n\r\nexport class AllVacations extends Component <any, allVacationsState> {\r\n\r\n    private unSubscribeStore : Unsubscribe;\r\n    private userTypeFromServerCache: string;\r\n    private userNameFromServerCache: string;\r\n    private imageToDeleteFromServer: string;\r\n    private socket: any;\r\n\r\n    constructor(props : any) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            allVacations : new Array <Vacation> ()\r\n        };\r\n    }\r\n\r\n\r\n    // ------------------------------------------------- Component Settings ------------------------------------------------- //\r\n\r\n    componentWillUnmount = () => {\r\n\r\n        // Unsubscribing the store's listener right before the component will unmount\r\n        // In order to make a small space optimization\r\n        this.unSubscribeStore();\r\n\r\n        try {\r\n            // Disconnecting from the socket connection\r\n            this.socket.disconnect();\r\n        }\r\n        catch {\r\n            this.vacationsErrorHandler('Something went wrong while trying to disconnect from Socket');\r\n        }\r\n    }\r\n\r\n    componentDidMount = async () => {\r\n\r\n        // Optimizing a bit the memory leak of the store listener. Also subscribes automatically to the store\r\n        this.unSubscribeStore = store.subscribe(\r\n            \r\n            () => this.setState ({\r\n                allVacations: store.getState().allVacations\r\n            })\r\n        );\r\n\r\n        const isUserLogged = isUserLoggedValidator();\r\n        if (isUserLogged) {\r\n            await this.getUserInfoFromServerCache();\r\n\r\n            // Initiating the Socket connection to the server\r\n            this.initiateSocket();\r\n        }\r\n\r\n        this.checkIfGlobalStoraHasAllVacations();\r\n    }\r\n\r\n\r\n\r\n    // ------------------------------------------------- Model ------------------------------------------------- //\r\n\r\n    private getAllVacationsFromServer = async () => {\r\n\r\n        // Getting all the vacations from the server and inserting them to the Global Store\r\n        \r\n        try {\r\n            // The response we get, should be type of 'Vacation' class\r\n            const response = await axios.get<Vacation[]>('http://34.65.28.6:3001/vacations');\r\n\r\n            // Here we are receiving all the vacations from the server, as a JSON\r\n            const allVacations: Vacation[] = response.data;\r\n\r\n            // Insert all the vacations from the server to the Global Store\r\n            store.dispatch({\r\n                type: ActionType.GetAllVacations,\r\n                payload: allVacations\r\n            });\r\n        }\r\n\r\n        catch (error) {\r\n\r\n            // In case of an error, receiving the error, and displaying it in a Pop-Up UI message for the user\r\n            try {\r\n                let errorMessage = error.response.data.error;\r\n                this.vacationsErrorHandler(errorMessage);\r\n            }\r\n\r\n            catch {\r\n                this.vacationsErrorHandler(error);\r\n            }\r\n        }\r\n    }\r\n\r\n    private followVacation = async (clickedVacation : Vacation) => {\r\n\r\n        // This function occurs after validations approved that this vacation can be liked by the user\r\n\r\n        interceptorHandler();\r\n\r\n        // Defining all 'like' buttons in order to disable them until the request is done\r\n        const likeButtonsNodeList = document.getElementsByClassName(\"likeBtn\");\r\n        const likeButtonsArr = Array.from(likeButtonsNodeList) as HTMLButtonElement[];\r\n\r\n        try {\r\n\r\n            this.disableButtonsGroup(likeButtonsArr);\r\n\r\n            // Attempting to make a POST request to the server with the clicked vacation's ID, to follow that vacation\r\n            const clickedVacationID : number = clickedVacation.vacationID;\r\n            await axios.post(`http://34.65.28.6:3001/vacations/follow_vacation/${clickedVacationID}`);\r\n\r\n            // Updating The Global Store\r\n            // store.dispatch({type: ActionType.SetFollowedVacation, payload: clickedVacation});\r\n\r\n            // Emitting a socket message to the server, in order to inform all clients about the new followed vacation in the UI\r\n            const socketInfo = {\r\n                clickedVacationID,\r\n                userName: this.userNameFromServerCache\r\n            };\r\n\r\n            this.socket.emit('increase-vacation-followers-count', socketInfo);\r\n        }\r\n\r\n        catch (error) {\r\n\r\n            try {\r\n                let errorMessage = error.response.data.error;\r\n                this.vacationsErrorHandler(errorMessage);\r\n            }\r\n\r\n            catch {\r\n                this.vacationsErrorHandler(error);\r\n            }\r\n\r\n        }\r\n\r\n        finally {\r\n            this.enableButtonsGroup(likeButtonsArr);\r\n        }\r\n    }\r\n\r\n    private unfollowVacation = async (clickedVacation : Vacation) => {\r\n\r\n        // This function is designated to make the user 'unfollow' a vacation\r\n        interceptorHandler();\r\n\r\n        // Defining all 'like' buttons in order to disable them until the request is done\r\n        const likeButtonsNodeList = document.getElementsByClassName(\"likeBtn\");\r\n        const likeButtonsArr = Array.from(likeButtonsNodeList) as HTMLButtonElement[];\r\n\r\n        try {\r\n\r\n            this.disableButtonsGroup(likeButtonsArr);\r\n            \r\n            // Attempting to make a POST request to the server with the clicked vacation's ID, to unfollow a vacation\r\n            let clickedVacationID : number = clickedVacation.vacationID;\r\n            await axios.post(`http://34.65.28.6:3001/vacations/unfollow_vacation/${clickedVacationID}`);\r\n\r\n            // Emitting a socket message to the server, in order to inform all clients about the new unfollowed vacation in the UI\r\n            const socketInfo = {\r\n                clickedVacationID,\r\n                userName: this.userNameFromServerCache\r\n            };\r\n            this.socket.emit('decrease-vacation-followers-count', socketInfo);\r\n        }\r\n\r\n        catch (error) {\r\n\r\n            try {\r\n                let errorMessage = error.response.data.error;\r\n                this.vacationsErrorHandler(errorMessage);\r\n            }\r\n\r\n            catch {\r\n                this.vacationsErrorHandler(error);\r\n            }\r\n        }\r\n        \r\n        finally {\r\n            this.enableButtonsGroup(likeButtonsArr);\r\n        }\r\n    }\r\n\r\n    private addVacation = async (addModalBackground: any) => {\r\n\r\n        let allInputsArr = this.getAllInputsArrForAddedVacation();\r\n        \r\n        // Validating that all the fields of the added vacation are valid\r\n        let [isNewVacationDataValid, newVacationData] = this.validateNewVacationData(allInputsArr);\r\n\r\n        if (isNewVacationDataValid) {\r\n\r\n            interceptorHandler();\r\n\r\n            try {\r\n    \r\n                let serverResponse = await axios.post<Vacation[]>(`http://34.65.28.6:3001/vacations/add_vacation`, newVacationData);\r\n                let newlyAddedVacation: Vacation = serverResponse.data[0];\r\n                \r\n                // Emitting a socket command to the server, in order to inform all clients about the new vacation\r\n                this.socket.emit('add-vacation', newlyAddedVacation);\r\n\r\n                this.hideModal(addModalBackground);\r\n            }\r\n            \r\n            catch (error) {\r\n    \r\n                let errorMessage = error.response.data.error;\r\n                this.vacationsErrorHandler(errorMessage);\r\n            }\r\n        }\r\n    }\r\n\r\n    private updateVacation = async (clickedVacation : Vacation, editModalBackground: any) => {\r\n\r\n        const allInputsArr = this.getAllInputsArrForUpdatedVacation();\r\n        \r\n        // Validating all fields of the updated vacation are valid, and getting back the valid data\r\n        let [isNewVacationDataValid, newVacationData] = this.validateNewVacationData(allInputsArr);\r\n\r\n        if (isNewVacationDataValid) {\r\n\r\n            // Converting the data to for suitable UI display -> preventing retrieving the updated vacation from the DB\r\n            const convertedValidDataForUIDisplay = this.convertVacationDataForUIDisplay(allInputsArr, clickedVacation);\r\n\r\n            interceptorHandler();\r\n\r\n            try {\r\n    \r\n                let clickedVacationID: number = clickedVacation.vacationID;\r\n                const response = await axios.put(`http://34.65.28.6:3001/vacations/update_vacation/${clickedVacationID}`, {newVacationData, imageToDeleteFromServer: this.imageToDeleteFromServer});\r\n\r\n                const imageToPreview = response.data;\r\n                convertedValidDataForUIDisplay.imageURL = imageToPreview;\r\n\r\n                // Emitting a socket command to the server, in order to inform all clients about the updated vacation\r\n                this.socket.emit('update-vacation-info', convertedValidDataForUIDisplay);\r\n\r\n                this.hideModal(editModalBackground);\r\n            }\r\n            \r\n            catch (error) {\r\n    \r\n                let errorMessage = error.response.data.error;\r\n                this.vacationsErrorHandler(errorMessage);\r\n            }\r\n        }\r\n    }\r\n\r\n    private deleteVacation = async (clickedVacationID: number) => {\r\n\r\n        interceptorHandler();\r\n\r\n        try {\r\n\r\n            const imageToDeleteFromServer = this.imageToDeleteFromServer;\r\n            await axios.post(`http://34.65.28.6:3001/vacations/delete_vacation/${clickedVacationID}`, {imageToDeleteFromServer});\r\n\r\n            // Emitting a socket command to the server, in order to inform all clients about the new deleted vacation\r\n            this.socket.emit('delete-vacation', clickedVacationID);\r\n        }\r\n        \r\n        catch (error) {\r\n\r\n            let errorMessage = error.response.data.error;\r\n            this.vacationsErrorHandler(errorMessage);\r\n        }\r\n    }\r\n\r\n    private getUserInfoFromServerCache = async () => {\r\n\r\n        // This function retrieves the user type from the server, because we don't trust the client to tell us his user type\r\n        \r\n        try {\r\n            let userInfoFromServerCache = await getUserInfoFromServerCache();\r\n\r\n            this.userTypeFromServerCache = userInfoFromServerCache.userType;\r\n            this.userNameFromServerCache = userInfoFromServerCache.userName;\r\n        }\r\n\r\n        catch (error) {\r\n            try {\r\n                let errorMessage = error.response.data.error;\r\n                this.vacationsErrorHandler(errorMessage);\r\n            }\r\n\r\n            catch {\r\n                this.vacationsErrorHandler(error);\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n\r\n    // ------------------------------------------------- Controller ------------------------------------------------- //\r\n\r\n    private checkIfGlobalStoraHasAllVacations = () => {\r\n\r\n        // Checking if the Gloabl Store has all the vacations to display, and if not, get them from the server\r\n        \r\n        let allVacationsInGlobalStore = store.getState().allVacations;\r\n\r\n        if (allVacationsInGlobalStore.length === 0) {\r\n            this.getAllVacationsFromServer();\r\n        }\r\n\r\n        else {\r\n            this.setState ({\r\n                allVacations: allVacationsInGlobalStore\r\n            });\r\n        }\r\n    }\r\n\r\n    private registerAllSocketListeners = () => {\r\n\r\n        // Registering all Socket.io Listeners\r\n\r\n        // Registering an 'add vacation' listener, which updates the UI for all the clients\r\n        this.socket.on('add-vacation', (newlyAddedVacation: Vacation) => {\r\n            this.addVacationViaSocketIO(newlyAddedVacation);\r\n        });\r\n\r\n        // Registering an 'update vacation' listener, which updates the UI for all the clients\r\n        this.socket.on('update-vacation-info', (convertedValidDataForUIDisplay: Vacation) => {\r\n            this.updateVacationInfoViaSocketIO(convertedValidDataForUIDisplay);\r\n        });\r\n\r\n        // Registering a 'delete vacation' listener, which updates the UI for all the clients\r\n        this.socket.on('delete-vacation', (clickedVacationID: number) => {\r\n            this.deleteVacationViaSocketIO(clickedVacationID);\r\n        });\r\n\r\n        // Registering an 'increase vacation followers count' listener, which updates the UI for all the clients\r\n        this.socket.on('increase-vacation-followers-count', (socketInfo: {clickedVacationID: number, userName: string}) => {\r\n            this.increaseVacationFollowersCountViaSocketIO(socketInfo);\r\n        });\r\n\r\n        // Registering a 'decrease vacation followers count' listener, which updates the UI for all the clients\r\n        this.socket.on('decrease-vacation-followers-count', (socketInfo: {clickedVacationID: number, userName: string}) => {\r\n            this.decreaseVacationFollowersCountViaSocketIO(socketInfo);\r\n        });\r\n    }\r\n\r\n    private convertVacationDataForUIDisplay = (inputsArr : HTMLInputElement[], clickedVacation: Vacation) => {\r\n\r\n        // This function gets a vacation data that the admin has changed locally, and converts it to display it locally (without reaching for the DB)\r\n\r\n        const clickedVacationID: number = clickedVacation.vacationID;\r\n        const clickedVacationFollowersCount: number = clickedVacation.followersCount;\r\n\r\n        const newNameTrimmedValue = inputsArr[0].value.trim();\r\n        const vacationStartDateValue = inputsArr[1].value;\r\n        const vacationEndDateValue = inputsArr[2].value;\r\n        const newPriceValue = inputsArr[3].valueAsNumber;\r\n        const newDescriptionTrimmedValue = inputsArr[4].value.trim();\r\n        const newVacationURL = inputsArr[5].value.trim();\r\n\r\n        const convertedStartDate = this.convertStartDateForUIDisplay(vacationStartDateValue);\r\n        const convertedEndDate = this.convertEndDateForUIDisplay(vacationEndDateValue);\r\n\r\n        // Creating the converted vacation UI display object\r\n        const convertedValidDataForUIDisplay = {\r\n            vacationID: clickedVacationID,\r\n            vacationName: newNameTrimmedValue,\r\n            startDate: convertedStartDate,\r\n            endDate: convertedEndDate,\r\n            vacationPrice: newPriceValue,\r\n            vacationDescription: newDescriptionTrimmedValue,\r\n            imageURL: newVacationURL,\r\n            followersCount: clickedVacationFollowersCount\r\n        }\r\n\r\n        return convertedValidDataForUIDisplay;\r\n    }\r\n\r\n    private convertStartDateForUIDisplay = (vacationStartDateValue: string) => {\r\n\r\n        // This function converts the start date of a given vacation, to be suitable for the UI\r\n\r\n        let startDateYear = +vacationStartDateValue.split('-')[2];\r\n        let startDateMonth = +vacationStartDateValue.split('-')[1];\r\n        let startDateDay = +vacationStartDateValue.split('-')[0];\r\n        let fullStartDate = startDateYear+\"/\"+startDateMonth+\"/\"+startDateDay;\r\n\r\n        return fullStartDate;\r\n    }\r\n\r\n    private convertEndDateForUIDisplay = (vacationEndDateValue: string) => {\r\n\r\n        // This function converts the start date of a given vacation, to be suitable for the UI\r\n\r\n        let endDateYear = +vacationEndDateValue.split('-')[2];\r\n        let endDateMonth = +vacationEndDateValue.split('-')[1];\r\n        let endDateDay = +vacationEndDateValue.split('-')[0];\r\n        let fullEndDate = endDateYear+\"/\"+endDateMonth+\"/\"+endDateDay;\r\n\r\n        return fullEndDate;\r\n    }\r\n\r\n    private getAllInputsArrForAddedVacation = () => {\r\n\r\n        // Defining, and returning an array of all the inputs inside the 'Add Vacation' modal\r\n\r\n        const vacationName: HTMLInputElement = document.querySelector(\"#addedVacationName\") as HTMLInputElement;\r\n        const vacationStartDate: HTMLInputElement = document.querySelector(\"#addStartDate\") as HTMLInputElement;\r\n        const vacationEndDate: HTMLInputElement = document.querySelector(\"#addEndDate\") as HTMLInputElement;\r\n        const vacationPrice: HTMLInputElement = document.querySelector(\"#addedVacationPrice\") as HTMLInputElement;\r\n        const vacationDescription: HTMLInputElement = document.querySelector(\"#addedVacationDescription\") as HTMLInputElement;\r\n        const vacationImageURL: HTMLInputElement = document.querySelector(\"#addedVacationImageURL\") as HTMLInputElement;\r\n\r\n        const allInputsArr = [vacationName, vacationStartDate, vacationEndDate, vacationPrice, vacationDescription, vacationImageURL];\r\n\r\n        return allInputsArr;\r\n    }\r\n\r\n    private getAllInputsArrForUpdatedVacation = () => {\r\n\r\n        // Defining, and returning an array of all the inputs inside the 'Update Vacation' modal\r\n\r\n        const vacationName: HTMLInputElement = document.querySelector(\"#editedVacationName\") as HTMLInputElement;\r\n        const vacationStartDate: HTMLInputElement = document.querySelector(\"#editStartDate\") as HTMLInputElement;\r\n        const vacationEndDate: HTMLInputElement = document.querySelector(\"#editEndDate\") as HTMLInputElement;\r\n        const vacationPrice: HTMLInputElement = document.querySelector(\"#editedVacationPrice\") as HTMLInputElement;\r\n        const vacationDescription: HTMLInputElement = document.querySelector(\"#editedVacationDescription\") as HTMLInputElement;\r\n        const vacationImageURL: HTMLInputElement = document.querySelector(\"#editedVacationImageURL\") as HTMLInputElement;\r\n\r\n        const allInputsArr = [vacationName, vacationStartDate, vacationEndDate, vacationPrice, vacationDescription, vacationImageURL];\r\n\r\n        return allInputsArr;\r\n    }\r\n\r\n    private onVacationFollowAttempt = (clickedVacation : Vacation) => {\r\n\r\n        /*\r\n            Before the 'follow' action, checking if the user is currently logged in.\r\n            This validation is made because a user might delete his token before trying\r\n            to like a vacation. In that case, throw him out to login again.\r\n        */\r\n\r\n        // Using a Model I made to check if the user is still logged (Preventing duplication of code from all components that needs to make this validation).\r\n        const isUserLogged = isUserLoggedValidator();\r\n        \r\n        // If the user is currently logged in\r\n        if (isUserLogged) {\r\n            \r\n            // checking if the user hasn't liked this vacation already\r\n            const vacationIsNotAlreadyLikedByTheUser = this.validateVacationIsNotLikedByTheUser(clickedVacation);\r\n\r\n            // If the vacation selected is not already liked by the user, follow that vacation\r\n            if (vacationIsNotAlreadyLikedByTheUser) {\r\n                this.followVacation(clickedVacation);\r\n            }\r\n\r\n            // If the vacation selected is already liked by the user, unfollow that vacation.\r\n            else {\r\n                this.unfollowVacation(clickedVacation);\r\n            }\r\n        }\r\n\r\n        // In case a guest tried to follow a vacation, send him to the login page in order for him to login\r\n        else {\r\n            this.props.history.push('/login');\r\n        }\r\n    }\r\n\r\n    private validateVacationIsNotLikedByTheUser = (clickedVacation : Vacation) => {\r\n\r\n        // Validating the vacation chosen is not already liked by the user\r\n\r\n        let favoriteVacationsFromGlobalState: Vacation[] = store.getState().favoriteVacations;\r\n        let clickedVacationID: number = clickedVacation.vacationID;\r\n\r\n        // Searching the clicked vacation's ID inside our global store\r\n        let clickedVacationInGlobalStore: Vacation = favoriteVacationsFromGlobalState.find(\r\n            favoriteVacation => favoriteVacation.vacationID === clickedVacationID);\r\n\r\n        // If no result came back (if the user hasn't liked this vacation already)\r\n        if (clickedVacationInGlobalStore === undefined) {\r\n            return true;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    private getIndexOfVacationByID = (vacationID: number) => {\r\n\r\n        // Finding and returning an index of a vacation from the Global Store's 'all vacations' array\r\n\r\n        let allVacations: Vacation[] = store.getState().allVacations as Vacation[];\r\n\r\n        let clickedVacationInGlobalStore: Vacation = allVacations.find( allVacations =>  allVacations.vacationID === vacationID);\r\n        let indexOfClickedVacationInGlobalStore: number = allVacations.indexOf(clickedVacationInGlobalStore);\r\n\r\n        return indexOfClickedVacationInGlobalStore;\r\n    }\r\n\r\n    private getIndexOfFavoriteVacationByID = (vacationID: number) => {\r\n\r\n        // Finding and returning an index of a vacation from the Global Store's 'favorites' array\r\n\r\n        let favoriteVacations: Vacation[] = store.getState().favoriteVacations as Vacation[];\r\n\r\n        let clickedVacationInGlobalStore: Vacation = favoriteVacations.find( favoriteVacation =>  favoriteVacation.vacationID === vacationID);\r\n        let indexOfClickedVacationInGlobalStore: number = favoriteVacations.indexOf(clickedVacationInGlobalStore);\r\n\r\n        return indexOfClickedVacationInGlobalStore;\r\n    }\r\n\r\n    private onVacationAdditionAttempt = () => {\r\n\r\n        /*\r\n            Before the 'add' action, checking if the user is currently logged in.\r\n            This validation is made because a user might delete his token before trying\r\n            to delete a vacation. In that case, throw him out to login again.\r\n        */\r\n\r\n        // Using a Model I made to check if the user is still logged (Preventing duplication of code from all components that needs to make this validation).\r\n\r\n        const isUserLogged = isUserLoggedValidator();\r\n\r\n        if (isUserLogged) {\r\n            this.displayAdditionModal();\r\n        }\r\n\r\n        // If the Admin has decided to delete his Token from the sessionStorage, throw him out to login again\r\n        else {\r\n            this.props.history.push('/login');\r\n        }\r\n    }\r\n\r\n    private onVacationEditAttempt = (clickedVacation: Vacation, event : MouseEvent) => {\r\n\r\n        /*\r\n            Before the 'edit' action, checking if the user is currently logged in.\r\n            This validation is made because a user might delete his token before trying\r\n            to edit a vacation. In that case, throw him out to login again.\r\n        */\r\n\r\n        // Using a Model I made to check if the user is still logged (Preventing duplication of code from all components that needs to make this validation).\r\n\r\n        const isUserLogged = isUserLoggedValidator();\r\n\r\n        if (isUserLogged) {\r\n            const button = event.target as HTMLButtonElement;\r\n            this.disableButton(button);\r\n            this.displayEditModal(clickedVacation);\r\n            this.enableButton(button);\r\n        }\r\n\r\n        // If the Admin has decided to delete his Token from the sessionStorage, throw him out to login again\r\n        else {\r\n            this.props.history.push('/login');\r\n        }\r\n    }\r\n\r\n    private onVacationDeleteAttempt = (clickedVacation: Vacation, event : MouseEvent) => {\r\n\r\n        /*\r\n            Before the 'delete' action, checking if the user is currently logged in.\r\n            This validation is made because a user might delete his token before trying\r\n            to delete a vacation. In that case, throw him out to login again.\r\n        */\r\n\r\n        // Using a Model I made to check if the user is still logged (Preventing duplication of code from all components that needs to make this validation).\r\n\r\n        const isUserLogged = isUserLoggedValidator();\r\n        \r\n        if (isUserLogged) {\r\n            const button = event.target as HTMLButtonElement;\r\n            this.disableButton(button);\r\n            this.displayDeletionModal(clickedVacation);\r\n            this.enableButton(button);\r\n        }\r\n\r\n        // If the Admin has decided to delete his Token from the sessionStorage, throw him out to login again\r\n        else {\r\n            this.props.history.push('/login');\r\n        }\r\n    }\r\n\r\n    private validateNewVacationData = (inputsArr: HTMLInputElement[]) => {\r\n\r\n        // This function validates all the Modal's fields are valid\r\n\r\n        const newNameTrimmedValue = inputsArr[0].value.trim();\r\n        const vacationStartDateValue = inputsArr[1].value;\r\n        const vacationEndDateValue = inputsArr[2].value;\r\n        const newPriceValue = inputsArr[3].valueAsNumber;\r\n        const newDescriptionTrimmedValue = inputsArr[4].value.trim();\r\n        const newVacationURL = inputsArr[5].value.trim();\r\n \r\n\r\n        // Validating all Modal fields are valid\r\n\r\n        let isNewVacationURLValid = this.validateNewVacationURL(newVacationURL);\r\n        let isNewDescriptionValid = this.validateNewDescription(newDescriptionTrimmedValue);\r\n        let isNewPriceValid = this.validateNewPrice(newPriceValue);\r\n        let areDatesValid = this.validateNewDates(vacationStartDateValue, vacationEndDateValue);\r\n        let isNewNameValid = this.validateNewName(newNameTrimmedValue);\r\n\r\n        if (isNewNameValid) {\r\n            if (isNewPriceValid) {\r\n                if (isNewDescriptionValid) {\r\n                    if (areDatesValid) {\r\n                        if (isNewVacationURLValid) {\r\n\r\n                            // Creating an object that has all the necessary data for adding / updating a vacation locally\r\n                            let newVacationData = {\r\n                                vacationName: newNameTrimmedValue,\r\n                                vacationPrice: newPriceValue,\r\n                                vacationDescription: newDescriptionTrimmedValue,\r\n                                startDate: vacationStartDateValue,\r\n                                endDate: vacationEndDateValue,\r\n                                imageURL: newVacationURL,\r\n                            };\r\n    \r\n                            // retrning the data + a 'true', in order to inform the caller that the data is valid\r\n                            return [true, newVacationData];\r\n                        }\r\n                    }\r\n\r\n                }\r\n            }\r\n        }\r\n\r\n        // In case one of the parameters of the updated vacation is not valid\r\n        return [false, {}];\r\n    }\r\n\r\n    private validateNewName = (newTrimmedName: string) => {\r\n\r\n        // Validating the vacation's name inside the Modal\r\n\r\n        if (newTrimmedName !== \"\") {\r\n            if (newTrimmedName.length >= 3) {\r\n                if (newTrimmedName.length <= 44) {\r\n                    return true;\r\n                }\r\n            }\r\n        }\r\n\r\n        this.vacationsErrorHandler(\"The new name must be between 3 - 44 characters long\");\r\n        return false;\r\n    }\r\n\r\n    private validateNewPrice = (newPrice: number) => {\r\n\r\n        // Validating the vacation's price inside the Modal\r\n\r\n        if (newPrice > 0) {\r\n            if (newPrice < 100000) {\r\n                return true;\r\n            }\r\n        }\r\n\r\n        this.vacationsErrorHandler(\"The new price must be larger than 0 and Lower than 100,000\");\r\n        return false;\r\n    }\r\n\r\n    private validateNewDescription = (newTrimmedDescription: string) => {\r\n\r\n        // Validating the vacation's description inside the Modal\r\n\r\n        if (newTrimmedDescription !== \"\") {\r\n            if (newTrimmedDescription.length >= 5) {\r\n                if (newTrimmedDescription.length <= 249) {\r\n                    return true;\r\n                }\r\n            }\r\n        }\r\n\r\n        this.vacationsErrorHandler(\"The new description must be between 5 - 249 characters long\");\r\n        return false;\r\n    }\r\n\r\n    private validateNewDates = (newVacationStartDate: string, newVacationEndDate: string) => {\r\n\r\n        // Validating the logic of the dates inputs in the 'add Modal'\r\n\r\n        if (newVacationStartDate !== \"\") {\r\n            if (newVacationStartDate !== undefined) {\r\n\r\n                if (newVacationEndDate !== \"\") {\r\n                    if (newVacationEndDate !== undefined) {\r\n\r\n                        let currentDate = new Date().setHours(0, 0, 0, 0);\r\n                        let startDate = new Date(newVacationStartDate).setHours(0, 0, 0, 0);\r\n                        let endDate = new Date(newVacationEndDate).setHours(0, 0, 0, 0);\r\n\r\n                        // Checking if the starting date is not in the past\r\n                        if (startDate >= currentDate) {\r\n\r\n                            // Checking if the ending date is greater than the starting date\r\n                            if (endDate > startDate) {\r\n                                return true;\r\n                            }\r\n\r\n                            else {\r\n                                this.vacationsErrorHandler(\"The return date must be later than the starting date\");\r\n                                return false;\r\n                            }\r\n                        }\r\n\r\n                        else {\r\n                            this.vacationsErrorHandler(\"The starting date must be later than today\");\r\n                            return false;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        this.vacationsErrorHandler(\"Vacation Dates Not Valid, Try Again\");\r\n        return false;\r\n    }\r\n\r\n    private validateNewVacationURL = (newTrimmedImageURL: string) => {\r\n\r\n        // Validating the vacation's URL inside the Modal\r\n\r\n        if (newTrimmedImageURL !== \"\") {\r\n            if (newTrimmedImageURL.length >= 10) {\r\n                if (newTrimmedImageURL.length <= 998) {\r\n                    return true;\r\n                }\r\n            }\r\n        }\r\n\r\n        this.vacationsErrorHandler(\"Image URL must be between 10 - 998 characters long\");\r\n        return false;\r\n    }\r\n\r\n    private addVacationViaSocketIO = (newlyAddedVacation: Vacation) => {\r\n\r\n        // This function occurs whenever an admin adds a new vacation (the listener triggers this function using a Socket.io message).\r\n        // Updating the Global Store with the new vacation, in order to update the UI\r\n\r\n        store.dispatch({type: ActionType.AddVacation, payload: newlyAddedVacation});\r\n    }\r\n\r\n    private updateVacationInfoViaSocketIO = (convertedValidDataForUIDisplay: Vacation) => {\r\n\r\n        // Updating the user's UI with the vacation that was updated (edited) by the admin, via Socket.io\r\n\r\n        // Finding the indexes of the changed vacation in the Global Store, and updating them locally\r\n        let updatedVacationID = convertedValidDataForUIDisplay.vacationID;\r\n        let indexOfClickedFavoriteVacationInGlobalStore: number = this.getIndexOfFavoriteVacationByID(updatedVacationID);\r\n        let indexOfClickedVacationInGlobalStore: number = this.getIndexOfVacationByID(updatedVacationID);\r\n\r\n        // Updating the vacations in the 'all vacations' component\r\n        store.dispatch({type: ActionType.UpdateVacation, payload: {indexOfClickedVacationInGlobalStore, convertedValidDataForUIDisplay} });\r\n\r\n        // Updating the vacations in the user's 'favorite vacations' component\r\n        if (indexOfClickedFavoriteVacationInGlobalStore !== -1) {\r\n            store.dispatch({type: ActionType.UpdateFavoriteVacation, payload: {indexOfClickedFavoriteVacationInGlobalStore, convertedValidDataForUIDisplay} });\r\n        }\r\n    }\r\n\r\n    private deleteVacationViaSocketIO = (clickedVacationID: number) => {\r\n        \r\n        // Updating the user's UI with the vacation that was deleted by the admin, via Socket.io\r\n\r\n        // Finding the indexes of the changed vacation in the Global Store, and updating them locally\r\n        let indexOfClickedFavoriteVacationInGlobalStore: number = this.getIndexOfFavoriteVacationByID(clickedVacationID);\r\n        let indexOfClickedVacationInGlobalStore: number = this.getIndexOfVacationByID(clickedVacationID);\r\n\r\n        // Updating the vacations in the 'all vacations' component\r\n        store.dispatch({type: ActionType.DeleteVacationViaSocketIO, payload: indexOfClickedVacationInGlobalStore });\r\n\r\n        // Checking if the user has liked this vacation\r\n        // Updating the vacations in the user's 'favorite vacations' component\r\n        if (indexOfClickedFavoriteVacationInGlobalStore !== -1) {\r\n            store.dispatch({type: ActionType.DeleteFavoriteVacationViaSocketIO, payload: indexOfClickedFavoriteVacationInGlobalStore });\r\n        }\r\n    }\r\n\r\n    private increaseVacationFollowersCountViaSocketIO = (socketInfo: {clickedVacationID: number, userName: string}) => {\r\n\r\n        // Updating the user's UI with the followers count of the vacation that was liked by other users, via Socket.io\r\n\r\n        // Finding the indexes of the changed vacation in the Global Store, and updating them locally\r\n        let indexOfClickedVacationInGlobalStore: number = this.getIndexOfVacationByID(socketInfo.clickedVacationID);\r\n        let indexOfFavoriteClickedVacationInGlobalStore: number = this.getIndexOfFavoriteVacationByID(socketInfo.clickedVacationID);\r\n\r\n        let newFollowersCount = store.getState().allVacations[indexOfClickedVacationInGlobalStore].followersCount + 1;\r\n\r\n        // Checking if the user has liked this vacation\r\n        if (indexOfFavoriteClickedVacationInGlobalStore !== -1) {\r\n            // Updating the vacation's followers count in the UI\r\n            store.dispatch({type: ActionType.IncreaseFavoriteVacationFollowersCount, payload: {indexOfFavoriteClickedVacationInGlobalStore, newFollowersCount}});\r\n        }\r\n\r\n        // Updating the vacation's followers count in the UI\r\n        store.dispatch({type: ActionType.IncreaseVacationFollowersCount, payload: {indexOfClickedVacationInGlobalStore, newFollowersCount}});\r\n\r\n        this.checkIfUserShouldIncreaseFollowersCountInUI(socketInfo);\r\n    }\r\n\r\n    private decreaseVacationFollowersCountViaSocketIO = (socketInfo: {clickedVacationID: number, userName: string}) => {\r\n\r\n        // Updating the user's UI with the followers count of the vacation that was unliked by other users, via Socket.io\r\n\r\n        // Finding the indexes of the changed vacation in the Global Store, and updating them locally\r\n        let indexOfClickedVacationInGlobalStore: number = this.getIndexOfVacationByID(socketInfo.clickedVacationID);\r\n        let indexOfFavoriteClickedVacationInGlobalStore: number = this.getIndexOfFavoriteVacationByID(socketInfo.clickedVacationID);\r\n        \r\n        let newFollowersCount = store.getState().allVacations[indexOfClickedVacationInGlobalStore].followersCount - 1;\r\n\r\n        // Checking if the user has liked this vacation\r\n        if (indexOfFavoriteClickedVacationInGlobalStore !== -1) {\r\n            \r\n            // Updating the vacation's followers count in the UI\r\n            store.dispatch({type: ActionType.DecreaseFavoriteVacationFollowersCount, payload: {indexOfFavoriteClickedVacationInGlobalStore, newFollowersCount}});\r\n        }\r\n\r\n        // Updating the vacation's followers count in the UI\r\n        store.dispatch({type: ActionType.DecreaseVacationFollowersCount, payload: {indexOfClickedVacationInGlobalStore, newFollowersCount}});\r\n\r\n        this.checkIfUserShouldDecreaseFollowersCountInUI(socketInfo);\r\n    }\r\n\r\n    private checkIfUserShouldIncreaseFollowersCountInUI = (socketInfo: {clickedVacationID: number, userName: string}) => {\r\n\r\n        const clickedVacationID = socketInfo.clickedVacationID;\r\n        const clickedVacationIndex = this.getIndexOfVacationByID(clickedVacationID);\r\n        const clickedVacation = store.getState().allVacations[clickedVacationIndex];\r\n\r\n        if (this.userNameFromServerCache === socketInfo.userName) {\r\n            store.dispatch({type: ActionType.SetFollowedVacation, payload: clickedVacation});\r\n        };\r\n    }\r\n\r\n    private checkIfUserShouldDecreaseFollowersCountInUI = (socketInfo: {clickedVacationID: number, userName: string}) => {\r\n\r\n        const clickedVacationID = socketInfo.clickedVacationID;\r\n        const clickedVacationIndex = this.getIndexOfFavoriteVacationByID(clickedVacationID);\r\n\r\n        if (this.userNameFromServerCache === socketInfo.userName) {\r\n            store.dispatch({type: ActionType.UnfollowVacation, payload: clickedVacationIndex});\r\n        };\r\n    }\r\n\r\n    private initiateSocket = () => {\r\n\r\n        // Connecting to the server's socket\r\n        const userTokenForSocketIdentification = JSON.parse(sessionStorage.getItem('userInfo')).token;\r\n        \r\n        this.socket = socketIOClient('http://34.65.28.6:3002', { query: \"userToken=\" + userTokenForSocketIdentification});\r\n        this.registerAllSocketListeners();\r\n    }\r\n\r\n\r\n\r\n    // ------------------------------------------------- View ------------------------------------------------- //\r\n\r\n    private disableButton = (button : HTMLButtonElement) : void => {\r\n        button.disabled = true;\r\n        button.style.cursor = \"not-allowed\";\r\n    }\r\n\r\n    private enableButton = (button : HTMLButtonElement) : void => {\r\n        button.disabled = false;\r\n        button.style.cursor = \"pointer\";\r\n    }\r\n\r\n    private disableButtonsGroup = (buttonsGroup : HTMLButtonElement[]) => {\r\n\r\n        for (let button of buttonsGroup) {\r\n            this.disableButton(button)\r\n        }\r\n    }\r\n\r\n    private enableButtonsGroup = (buttonsGroup : HTMLButtonElement[]) => {\r\n\r\n        for (let button of buttonsGroup) {\r\n            this.enableButton(button)\r\n        }\r\n    }\r\n\r\n    private vacationsErrorHandler = (errorMessage: string) => {\r\n\r\n        // Letting the user know he received an error, by displaying a Pop-Up Message at the bottom of the screen\r\n\r\n        let snackbar: HTMLDivElement = document.querySelector(\"#snackbar\") as HTMLDivElement;\r\n        snackbar.className = \"show\";\r\n        snackbar.textContent = errorMessage;\r\n\r\n        setTimeout(function() {\r\n            snackbar.className = snackbar.className.replace(\"show\", \"\");\r\n        }, 6000);\r\n    }\r\n\r\n    private displayVacationNameInEditModal = (clickedVacationName: string) => {\r\n\r\n        // Displaying 'Edit' Modal Name\r\n\r\n        const editedVacationNameField = document.querySelector(\"#editedVacationName\") as HTMLInputElement;\r\n        editedVacationNameField.value = clickedVacationName;\r\n    }\r\n\r\n    private displayVacationPriceInEditModal = (clickedVacationPrice: number) => {\r\n\r\n        // Dusplaying 'Edit' Modal Price\r\n\r\n        const editedVacationPriceField = document.querySelector(\"#editedVacationPrice\") as HTMLInputElement;\r\n        editedVacationPriceField.valueAsNumber = clickedVacationPrice;\r\n    }\r\n\r\n    private displayVacationDatesInEditModal = (clickedVacationStartDate: string, clickedVacationEndDate: string) => {\r\n\r\n        // Displaying 'Edit' Modal Dates\r\n\r\n        const editStartDateField = document.querySelector(\"#editStartDate\") as HTMLInputElement;\r\n        const editEndDateField = document.querySelector(\"#editEndDate\") as HTMLInputElement;\r\n\r\n        // Start Date\r\n        let startDateYear = +clickedVacationStartDate.split('/')[2];\r\n        let startDateMonth = +clickedVacationStartDate.split('/')[1];\r\n        let startDateDay = +clickedVacationStartDate.split('/')[0];\r\n        let fullStartDate = startDateYear+\"-\"+startDateMonth+\"-\"+startDateDay;\r\n\r\n        // End Date\r\n        let endDateYear = +clickedVacationEndDate.split('/')[2];\r\n        let endDateMonth = +clickedVacationEndDate.split('/')[1];\r\n        let endDateDay = +clickedVacationEndDate.split('/')[0];\r\n        let fullEndDate = endDateYear+\"-\"+endDateMonth+\"-\"+endDateDay;\r\n        \r\n        editStartDateField.valueAsDate = new Date(fullStartDate);\r\n        editEndDateField.valueAsDate = new Date(fullEndDate);\r\n    }\r\n\r\n    private displayVacationDescriptionInEditModal = (clickedVacationDescription: string) => {\r\n\r\n        // Displaying 'Edit' Modal Description\r\n\r\n        const editVacationDescriptionField = document.querySelector(\"#editedVacationDescription\") as HTMLInputElement;\r\n        editVacationDescriptionField.value = clickedVacationDescription;\r\n    }\r\n\r\n    private displayVacationImageInEditModal = (clickedVacationImageURL: string) => {\r\n        \r\n        const editedVacationImageURL = document.querySelector(\"#editedVacationImageURL\") as HTMLInputElement;\r\n        editedVacationImageURL.value = clickedVacationImageURL;\r\n    }\r\n\r\n    private displayAdditionModal = () => {\r\n\r\n        // Defining the 'Add' Modal in the UI\r\n\r\n        const addModalBackground = document.querySelector(\"#addModalContainer\") as HTMLElement;\r\n        const addModalDoneBtn = document.querySelector(\"#addModalDoneBtn\") as HTMLButtonElement;\r\n        const addModalCancelBtn = document.querySelector(\"#addModalCancelBtn\") as HTMLButtonElement;\r\n\r\n        addModalBackground.style.display = \"block\";\r\n\r\n\r\n        // Defining the event listeners for the modal\r\n\r\n        addModalCancelBtn.onclick = () => {this.hideModal(addModalBackground)};\r\n\r\n        addModalDoneBtn.onclick = () => {\r\n\r\n            this.addVacation(addModalBackground);\r\n        };\r\n\r\n        window.addEventListener(\"click\", (event: MouseEvent) => {\r\n            if (event.target === addModalBackground) {\r\n                this.hideModal(addModalBackground);\r\n            }\r\n        })\r\n    }\r\n\r\n    private displayEditModal = (clickedVacation: Vacation) => {\r\n\r\n        // Defining the 'Edit' Modal in the UI\r\n\r\n        const editModalBackground = document.querySelector(\"#editModalContainer\") as HTMLElement;\r\n        const editModalIcon = document.querySelector(\"#editModalIcon\") as HTMLImageElement;\r\n        const editModalHeader = document.querySelector(\"#editModalHeader\");\r\n        const editModalDoneBtn = document.querySelector(\"#editModalDoneBtn\") as HTMLButtonElement;\r\n        const editModalCancelBtn = document.querySelector(\"#editModalCancelBtn\") as HTMLButtonElement;\r\n\r\n        // Displaying the values inside the 'Edit' Modal\r\n        this.displayVacationNameInEditModal(clickedVacation.vacationName);\r\n        this.displayVacationPriceInEditModal(clickedVacation.vacationPrice);\r\n        this.displayVacationDescriptionInEditModal(clickedVacation.vacationDescription);\r\n        this.displayVacationDatesInEditModal(clickedVacation.startDate, clickedVacation.endDate);\r\n        this.displayVacationImageInEditModal(clickedVacation.imageURL);\r\n        this.imageToDeleteFromServer = clickedVacation.imageURL;\r\n        \r\n        editModalBackground.style.display = \"block\";\r\n        editModalHeader.textContent = `Update ${clickedVacation.vacationName}`;\r\n        editModalIcon.src = clickedVacation.imageURL;\r\n\r\n        // Defining the event listeners for the modal\r\n\r\n        editModalCancelBtn.onclick = () => {this.hideModal(editModalBackground)};\r\n\r\n        editModalDoneBtn.onclick = () => {\r\n\r\n            this.updateVacation(clickedVacation, editModalBackground);\r\n        };\r\n\r\n        window.onclick = function(event : MouseEvent) {\r\n            \r\n            if (event.target === editModalBackground) {\r\n                editModalBackground.style.display = \"none\";\r\n            }\r\n        }\r\n    }\r\n\r\n    private displayDeletionModal = (clickedVacation: Vacation) => {\r\n\r\n        let clickedVacationID: number = clickedVacation.vacationID;\r\n\r\n        const deletionModalBackground = document.querySelector(\"#deletionModalContainer\") as HTMLElement;\r\n        const deletionModalHeader = document.querySelector(\"#deletionModalHeader\");\r\n        const deletionModalTextParagraph = document.querySelector(\"#deletionModalText\");\r\n        const deleteBtn = document.querySelector(\"#deleteBtn\") as HTMLButtonElement;\r\n        const dontDeleteBtn = document.querySelector(\"#dontDeleteBtn\") as HTMLButtonElement;\r\n        const deletionModalVacationName = document.querySelector(\"#deletionModalVacationName\");\r\n\r\n        deletionModalBackground.style.display = \"block\";\r\n        deletionModalHeader.textContent = \"Confirm Your Deletion\";\r\n        deletionModalTextParagraph.textContent = `Are You Sure You Would Like To Delete`;\r\n        deletionModalVacationName.textContent = `${clickedVacation.vacationName} ?`;\r\n        this.imageToDeleteFromServer = clickedVacation.imageURL;\r\n\r\n\r\n        // Defining the event listeners for the modal\r\n\r\n        dontDeleteBtn.onclick = () => {this.hideModal(deletionModalBackground)};\r\n\r\n        deleteBtn.onclick = () => {\r\n            this.deleteVacation(clickedVacationID);\r\n            this.hideModal(deletionModalBackground);\r\n        };\r\n\r\n        window.onclick = function(event : MouseEvent) {\r\n            \r\n            if (event.target === deletionModalBackground) {\r\n                deletionModalBackground.style.display = \"none\";\r\n            }\r\n        }\r\n    }\r\n\r\n    private clearModalInputs = () => {\r\n\r\n        // Clearing the inputs of the 'Add' Modal\r\n\r\n        let additionModalNameInput = document.querySelector(\"#addedVacationName\") as HTMLInputElement;\r\n        let additionModalStartDateInput = document.querySelector(\"#addStartDate\") as HTMLInputElement;\r\n        let additionModalEndDateInput = document.querySelector(\"#addEndDate\") as HTMLInputElement;\r\n        let additionModalPriceInput = document.querySelector(\"#addedVacationPrice\") as HTMLInputElement;\r\n        let additionModalDescriptionInput = document.querySelector(\"#addedVacationDescription\") as HTMLInputElement;\r\n        let additionModalImageURLInput = document.querySelector(\"#addedVacationImageURL\") as HTMLInputElement;\r\n\r\n        additionModalNameInput.value = \"\";\r\n        additionModalStartDateInput.value = \"\";\r\n        additionModalEndDateInput.value = \"\";\r\n        additionModalPriceInput.valueAsNumber = 0;\r\n        additionModalDescriptionInput.value = \"\";\r\n        additionModalImageURLInput.value = \"\";\r\n    }\r\n\r\n    private hideModal = (modal: any) => {\r\n\r\n        modal.style.display = \"none\";\r\n        this.clearModalInputs();\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div className=\"allVacationsSection\" id=\"allVacationsSection\">\r\n\r\n                    {this.userTypeFromServerCache === \"ADMIN\"\r\n                    && \r\n                        <div className=\"topNavbarSection\">\r\n                            <span id=\"adminText\">Logged as an Admin</span>\r\n\r\n                            <span id=\"reportsNavItem\" className=\"topNavItem reportsNavItem\">\r\n                                <NavLink to=\"/reports\">View Reports Page</NavLink>\r\n                            </span>\r\n                        </div>\r\n                    }\r\n\r\n                    {/* ---------- All Vacations Section Header ---------- */}\r\n\r\n                    <div className=\"headerContainer\">\r\n                        {this.userTypeFromServerCache === \"ADMIN\" ?\r\n                            <h2 className=\"allVacationsHeader sharp-text\">All {this.state.allVacations.length} Vacations You Can Edit</h2>\r\n                            :\r\n                            <h2 className=\"allVacationsHeader sharp-text\">All {this.state.allVacations.length} Vacations We've Got For You</h2>\r\n                        }\r\n                    </div>\r\n                \r\n                    <div className=\"allVacations\">\r\n\r\n                        {/* If The Current User Is An Admin, Show Him The 'Add Vacation' Button */}\r\n\r\n                        {this.userTypeFromServerCache === \"ADMIN\"\r\n                            &&\r\n\r\n                            <div className=\"addVacationSquare\" onClick={this.onVacationAdditionAttempt}>\r\n                                <div className=\"newVacationText\">\r\n                                    <h2 className=\"sharp-text\">New Vacation</h2>\r\n                                </div>\r\n                            </div>\r\n                        }\r\n\r\n                        {\r\n                            this.state.allVacations.length > 0 ?\r\n\r\n                            // ---------- In case the user type in the server's cache is type 'USER' ---------- //\r\n\r\n                            this.state.allVacations.map( (vacation : Vacation, index : number) => \r\n                                <VacationComponent key={index} vacation= {vacation} onVacationFollowAttempt= {this.onVacationFollowAttempt}\r\n                                                    validateVacationIsNotLikedByTheUser= {this.validateVacationIsNotLikedByTheUser} onVacationDeleteAttempt= {this.onVacationDeleteAttempt}\r\n                                                    onVacationEditAttempt= {this.onVacationEditAttempt} userTypeFromServerCache= {this.userTypeFromServerCache}\r\n                                                    disableBtn= {this.disableButton} enableBtn= {this.enableButton} />\r\n                            )\r\n                            \r\n                            // ---------- else, if the vacations were not retrieved from the server for some reason ---------- //\r\n                            :\r\n                            <div className=\"noVcationsSection\">\r\n                                <img className=\"settingsImage\" src={settingsImage} alt=\"\"/>\r\n                                <h1 className=\"sharp-text\">Oops, We Could Not Find Any Vacations</h1>\r\n                            </div>\r\n                        }\r\n                        \r\n                    </div>\r\n                </div>\r\n\r\n                {/* ---------------------------------------------- Modals and Snackbar ---------------------------------------------- */}\r\n\r\n                {/* --------------- The 'Deletion' Modal --------------- */}\r\n                <div id=\"deletionModalContainer\">\r\n                    <div id=\"deletionModal\">\r\n                        <h1 id=\"deletionModalHeader\">.</h1>\r\n                        <p id=\"deletionModalText\"></p>\r\n                        <h2 id=\"deletionModalVacationName\">.</h2>\r\n\r\n                        <img id=\"deleteModalIcon\" src={deleteSVG} alt=\"Delete Vacation Modal\" />\r\n\r\n                        <div className=\"buttonsSection\">\r\n                            <button id=\"dontDeleteBtn\">Don't Delete</button>\r\n                            <button id=\"deleteBtn\">Delete</button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n\r\n                {/* --------------- The 'Edit' Modal --------------- */}\r\n                <div id=\"editModalContainer\">\r\n                    <div id=\"editModal\">\r\n                        <h1 id=\"editModalHeader\">.</h1>\r\n\r\n                        <img id=\"editModalIcon\" alt=\"Add New Vacation Modal\" />\r\n\r\n                        <div id=\"editInputs\">\r\n                            <TextField id=\"editedVacationName\" label=\"Name\" variant=\"standard\" />\r\n\r\n                            <div id=\"editDatesSection\">\r\n                                <input type=\"date\" min={new Date().toISOString().slice(0,10)} max={\"2999-01-01\"} id=\"editStartDate\"/>\r\n                                <span>-</span>\r\n                                <input type=\"date\" min={new Date().toISOString().slice(0,10)} max={\"2999-01-01\"} id=\"editEndDate\"/>\r\n                            </div>\r\n\r\n                            <TextField id=\"editedVacationPrice\" type=\"number\" label=\"Price\"variant=\"standard\" />\r\n\r\n                            <TextField id=\"editedVacationDescription\" label=\"Description\" />\r\n\r\n                            <TextField id=\"editedVacationImageURL\" label=\"Image URL\" />\r\n                            <p>The Image You Upload Will Be Saved!</p>\r\n                        </div>\r\n\r\n                        <div className=\"buttonsSection\">\r\n                            <button id=\"editModalCancelBtn\">Cancel</button>\r\n                            <button id=\"editModalDoneBtn\">Update</button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n\r\n                {/* --------------- The 'Edit' Modal --------------- */}\r\n                <div id=\"addModalContainer\">\r\n                    <div id=\"addModal\">\r\n                        <h1 id=\"addModalHeader\">Add a New Vacation !</h1>\r\n\r\n                        <img id=\"addModalIcon\" src={spinningEarthSVG} alt=\"Vacation URL Is Broken\" />\r\n\r\n                        <div id=\"addInputs\">\r\n                            <TextField id=\"addedVacationName\" label=\"Name\" variant=\"standard\" />\r\n\r\n                            <div id=\"addDatesSection\">\r\n                                <input type=\"date\" min={new Date().toISOString().slice(0,10)} max={\"2999-01-01\"} id=\"addStartDate\"/>\r\n                                <span>-</span>\r\n                                <input type=\"date\" min={new Date().toISOString().slice(0,10)} max={\"2999-01-01\"} id=\"addEndDate\"/>\r\n                            </div>\r\n\r\n                            <TextField id=\"addedVacationPrice\" type=\"number\" label=\"Price\" variant=\"standard\" />\r\n\r\n                            <TextField id=\"addedVacationDescription\"label=\"Description\" />\r\n\r\n                            <TextField id=\"addedVacationImageURL\" label=\"Image URL\" />\r\n                            <p>The Image You Upload Will Be Saved!</p>\r\n                        </div>\r\n\r\n                        <div className=\"buttonsSection\">\r\n                            <button id=\"addModalCancelBtn\">Cancel</button>\r\n                            <button id=\"addModalDoneBtn\">Add</button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n\r\n                {/* The User's Snackbar Error Indication */}\r\n                <div id=\"snackbar\"></div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default withRouter(AllVacations);"]},"metadata":{},"sourceType":"module"}