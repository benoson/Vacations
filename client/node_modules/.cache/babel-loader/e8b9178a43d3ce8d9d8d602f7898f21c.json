{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Ben\\\\Desktop\\\\John Bryce\\\\\\u05E4\\u05E8\\u05D5\\u05D9\\u05D9\\u05E7\\u05D8\\u05D9\\u05DD\\\\project3 - Vacations\\\\client\\\\src\\\\components\\\\reportsPage\\\\RerportsPage.tsx\";\nimport React, { useEffect, useState } from 'react';\nimport { Bar } from 'react-chartjs-2';\nimport { store } from '../../Redux/Store';\nimport axios from 'axios';\nimport { interceptorHandler } from '../../models/InterceptorHandler';\nimport { getUserTypeFromServerCache } from '../../models/GetUserTypeFromServerCache';\nexport default function RerportsPage() {\n  let userTypeFromServerCache;\n  let allVacationsInGlobalStore = store.getState().allVacations;\n  const [allFollowedVacationsState, setState] = useState(allVacationsInGlobalStore);\n  useEffect(() => {\n    async () => {\n      userTypeFromServerCache = await getUserTypeFromServerCache();\n\n      if (userTypeFromServerCache === \"ADMIN\") {\n        checkIfGlobalStoreHasAllVacations();\n      }\n    };\n  }, []);\n\n  const checkIfGlobalStoreHasAllVacations = () => {\n    if (allFollowedVacationsState.length === 0) {\n      getAllFollowedVacationsFromServer();\n    } else {\n      // If the client already has all the vacations in the Global Store, filter them by the ones that have at least 1 follower\n      let followedVacationsFromGlobalStore = store.getState().allVacations.filter(vacation => vacation.followersCount > 0);\n      setState(followedVacationsFromGlobalStore);\n    }\n  };\n\n  const getAllFollowedVacationsFromServer = async () => {\n    interceptorHandler(); // Getting all the followed vacations from the server\n\n    try {\n      // Attempting to get all of the followed vacations' names and followers count from the server\n      const response = await axios.get('http://localhost:3001/all_followed_vacations');\n      const followedVacationsData = response.data;\n      setState(followedVacationsData);\n    } catch (error) {\n      try {\n        let errorMessage = error.response.data.error;\n        reportsPageErrorHandler(errorMessage);\n      } catch {\n        reportsPageErrorHandler(error);\n      }\n    }\n  };\n\n  const reportsPageErrorHandler = errorMessage => {\n    // Letting the user know he received an error, by displaying a Pop-Up Message at the bottom of the screen\n    let snackbar = document.getElementById(\"snackbar\");\n    snackbar.className = \"show\";\n    snackbar.textContent = errorMessage;\n    setTimeout(function () {\n      snackbar.className = snackbar.className.replace(\"show\", \"\");\n    }, 6000);\n  };\n\n  const state = {\n    labels: ['January', 'February', 'March', 'April', 'May'],\n    datasets: [{\n      label: 'Rainfall',\n      backgroundColor: 'rgba(75,192,192,1)',\n      borderColor: 'rgba(0,0,0,1)',\n      borderWidth: 2,\n      data: [65, 59, 80, 81, 56]\n    }]\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Bar, {\n    data: state,\n    options: {\n      title: {\n        display: true,\n        text: 'Liked Users Vacations',\n        fontSize: 20\n      },\n      legend: {\n        display: true,\n        position: 'right'\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    id: \"snackbar\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 13\n    }\n  }));\n}","map":{"version":3,"sources":["C:/Users/Ben/Desktop/John Bryce/פרוייקטים/project3 - Vacations/client/src/components/reportsPage/RerportsPage.tsx"],"names":["React","useEffect","useState","Bar","store","axios","interceptorHandler","getUserTypeFromServerCache","RerportsPage","userTypeFromServerCache","allVacationsInGlobalStore","getState","allVacations","allFollowedVacationsState","setState","checkIfGlobalStoreHasAllVacations","length","getAllFollowedVacationsFromServer","followedVacationsFromGlobalStore","filter","vacation","followersCount","response","get","followedVacationsData","data","error","errorMessage","reportsPageErrorHandler","snackbar","document","getElementById","className","textContent","setTimeout","replace","state","labels","datasets","label","backgroundColor","borderColor","borderWidth","title","display","text","fontSize","legend","position"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { Bar } from 'react-chartjs-2';\r\nimport { store } from '../../Redux/Store';\r\nimport axios from 'axios';\r\nimport Vacation from '../../models/Vacation';\r\nimport { interceptorHandler } from '../../models/InterceptorHandler';\r\nimport { getUserTypeFromServerCache } from '../../models/GetUserTypeFromServerCache';\r\n\r\n\r\nexport default function RerportsPage() {\r\n\r\n    let userTypeFromServerCache;\r\n    let allVacationsInGlobalStore = store.getState().allVacations;\r\n\r\n    const [allFollowedVacationsState, setState] = useState(allVacationsInGlobalStore);\r\n    \r\n\r\n    useEffect(() => {\r\n\r\n        async () => {\r\n            \r\n            userTypeFromServerCache = await getUserTypeFromServerCache();\r\n\r\n            if (userTypeFromServerCache === \"ADMIN\") {\r\n        \r\n                checkIfGlobalStoreHasAllVacations();\r\n            }\r\n        }\r\n\r\n    }, []);\r\n\r\n\r\n    const checkIfGlobalStoreHasAllVacations = () => {\r\n        \r\n        if (allFollowedVacationsState.length === 0) {\r\n\r\n            getAllFollowedVacationsFromServer();\r\n        }\r\n\r\n        else {\r\n\r\n            // If the client already has all the vacations in the Global Store, filter them by the ones that have at least 1 follower\r\n            let followedVacationsFromGlobalStore = store.getState().allVacations.filter( vacation => vacation.followersCount > 0);\r\n            setState(followedVacationsFromGlobalStore);\r\n        }\r\n    }\r\n\r\n    const getAllFollowedVacationsFromServer = async () => {\r\n\r\n        interceptorHandler();\r\n\r\n        // Getting all the followed vacations from the server\r\n\r\n        try {\r\n\r\n            // Attempting to get all of the followed vacations' names and followers count from the server\r\n            const response = await axios.get<Vacation[]>('http://localhost:3001/all_followed_vacations');\r\n            const followedVacationsData = response.data;\r\n\r\n            setState(followedVacationsData);\r\n        }\r\n\r\n        catch (error) {\r\n\r\n            try {\r\n                let errorMessage = error.response.data.error;\r\n                reportsPageErrorHandler(errorMessage);\r\n            }\r\n\r\n            catch {\r\n                reportsPageErrorHandler(error);\r\n            }\r\n        }\r\n    }\r\n\r\n    const reportsPageErrorHandler = (errorMessage: string) => {\r\n\r\n        // Letting the user know he received an error, by displaying a Pop-Up Message at the bottom of the screen\r\n\r\n        let snackbar: HTMLDivElement = document.getElementById(\"snackbar\") as HTMLDivElement;\r\n        snackbar.className = \"show\";\r\n        snackbar.textContent = errorMessage;\r\n\r\n        setTimeout(function() {\r\n            snackbar.className = snackbar.className.replace(\"show\", \"\");\r\n        }, 6000);\r\n    }\r\n    \r\n\r\n    const state = {\r\n        labels: ['January', 'February', 'March', 'April', 'May'],\r\n        datasets: [\r\n                {\r\n                    label: 'Rainfall',\r\n                    backgroundColor: 'rgba(75,192,192,1)',\r\n                    borderColor: 'rgba(0,0,0,1)',\r\n                    borderWidth: 2,\r\n                    data: [65, 59, 80, 81, 56]\r\n                }\r\n            ]\r\n    }\r\n\r\n    \r\n    return (\r\n\r\n        <div>\r\n            <Bar\r\n                data={state}\r\n                options={{\r\n                    title:{\r\n                        display:true,\r\n                        text:'Liked Users Vacations',\r\n                        fontSize:20\r\n                    },\r\n                    legend:{\r\n                        display:true,\r\n                        position:'right'\r\n                    }\r\n                }}\r\n            />\r\n\r\n\r\n            {/* The User's Snackbar Error Indication */}\r\n            <div id=\"snackbar\"></div>\r\n        </div>\r\n    )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}