{"ast":null,"code":"import axios from 'axios'; // Explanation -> The interceptor is a just JS variable (from 'axios' library). On refresh => it resets.\n// So, this Model takes the token the user got from the server (which is now inside the sessionStorage),\n// and assign it to the interceptor\n// Checking if the interceptor is empty\n\nexport const interceptorHandler = () => {\n  if (axios.defaults.headers.common['Authorization'] === undefined) {\n    let userData = JSON.parse(sessionStorage.getItem(\"userInfo\")); // Checking if the user has a correct sessionStorage JSON\n\n    if (userData !== null) {\n      // Checking if the user has a token\n      if (userData.token !== undefined) {\n        let brearerToken = \"Bearer \" + userData.token;\n        axios.defaults.headers.common['Authorization'] = brearerToken;\n      }\n    }\n  }\n};","map":{"version":3,"sources":["C:/Users/Ben/Desktop/John Bryce/פרוייקטים/project3 - Vacations/client/src/models/InterceptorHandler.ts"],"names":["axios","interceptorHandler","defaults","headers","common","undefined","userData","JSON","parse","sessionStorage","getItem","token","brearerToken"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB,C,CAEA;AACA;AACA;AAEA;;AACA,OAAO,MAAMC,kBAAkB,GAAG,MAAM;AAEpC,MAAID,KAAK,CAACE,QAAN,CAAeC,OAAf,CAAuBC,MAAvB,CAA8B,eAA9B,MAAmDC,SAAvD,EAAkE;AAE9D,QAAIC,QAAQ,GAAGC,IAAI,CAACC,KAAL,CAAWC,cAAc,CAACC,OAAf,CAAuB,UAAvB,CAAX,CAAf,CAF8D,CAI9D;;AACA,QAAIJ,QAAQ,KAAK,IAAjB,EAAuB;AAEnB;AACA,UAAIA,QAAQ,CAACK,KAAT,KAAmBN,SAAvB,EAAkC;AAE9B,YAAIO,YAAY,GAAG,YAAYN,QAAQ,CAACK,KAAxC;AACAX,QAAAA,KAAK,CAACE,QAAN,CAAeC,OAAf,CAAuBC,MAAvB,CAA8B,eAA9B,IAAiDQ,YAAjD;AACH;AACJ;AACJ;AACJ,CAjBM","sourcesContent":["import axios from 'axios';\r\n\r\n// Explanation -> The interceptor is a just JS variable (from 'axios' library). On refresh => it resets.\r\n// So, this Model takes the token the user got from the server (which is now inside the sessionStorage),\r\n// and assign it to the interceptor\r\n\r\n// Checking if the interceptor is empty\r\nexport const interceptorHandler = () => {\r\n\r\n    if (axios.defaults.headers.common['Authorization'] === undefined) {\r\n\r\n        let userData = JSON.parse(sessionStorage.getItem(\"userInfo\"));\r\n\r\n        // Checking if the user has a correct sessionStorage JSON\r\n        if (userData !== null) {\r\n\r\n            // Checking if the user has a token\r\n            if (userData.token !== undefined) {\r\n    \r\n                let brearerToken = \"Bearer \" + userData.token;\r\n                axios.defaults.headers.common['Authorization'] = brearerToken;\r\n            }\r\n        }\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}