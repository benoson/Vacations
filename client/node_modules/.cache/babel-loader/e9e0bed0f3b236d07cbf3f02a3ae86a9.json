{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Ben\\\\Desktop\\\\John Bryce\\\\\\u05E4\\u05E8\\u05D5\\u05D9\\u05D9\\u05E7\\u05D8\\u05D9\\u05DD\\\\project3 - Vacations\\\\client\\\\src\\\\components\\\\registerPage\\\\RegisterPage.tsx\";\nimport React, { Component } from 'react';\nimport { NavLink } from 'react-router-dom';\nimport logo from \"../../assets/astronautSVG.svg\";\nimport UserRegisterDetails from '../../models/UserRegisterDetails';\nimport axios from 'axios';\nimport './registerPage.css';\nexport class RegisterPage extends Component {\n  constructor(props) {\n    super(props);\n\n    this.updateFirstNameValue = event => {\n      // getting the first name value entered in the first name's input field\n      const firstNameInputField = event.target;\n      const firstNameInputFieldValue = firstNameInputField.value;\n      const trimmedFirstNameInputField = firstNameInputFieldValue.trim();\n      this.setState({\n        firstName: trimmedFirstNameInputField\n      });\n    };\n\n    this.updateLastNameValue = event => {\n      // getting the password value entered in the password's input field\n      const lastNameInputField = event.target;\n      const lastNameInputFieldValue = lastNameInputField.value;\n      const trimmedLastNameInputField = lastNameInputFieldValue.trim();\n      this.setState({\n        lastName: trimmedLastNameInputField\n      });\n    };\n\n    this.updateUserNameValue = event => {\n      // getting the password value entered in the password's input field\n      const userNameInputField = event.target;\n      const userNameInputFieldValue = userNameInputField.value;\n      const trimmedUserNameInputField = userNameInputFieldValue.trim();\n      this.setState({\n        userName: trimmedUserNameInputField\n      });\n    };\n\n    this.updatePasswordValue = event => {\n      // getting the password value entered in the password's input field\n      const passwordInputField = event.target;\n      const passwordInputFieldValue = passwordInputField.value;\n      const trimmedPasswordInputField = passwordInputFieldValue.trim();\n      this.setState({\n        password: trimmedPasswordInputField\n      });\n    };\n\n    this.onUserRegisterClick = async () => {\n      try {\n        let userRegisterDetails = new UserRegisterDetails(this.state.firstName, this.state.lastName, this.state.userName, this.state.password); // DOES THIS RESPONSE GETS CALLED AFTER REGISTRATION ? BECAUSE IT GOES TO LOGIN ON THE SERVER SIDE, AND LOGIN RETURNS\n        // THE ACTUAL DATA........\n        // The response we get, should be type of 'SuccessfulLoginServerResponse' class (token & user type)\n\n        const response = await axios.post('http://localhost:3001/users/register', userRegisterDetails); // Here we are receiving the token & user type from the data we got back from the server\n\n        const serverResponseData = response.data;\n        console.log(serverResponseData); // Attaching the Token we received from the server, to every HTTP request we'll send from now on\n        // This is our 'Interceptor'\n        // let brearerToken = \"Bearer \" + serverResponseData.token;\n        // axios.defaults.headers.common['Authorization'] = brearerToken;\n        // // A Function that handles the URL and SessionStorage based on the data received from the server\n        // this.handleUserInfoFromServer(serverResponseData);\n      } catch (error) {\n        let errorMessage = error.response.data.error;\n        console.log(errorMessage); // this.loginErrorHandler(errorMessage);\n      }\n    };\n\n    this.state = {\n      firstName: \"\",\n      lastName: \"\",\n      userName: \"\",\n      password: \"\"\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"registerSection\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"registerSquare\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      className: \"register-logo\",\n      src: logo,\n      alt: \"Explorer\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(\"h2\", {\n      className: \"sharp-text\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 21\n      }\n    }, \"Register\"), /*#__PURE__*/React.createElement(\"h3\", {\n      className: \"sharp-text margin-bottom-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 21\n      }\n    }, \"To Explorer\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"inputFieldSection\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"fieldset\", {\n      className: \"cerdinals-fieldset\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"legend\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 29\n      }\n    }, \"First Name\"), /*#__PURE__*/React.createElement(\"input\", {\n      onChange: this.updateFirstNameValue,\n      type: \"text\",\n      name: \"firstName\",\n      id: \"firstNameField\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 29\n      }\n    })), /*#__PURE__*/React.createElement(\"fieldset\", {\n      className: \"cerdinals-fieldset\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"legend\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 29\n      }\n    }, \"Last Name\"), /*#__PURE__*/React.createElement(\"input\", {\n      onChange: this.updateLastNameValue,\n      type: \"text\",\n      name: \"lastName\",\n      id: \"lastNameField\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 29\n      }\n    })), /*#__PURE__*/React.createElement(\"fieldset\", {\n      className: \"cerdinals-fieldset\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"legend\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 29\n      }\n    }, \"Username\"), /*#__PURE__*/React.createElement(\"input\", {\n      onChange: this.updateUserNameValue,\n      type: \"text\",\n      name: \"username\",\n      id: \"usernameField\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 29\n      }\n    })), /*#__PURE__*/React.createElement(\"fieldset\", {\n      className: \"cerdinals-fieldset\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"legend\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 29\n      }\n    }, \"Password\"), /*#__PURE__*/React.createElement(\"input\", {\n      onChange: this.updatePasswordValue,\n      type: \"password\",\n      name: \"password\",\n      id: \"passwordField\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 29\n      }\n    })), /*#__PURE__*/React.createElement(\"button\", {\n      className: \"registerBtn\",\n      onClick: this.onUserRegisterClick,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 25\n      }\n    }, \"Register\")), /*#__PURE__*/React.createElement(NavLink, {\n      className: \"alreadyRegisteredLink sharp-text\",\n      to: \"/login\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 21\n      }\n    }, \"I'm Already Registered\")), /*#__PURE__*/React.createElement(\"p\", {\n      id: \"userMessagesParagraph\",\n      className: \"userMessagesParagraph sharp-text\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 17\n      }\n    }));\n  }\n\n}\nexport default RegisterPage;","map":{"version":3,"sources":["C:/Users/Ben/Desktop/John Bryce/פרוייקטים/project3 - Vacations/client/src/components/registerPage/RegisterPage.tsx"],"names":["React","Component","NavLink","UserRegisterDetails","axios","RegisterPage","constructor","props","updateFirstNameValue","event","firstNameInputField","target","firstNameInputFieldValue","value","trimmedFirstNameInputField","trim","setState","firstName","updateLastNameValue","lastNameInputField","lastNameInputFieldValue","trimmedLastNameInputField","lastName","updateUserNameValue","userNameInputField","userNameInputFieldValue","trimmedUserNameInputField","userName","updatePasswordValue","passwordInputField","passwordInputFieldValue","trimmedPasswordInputField","password","onUserRegisterClick","userRegisterDetails","state","response","post","serverResponseData","data","console","log","error","errorMessage","render","logo"],"mappings":"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","sourcesContent":["import React, { ChangeEvent, Component } from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport logo from '../../assets/astronautSVG.svg';\r\nimport UserRegisterDetails from '../../models/UserRegisterDetails';\r\nimport SuccessfulLoginServerResponse from '../../models/SuccessfulLoginServerResponse';\r\nimport axios from 'axios';\r\nimport './registerPage.css';\r\n\r\n\r\ninterface UserRegisterState {\r\n    firstName: string;\r\n    lastName: string;\r\n    userName: string;\r\n    password: string;\r\n}\r\n\r\n\r\nexport class RegisterPage extends Component <any, UserRegisterState> {\r\n\r\n    constructor(props: any) {\r\n        super(props);\r\n    \r\n        this.state = {\r\n            firstName: \"\",\r\n            lastName: \"\",\r\n            userName: \"\",\r\n            password: \"\"\r\n        };\r\n    }\r\n    \r\n\r\n    private updateFirstNameValue = (event : ChangeEvent <HTMLInputElement>) => {\r\n\r\n        // getting the first name value entered in the first name's input field\r\n        const firstNameInputField : HTMLInputElement = event.target;\r\n\r\n        const firstNameInputFieldValue : string =  firstNameInputField.value;\r\n        const trimmedFirstNameInputField : string = firstNameInputFieldValue.trim();\r\n\r\n        this.setState({\r\n            firstName: trimmedFirstNameInputField\r\n        });\r\n    }\r\n\r\n    private updateLastNameValue = (event : ChangeEvent <HTMLInputElement>) => {\r\n\r\n        // getting the password value entered in the password's input field\r\n        const lastNameInputField : HTMLInputElement = event.target;\r\n\r\n        const lastNameInputFieldValue : string =  lastNameInputField.value;\r\n        const trimmedLastNameInputField : string = lastNameInputFieldValue.trim();\r\n\r\n        this.setState({\r\n            lastName: trimmedLastNameInputField\r\n        });\r\n    }\r\n\r\n    private updateUserNameValue = (event : ChangeEvent <HTMLInputElement>) => {\r\n\r\n        // getting the password value entered in the password's input field\r\n        const userNameInputField : HTMLInputElement = event.target;\r\n\r\n        const userNameInputFieldValue : string =  userNameInputField.value;\r\n        const trimmedUserNameInputField : string = userNameInputFieldValue.trim();\r\n\r\n        this.setState({\r\n            userName: trimmedUserNameInputField\r\n        });\r\n    }\r\n\r\n    private updatePasswordValue = (event : ChangeEvent <HTMLInputElement>) => {\r\n\r\n        // getting the password value entered in the password's input field\r\n        const passwordInputField : HTMLInputElement = event.target;\r\n\r\n        const passwordInputFieldValue : string =  passwordInputField.value;\r\n        const trimmedPasswordInputField : string = passwordInputFieldValue.trim();\r\n\r\n        this.setState({\r\n            password: trimmedPasswordInputField\r\n        });\r\n    }\r\n\r\n\r\n    private onUserRegisterClick = async () => {\r\n        try {\r\n            let userRegisterDetails = new UserRegisterDetails(this.state.firstName, this.state.lastName, this.state.userName, this.state.password);\r\n            \r\n\r\n            // DOES THIS RESPONSE GETS CALLED AFTER REGISTRATION ? BECAUSE IT GOES TO LOGIN ON THE SERVER SIDE, AND LOGIN RETURNS\r\n            // THE ACTUAL DATA........\r\n\r\n\r\n            // The response we get, should be type of 'SuccessfulLoginServerResponse' class (token & user type)\r\n            const response = await axios.post<SuccessfulLoginServerResponse>('http://localhost:3001/users/register', userRegisterDetails);\r\n\r\n            // Here we are receiving the token & user type from the data we got back from the server\r\n            const serverResponseData = response.data;\r\n\r\n            console.log(serverResponseData);\r\n            \r\n\r\n            // Attaching the Token we received from the server, to every HTTP request we'll send from now on\r\n            // This is our 'Interceptor'\r\n            // let brearerToken = \"Bearer \" + serverResponseData.token;\r\n            // axios.defaults.headers.common['Authorization'] = brearerToken;\r\n\r\n            // // A Function that handles the URL and SessionStorage based on the data received from the server\r\n            // this.handleUserInfoFromServer(serverResponseData);\r\n        }\r\n\r\n        catch (error) {\r\n\r\n            let errorMessage = error.response.data.error;\r\n            console.log(errorMessage);\r\n            \r\n            // this.loginErrorHandler(errorMessage);\r\n        }\r\n    }\r\n\r\n    \r\n    render() {\r\n        return (\r\n            <div className=\"registerSection\">\r\n\r\n                <div className=\"registerSquare\">\r\n                    <img className=\"register-logo\" src={logo} alt=\"Explorer\"/>\r\n\r\n                    <h2 className=\"sharp-text\">Register</h2>\r\n                    <h3 className=\"sharp-text margin-bottom-2\">To Explorer</h3>\r\n\r\n\r\n                    <div className=\"inputFieldSection\">\r\n                        <fieldset className=\"cerdinals-fieldset\">\r\n                            <legend>First Name</legend>\r\n                            <input onChange={this.updateFirstNameValue} type=\"text\" name=\"firstName\" id=\"firstNameField\"/>\r\n                        </fieldset>\r\n\r\n                        <fieldset className=\"cerdinals-fieldset\">\r\n                            <legend>Last Name</legend>\r\n                            <input onChange={this.updateLastNameValue} type=\"text\" name=\"lastName\" id=\"lastNameField\"/>\r\n                        </fieldset>\r\n\r\n                        <fieldset className=\"cerdinals-fieldset\">\r\n                            <legend>Username</legend>\r\n                            <input onChange={this.updateUserNameValue} type=\"text\" name=\"username\" id=\"usernameField\"/>\r\n                        </fieldset>\r\n\r\n                        <fieldset className=\"cerdinals-fieldset\">\r\n                            <legend>Password</legend>\r\n                            <input onChange={this.updatePasswordValue} type=\"password\" name=\"password\" id=\"passwordField\"/>\r\n                        </fieldset>\r\n\r\n                        <button className=\"registerBtn\" onClick={this.onUserRegisterClick}>Register</button>\r\n                    </div>\r\n\r\n                    <NavLink className=\"alreadyRegisteredLink sharp-text\" to=\"/login\">I'm Already Registered</NavLink>\r\n                </div>\r\n\r\n                <p id=\"userMessagesParagraph\" className=\"userMessagesParagraph sharp-text\"></p>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default RegisterPage\r\n"]},"metadata":{},"sourceType":"module"}