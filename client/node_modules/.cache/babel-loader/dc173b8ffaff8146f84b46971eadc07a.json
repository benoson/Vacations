{"ast":null,"code":"import axios from'axios';// Explanation -> The interceptor is a just JS variable (from 'axios' library). On refresh => it resets.\n// So, this Model takes the token the user got from the server (which is now inside the sessionStorage),\n// and assigns it to the interceptor\nexport var interceptorHandler=function interceptorHandler(){var userData=JSON.parse(sessionStorage.getItem(\"userInfo\"));// Checking if the user has a correct sessionStorage JSON\nif(userData!==null){// Checking if the user has a token\nif(userData.token!==undefined){// Assigning the Token + Bearer string to the Interceptor\nvar brearerToken=\"Bearer \"+userData.token;axios.defaults.headers.common['Authorization']=brearerToken;}}};","map":{"version":3,"sources":["C:/Users/Ben/Desktop/John Bryce/פרוייקטים/project3 - Vacations/client/src/models/InterceptorHandler.ts"],"names":["axios","interceptorHandler","userData","JSON","parse","sessionStorage","getItem","token","undefined","brearerToken","defaults","headers","common"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CAEA;AACA;AACA;AAEA,MAAO,IAAMC,CAAAA,kBAAkB,CAAG,QAArBA,CAAAA,kBAAqB,EAAM,CAEpC,GAAIC,CAAAA,QAAQ,CAAGC,IAAI,CAACC,KAAL,CAAWC,cAAc,CAACC,OAAf,CAAuB,UAAvB,CAAX,CAAf,CAEA;AACA,GAAIJ,QAAQ,GAAK,IAAjB,CAAuB,CAEnB;AACA,GAAIA,QAAQ,CAACK,KAAT,GAAmBC,SAAvB,CAAkC,CAE9B;AACA,GAAIC,CAAAA,YAAY,CAAG,UAAYP,QAAQ,CAACK,KAAxC,CACAP,KAAK,CAACU,QAAN,CAAeC,OAAf,CAAuBC,MAAvB,CAA8B,eAA9B,EAAiDH,YAAjD,CACH,CACJ,CACJ,CAfM","sourcesContent":["import axios from 'axios';\r\n\r\n// Explanation -> The interceptor is a just JS variable (from 'axios' library). On refresh => it resets.\r\n// So, this Model takes the token the user got from the server (which is now inside the sessionStorage),\r\n// and assigns it to the interceptor\r\n\r\nexport const interceptorHandler = () => {\r\n\r\n    let userData = JSON.parse(sessionStorage.getItem(\"userInfo\"));\r\n\r\n    // Checking if the user has a correct sessionStorage JSON\r\n    if (userData !== null) {\r\n\r\n        // Checking if the user has a token\r\n        if (userData.token !== undefined) {\r\n\r\n            // Assigning the Token + Bearer string to the Interceptor\r\n            let brearerToken = \"Bearer \" + userData.token;\r\n            axios.defaults.headers.common['Authorization'] = brearerToken;\r\n        }\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}