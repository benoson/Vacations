{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Ben\\\\Desktop\\\\John Bryce\\\\\\u05E4\\u05E8\\u05D5\\u05D9\\u05D9\\u05E7\\u05D8\\u05D9\\u05DD\\\\project3 - Vacations\\\\client\\\\src\\\\components\\\\topNavbar\\\\TopNavbar.tsx\";\nimport React from 'react';\nimport { useHistory } from \"react-router-dom\";\nimport { isUserLoggedValidator } from '../../models/IsUserLoggedValidator';\nimport { store } from '../../Redux/Store';\nimport { ActionType } from '../../Redux/ActionType';\nimport axios from 'axios';\nimport './topNavbar.css'; // ------------------------------------------------- This Component Displays The Top Navigation Bar ------------------------------------------------- //\n\nexport default function TopNavbar() {\n  const history = useHistory(); // ------------------------------------------------- Controller ------------------------------------------------- //\n  // Handles The User's Request To Logout And Login\n\n  const onUserLoginStautsChange = async () => {\n    let isUserLogged = isUserLoggedValidator();\n\n    if (isUserLogged) {\n      // Sending a 'logout' request, in order to delete the user from the server's cache\n      try {\n        await axios.post(`http://localhost:3001/users/logout`);\n      } catch {} finally {\n        // Clearing the user's favorite vacations from the Global Store\n        store.dispatch({\n          type: ActionType.OnUserLogout\n        });\n      }\n    }\n\n    sessionStorage.clear();\n    history.push(\"/login\");\n  }; // ------------------------------------------------- View ------------------------------------------------- //\n  // When the user scrolls down, change the navigation bar\n\n\n  window.onscroll = () => {\n    try {\n      const topNavBar = document.querySelector(\"#topNavbar\");\n      const logStatusBtn = document.querySelector(\"#logStatusBtn\");\n\n      if (document.body.scrollTop > 130 || document.documentElement.scrollTop > 130) {\n        topNavBar.style.backgroundColor = \"#174d5f\";\n        topNavBar.style.color = \"white\";\n        logStatusBtn.style.color = 'white';\n      } else if (document.body.scrollTop <= 130 || document.documentElement.scrollTop <= 130) {\n        topNavBar.style.backgroundColor = \"transparent\";\n        topNavBar.style.color = \"#15304c\";\n        logStatusBtn.style.color = 'blue';\n      }\n    } catch {}\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    id: \"topNavbar\",\n    className: \"topNavbar\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 9\n    }\n  }, isUserLoggedValidator() ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"helloUserSection\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 17\n    }\n  }, // Displaying The Username In The Navigation Bar\n  JSON.parse(sessionStorage.getItem(\"userInfo\")).userName, /*#__PURE__*/React.createElement(\"span\", {\n    id: \"logStatusBtn\",\n    onClick: onUserLoginStautsChange,\n    className: \"topNavItem loginStatusButton\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 21\n    }\n  }, \"Logout\")) : /*#__PURE__*/React.createElement(\"div\", {\n    className: \"helloUserSection\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    id: \"loginStatusBtn\",\n    onClick: onUserLoginStautsChange,\n    className: \"topNavItem loginStatusButton\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 21\n    }\n  }, \"Login\")));\n}","map":{"version":3,"sources":["C:/Users/Ben/Desktop/John Bryce/פרוייקטים/project3 - Vacations/client/src/components/topNavbar/TopNavbar.tsx"],"names":["React","useHistory","isUserLoggedValidator","store","ActionType","axios","TopNavbar","history","onUserLoginStautsChange","isUserLogged","post","dispatch","type","OnUserLogout","sessionStorage","clear","push","window","onscroll","topNavBar","document","querySelector","logStatusBtn","body","scrollTop","documentElement","style","backgroundColor","color","JSON","parse","getItem","userName"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,SAASC,qBAAT,QAAsC,oCAAtC;AACA,SAASC,KAAT,QAAsB,mBAAtB;AACA,SAASC,UAAT,QAA2B,wBAA3B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAO,iBAAP,C,CAGA;;AAEA,eAAe,SAASC,SAAT,GAAqB;AAEhC,QAAMC,OAAO,GAAGN,UAAU,EAA1B,CAFgC,CAMhC;AAEA;;AACA,QAAMO,uBAAuB,GAAG,YAAY;AAExC,QAAIC,YAAY,GAAGP,qBAAqB,EAAxC;;AAEA,QAAIO,YAAJ,EAAkB;AAEd;AACA,UAAI;AACA,cAAMJ,KAAK,CAACK,IAAN,CAAY,oCAAZ,CAAN;AACH,OAFD,CAGA,MAAM,CAAE,CAHR,SAIQ;AACJ;AACAP,QAAAA,KAAK,CAACQ,QAAN,CAAe;AACXC,UAAAA,IAAI,EAAER,UAAU,CAACS;AADN,SAAf;AAGH;AACJ;;AAEDC,IAAAA,cAAc,CAACC,KAAf;AACAR,IAAAA,OAAO,CAACS,IAAR,CAAa,QAAb;AACH,GArBD,CATgC,CAkChC;AAEA;;;AACAC,EAAAA,MAAM,CAACC,QAAP,GAAkB,MAAM;AACpB,QAAI;AACA,YAAMC,SAAS,GAAGC,QAAQ,CAACC,aAAT,CAAuB,YAAvB,CAAlB;AACA,YAAMC,YAAY,GAAGF,QAAQ,CAACC,aAAT,CAAuB,eAAvB,CAArB;;AAEA,UAAID,QAAQ,CAACG,IAAT,CAAcC,SAAd,GAA0B,GAA1B,IAAiCJ,QAAQ,CAACK,eAAT,CAAyBD,SAAzB,GAAqC,GAA1E,EAA+E;AAC3EL,QAAAA,SAAS,CAACO,KAAV,CAAgBC,eAAhB,GAAkC,SAAlC;AACAR,QAAAA,SAAS,CAACO,KAAV,CAAgBE,KAAhB,GAAwB,OAAxB;AACAN,QAAAA,YAAY,CAACI,KAAb,CAAmBE,KAAnB,GAA2B,OAA3B;AACH,OAJD,MAMK,IAAIR,QAAQ,CAACG,IAAT,CAAcC,SAAd,IAA2B,GAA3B,IAAkCJ,QAAQ,CAACK,eAAT,CAAyBD,SAAzB,IAAsC,GAA5E,EAAiF;AAClFL,QAAAA,SAAS,CAACO,KAAV,CAAgBC,eAAhB,GAAkC,aAAlC;AACAR,QAAAA,SAAS,CAACO,KAAV,CAAgBE,KAAhB,GAAwB,SAAxB;AACAN,QAAAA,YAAY,CAACI,KAAb,CAAmBE,KAAnB,GAA2B,MAA3B;AACH;AACJ,KAfD,CAgBA,MAAM,CAAE;AACX,GAlBD;;AAqBA,sBACI;AAAK,IAAA,EAAE,EAAC,WAAR;AAAoB,IAAA,SAAS,EAAC,WAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEK1B,qBAAqB,kBAClB;AAAK,IAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEQ;AACA2B,EAAAA,IAAI,CAACC,KAAL,CAAWhB,cAAc,CAACiB,OAAf,CAAuB,UAAvB,CAAX,EAA+CC,QAHvD,eAMI;AAAM,IAAA,EAAE,EAAC,cAAT;AAAwB,IAAA,OAAO,EAAExB,uBAAjC;AAA0D,IAAA,SAAS,EAAC,8BAApE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cANJ,CADkB,gBAYlB;AAAK,IAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAM,IAAA,EAAE,EAAC,gBAAT;AAA0B,IAAA,OAAO,EAAEA,uBAAnC;AAA4D,IAAA,SAAS,EAAC,8BAAtE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADJ,CAdR,CADJ;AAwBH","sourcesContent":["import React from 'react';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { isUserLoggedValidator } from '../../models/IsUserLoggedValidator';\r\nimport { store } from '../../Redux/Store';\r\nimport { ActionType } from '../../Redux/ActionType';\r\nimport axios from 'axios';\r\nimport './topNavbar.css';\r\n\r\n\r\n// ------------------------------------------------- This Component Displays The Top Navigation Bar ------------------------------------------------- //\r\n\r\nexport default function TopNavbar() {\r\n\r\n    const history = useHistory();\r\n\r\n\r\n\r\n    // ------------------------------------------------- Controller ------------------------------------------------- //\r\n\r\n    // Handles The User's Request To Logout And Login\r\n    const onUserLoginStautsChange = async () => {\r\n        \r\n        let isUserLogged = isUserLoggedValidator() ;\r\n\r\n        if (isUserLogged) {\r\n            \r\n            // Sending a 'logout' request, in order to delete the user from the server's cache\r\n            try {\r\n                await axios.post(`http://localhost:3001/users/logout`);\r\n            }\r\n            catch {}\r\n            finally {\r\n                // Clearing the user's favorite vacations from the Global Store\r\n                store.dispatch({\r\n                    type: ActionType.OnUserLogout\r\n                });\r\n            }\r\n        }\r\n        \r\n        sessionStorage.clear();\r\n        history.push(\"/login\");\r\n    }\r\n\r\n\r\n\r\n    // ------------------------------------------------- View ------------------------------------------------- //\r\n    \r\n    // When the user scrolls down, change the navigation bar\r\n    window.onscroll = () => {\r\n        try {\r\n            const topNavBar = document.querySelector(\"#topNavbar\") as HTMLElement;\r\n            const logStatusBtn = document.querySelector(\"#logStatusBtn\") as HTMLElement;\r\n\r\n            if (document.body.scrollTop > 130 || document.documentElement.scrollTop > 130) {\r\n                topNavBar.style.backgroundColor = \"#174d5f\";\r\n                topNavBar.style.color = \"white\";\r\n                logStatusBtn.style.color = 'white';\r\n            }\r\n    \r\n            else if (document.body.scrollTop <= 130 || document.documentElement.scrollTop <= 130) {\r\n                topNavBar.style.backgroundColor = \"transparent\";\r\n                topNavBar.style.color = \"#15304c\";\r\n                logStatusBtn.style.color = 'blue';\r\n            }\r\n        }\r\n        catch {}\r\n    };\r\n\r\n\r\n    return (\r\n        <div id=\"topNavbar\" className=\"topNavbar\">\r\n\r\n            {isUserLoggedValidator() ? \r\n                <div className=\"helloUserSection\">\r\n                    {\r\n                        // Displaying The Username In The Navigation Bar\r\n                        JSON.parse(sessionStorage.getItem(\"userInfo\")).userName\r\n                    }\r\n\r\n                    <span id=\"logStatusBtn\" onClick={onUserLoginStautsChange} className=\"topNavItem loginStatusButton\">\r\n                            Logout\r\n                        </span>\r\n                </div>\r\n                :\r\n                <div className=\"helloUserSection\">\r\n                    <span id=\"loginStatusBtn\" onClick={onUserLoginStautsChange} className=\"topNavItem loginStatusButton\">\r\n                        Login\r\n                    </span>\r\n                </div>\r\n            }\r\n\r\n        </div>\r\n    )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}