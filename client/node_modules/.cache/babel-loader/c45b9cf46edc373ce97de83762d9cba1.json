{"ast":null,"code":"import { ActionType } from \"./ActionType\";\n// --------------- This is the reducer (acts like a state machine) --------------- //\nexport default function reduce(oldAppState, action) {\n  // Copying the old app state, in order to modify it, based on the action\n  const newAppState = { ...oldAppState\n  };\n\n  switch (action.type) {\n    case ActionType.GetAllVacations:\n      newAppState.allVacations = [...action.payload];\n      break;\n\n    case ActionType.SetFollowedVacation:\n      newAppState.favoriteVacations.push(action.payload);\n      break;\n\n    case ActionType.GetFavoriteVacations:\n      newAppState.favoriteVacations = [...action.payload];\n      break;\n\n    case ActionType.UnfolloweVacation:\n      newAppState.favoriteVacations.splice(action.payload, 1);\n      break;\n\n    case ActionType.AddVacation:\n      newAppState.allVacations.push(action.payload);\n      break;\n\n    case ActionType.UpdateVacation:\n      console.log(newAppState.allVacations[action.payload.indexOfClickedVacationInGlobalStore]);\n      newAppState.allVacations[action.payload.indexOfClickedVacationInGlobalStore] = action.payload.convertedValidDataForUIDisplay;\n      console.log(newAppState.allVacations[action.payload.indexOfClickedVacationInGlobalStore]);\n      break;\n\n    case ActionType.DeleteVacation:\n      newAppState.allVacations.splice(action.payload, 1);\n      break;\n\n    case ActionType.OnUserLogout:\n      // Clearing the favorite user's vacations on logout\n      newAppState.favoriteVacations = new Array();\n      break;\n  }\n\n  return newAppState;\n}","map":{"version":3,"sources":["C:/Users/Ben/Desktop/John Bryce/פרוייקטים/project3 - Vacations/client/src/Redux/Reducer.ts"],"names":["ActionType","reduce","oldAppState","action","newAppState","type","GetAllVacations","allVacations","payload","SetFollowedVacation","favoriteVacations","push","GetFavoriteVacations","UnfolloweVacation","splice","AddVacation","UpdateVacation","console","log","indexOfClickedVacationInGlobalStore","convertedValidDataForUIDisplay","DeleteVacation","OnUserLogout","Array"],"mappings":"AAEA,SAASA,UAAT,QAA2B,cAA3B;AAIA;AAEA,eAAe,SAASC,MAAT,CAAiBC,WAAjB,EAAyCC,MAAzC,EAAoE;AAE/E;AACA,QAAMC,WAAW,GAAG,EAAC,GAAGF;AAAJ,GAApB;;AAEA,UAAQC,MAAM,CAACE,IAAf;AACI,SAAKL,UAAU,CAACM,eAAhB;AACIF,MAAAA,WAAW,CAACG,YAAZ,GAA2B,CAAC,GAAGJ,MAAM,CAACK,OAAX,CAA3B;AACA;;AAEJ,SAAKR,UAAU,CAACS,mBAAhB;AACIL,MAAAA,WAAW,CAACM,iBAAZ,CAA8BC,IAA9B,CAAmCR,MAAM,CAACK,OAA1C;AACA;;AAEJ,SAAKR,UAAU,CAACY,oBAAhB;AACIR,MAAAA,WAAW,CAACM,iBAAZ,GAAgC,CAAC,GAAGP,MAAM,CAACK,OAAX,CAAhC;AACA;;AAEJ,SAAKR,UAAU,CAACa,iBAAhB;AACIT,MAAAA,WAAW,CAACM,iBAAZ,CAA8BI,MAA9B,CAAqCX,MAAM,CAACK,OAA5C,EAAqD,CAArD;AACA;;AAEJ,SAAKR,UAAU,CAACe,WAAhB;AACIX,MAAAA,WAAW,CAACG,YAAZ,CAAyBI,IAAzB,CAA8BR,MAAM,CAACK,OAArC;AACA;;AAEJ,SAAKR,UAAU,CAACgB,cAAhB;AACIC,MAAAA,OAAO,CAACC,GAAR,CAAYd,WAAW,CAACG,YAAZ,CAAyBJ,MAAM,CAACK,OAAP,CAAeW,mCAAxC,CAAZ;AAEAf,MAAAA,WAAW,CAACG,YAAZ,CAAyBJ,MAAM,CAACK,OAAP,CAAeW,mCAAxC,IAA+EhB,MAAM,CAACK,OAAP,CAAeY,8BAA9F;AACAH,MAAAA,OAAO,CAACC,GAAR,CAAYd,WAAW,CAACG,YAAZ,CAAyBJ,MAAM,CAACK,OAAP,CAAeW,mCAAxC,CAAZ;AACA;;AAEJ,SAAKnB,UAAU,CAACqB,cAAhB;AACIjB,MAAAA,WAAW,CAACG,YAAZ,CAAyBO,MAAzB,CAAgCX,MAAM,CAACK,OAAvC,EAAgD,CAAhD;AACA;;AAEJ,SAAKR,UAAU,CAACsB,YAAhB;AACI;AACAlB,MAAAA,WAAW,CAACM,iBAAZ,GAAgC,IAAIa,KAAJ,EAAhC;AACA;AAnCR;;AAsCA,SAAOnB,WAAP;AACH","sourcesContent":["import AppState from \"./AppState\";\r\nimport Action from \"./Action\";\r\nimport { ActionType } from \"./ActionType\";\r\nimport Vacation from \"../models/Vacation\";\r\n\r\n\r\n// --------------- This is the reducer (acts like a state machine) --------------- //\r\n\r\nexport default function reduce (oldAppState : AppState, action : Action): AppState {\r\n\r\n    // Copying the old app state, in order to modify it, based on the action\r\n    const newAppState = {...oldAppState};\r\n\r\n    switch (action.type) {\r\n        case ActionType.GetAllVacations:\r\n            newAppState.allVacations = [...action.payload];\r\n            break;\r\n\r\n        case ActionType.SetFollowedVacation:\r\n            newAppState.favoriteVacations.push(action.payload);\r\n            break;\r\n\r\n        case ActionType.GetFavoriteVacations:\r\n            newAppState.favoriteVacations = [...action.payload];\r\n            break;\r\n\r\n        case ActionType.UnfolloweVacation:\r\n            newAppState.favoriteVacations.splice(action.payload, 1);\r\n            break;\r\n\r\n        case ActionType.AddVacation:\r\n            newAppState.allVacations.push(action.payload);\r\n            break;\r\n\r\n        case ActionType.UpdateVacation:\r\n            console.log(newAppState.allVacations[action.payload.indexOfClickedVacationInGlobalStore]);\r\n            \r\n            newAppState.allVacations[action.payload.indexOfClickedVacationInGlobalStore] = action.payload.convertedValidDataForUIDisplay;\r\n            console.log(newAppState.allVacations[action.payload.indexOfClickedVacationInGlobalStore]);\r\n            break;\r\n\r\n        case ActionType.DeleteVacation:\r\n            newAppState.allVacations.splice(action.payload, 1);\r\n            break;            \r\n\r\n        case ActionType.OnUserLogout:\r\n            // Clearing the favorite user's vacations on logout\r\n            newAppState.favoriteVacations = new Array <Vacation> ();\r\n            break;\r\n    }\r\n\r\n    return newAppState;\r\n}"]},"metadata":{},"sourceType":"module"}