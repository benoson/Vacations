{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Ben\\\\Desktop\\\\John Bryce\\\\\\u05E4\\u05E8\\u05D5\\u05D9\\u05D9\\u05E7\\u05D8\\u05D9\\u05DD\\\\project3 - Vacations\\\\vacations\\\\src\\\\components\\\\allVacations\\\\AllVacations.tsx\";\nimport React, { Component } from 'react';\nimport LocationImage from '../../assets/locationImage.png';\nimport EmptyHeart from '../../assets/likeImg.png';\nimport { store } from '../../Redux/Store';\nimport axios from 'axios';\nimport { ActionType } from '../../Redux/ActionType';\nimport colorfulAstroid from '../../assets/wavyLine.png';\nimport './allVacations.css';\nexport default class AllVacations extends Component {\n  constructor(props) {\n    super(props);\n    this.unSubscribeStore = void 0;\n\n    this.componentWillUnmount = () => {\n      // Unsubscribing the store's listener right before the component will unmount\n      // In order to make a small space optimization\n      this.unSubscribeStore();\n    };\n\n    this.componentDidMount = () => {\n      // Optimizing a bit the memory leak of the store listener\n      // Also subscribes automatically to the store\n      this.unSubscribeStore = store.subscribe(() => this.setState({\n        allVacations: store.getState().allVacations\n      }));\n\n      if (store.getState().allVacations.length === 0) {\n        this.getAllVacationsFromServer();\n      } else {\n        this.setState({\n          allVacations: store.getState().allVacations\n        });\n      }\n    };\n\n    this.checkIfUserIsLogged = () => {\n      let userData = JSON.parse(sessionStorage.getItem(\"userInfo\")); // Checking if the user has a correct sessionStorage JSON\n\n      if (userData !== null) {\n        // Checking if the user has a token\n        if (userData.token !== undefined) {\n          return true;\n        }\n      }\n\n      return false;\n    };\n\n    this.getAllVacationsFromServer = async () => {\n      try {\n        // The response we get, should be type of 'Vacation' class\n        const response = await axios.get('http://localhost:3001/vacations/all_vacations'); // Here we are receiving all the vacations from the server, as a JSON\n\n        const allVacations = response.data;\n        store.dispatch({\n          type: ActionType.GetAllVacations,\n          payload: allVacations\n        });\n      } catch (error) {\n        // alert(error.message);\n        console.log(error);\n      }\n    };\n\n    this.onVacationFollowClick = async clickedVacation => {\n      // Checking if the user is logged based on the global store\n      const isUserLogged = this.checkIfUserIsLogged();\n\n      if (isUserLogged) {\n        try {\n          let clickedVacationID = clickedVacation.Vacation_ID;\n          await axios.post('http://localhost:3001/vacations/vacation_follow', {\n            clickedVacationID\n          });\n          store.dispatch({\n            type: ActionType.SetFollowedVacation,\n            payload: clickedVacation\n          });\n        } catch (error) {\n          console.log(error);\n        }\n      }\n    };\n\n    this.state = {\n      allVacations: new Array()\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"allVacationsSection\",\n      id: \"allVacationsSection\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"headerContainer\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      className: \"allVacationsHeader sharp-text\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 21\n      }\n    }, \"All \", this.state.allVacations.length, \" Vacations We've Got For You\", /*#__PURE__*/React.createElement(\"img\", {\n      className: \"locationImage\",\n      src: LocationImage,\n      alt: \"All Vacations\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 25\n      }\n    })), /*#__PURE__*/React.createElement(\"img\", {\n      className: \"colorfulAstroidImg\",\n      src: colorfulAstroid,\n      alt: \"Colorful Astroid\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 21\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"allVacations\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 17\n      }\n    }, this.state.allVacations.map((vacation, index) => /*#__PURE__*/React.createElement(\"div\", {\n      className: \"vacationCardContainer\",\n      key: index,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      className: \"vacationCardImg\",\n      src: vacation.Image_URL,\n      alt: vacation.Vacation_Description,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 29\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"vacationCard\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"topVacationCardSection\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      className: \"heartIcon jackInTheBoxC\",\n      src: EmptyHeart,\n      onClick: () => {\n        this.onVacationFollowClick(vacation);\n      },\n      alt: \"Like Button\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 37\n      }\n    }), /*#__PURE__*/React.createElement(\"p\", {\n      className: \"followersText\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 37\n      }\n    }, vacation.Followers_Count)), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"vacationInfoCard\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"h4\", {\n      className: \"resortName\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 37\n      }\n    }, vacation.Vacation_Description), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"vacationDates\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(\"h4\", {\n      className: \"vacationDate\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 41\n      }\n    }, vacation.Start_Date), /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 41\n      }\n    }, \" - \"), /*#__PURE__*/React.createElement(\"h4\", {\n      className: \"vacationDate\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 41\n      }\n    }, vacation.End_Date)), /*#__PURE__*/React.createElement(\"h4\", {\n      className: \"vacationPrice\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 37\n      }\n    }, vacation.Vacation_Price, \" $\")))))));\n  }\n\n}","map":{"version":3,"sources":["C:/Users/Ben/Desktop/John Bryce/פרוייקטים/project3 - Vacations/vacations/src/components/allVacations/AllVacations.tsx"],"names":["React","Component","LocationImage","EmptyHeart","store","axios","ActionType","colorfulAstroid","AllVacations","constructor","props","unSubscribeStore","componentWillUnmount","componentDidMount","subscribe","setState","allVacations","getState","length","getAllVacationsFromServer","checkIfUserIsLogged","userData","JSON","parse","sessionStorage","getItem","token","undefined","response","get","data","dispatch","type","GetAllVacations","payload","error","console","log","onVacationFollowClick","clickedVacation","isUserLogged","clickedVacationID","Vacation_ID","post","SetFollowedVacation","state","Array","render","map","vacation","index","Image_URL","Vacation_Description","Followers_Count","Start_Date","End_Date","Vacation_Price"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport LocationImage from '../../assets/locationImage.png';\r\nimport Vacation from '../../models/Vacation';\r\nimport EmptyHeart from '../../assets/likeImg.png';\r\nimport { store } from '../../Redux/Store';\r\nimport axios from 'axios';\r\nimport { ActionType } from '../../Redux/ActionType';\r\nimport { Unsubscribe } from 'redux';\r\nimport colorfulAstroid from '../../assets/wavyLine.png';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport './allVacations.css';\r\n\r\n\r\ninterface allVacationsState {\r\n    allVacations : Vacation[];\r\n}\r\n\r\nexport default class AllVacations extends Component <any, allVacationsState> {\r\n\r\n    private unSubscribeStore : Unsubscribe;\r\n\r\n    constructor(props : any) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            allVacations : new Array <Vacation> ()\r\n        }\r\n    }\r\n\r\n\r\n    componentWillUnmount = () => {\r\n\r\n        // Unsubscribing the store's listener right before the component will unmount\r\n        // In order to make a small space optimization\r\n        this.unSubscribeStore();\r\n    }\r\n\r\n\r\n    componentDidMount = () => {\r\n\r\n        // Optimizing a bit the memory leak of the store listener\r\n        // Also subscribes automatically to the store\r\n        this.unSubscribeStore = store.subscribe(\r\n            () => this.setState ({\r\n                allVacations: store.getState().allVacations\r\n            })\r\n        );\r\n\r\n        if (store.getState().allVacations.length === 0) {\r\n            this.getAllVacationsFromServer();\r\n        }\r\n\r\n        else {\r\n            this.setState ({\r\n                allVacations: store.getState().allVacations\r\n            });\r\n        }\r\n    }\r\n\r\n\r\n    private checkIfUserIsLogged = () => {\r\n\r\n        let userData = JSON.parse(sessionStorage.getItem(\"userInfo\"));\r\n\r\n        // Checking if the user has a correct sessionStorage JSON\r\n        if (userData !== null) {\r\n\r\n            // Checking if the user has a token\r\n            if (userData.token !== undefined) {\r\n                return true;\r\n            }\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    private getAllVacationsFromServer = async () => {\r\n        \r\n        try {\r\n            // The response we get, should be type of 'Vacation' class\r\n            const response = await axios.get<Vacation[]>('http://localhost:3001/vacations/all_vacations');\r\n\r\n            // Here we are receiving all the vacations from the server, as a JSON\r\n            const allVacations : Vacation[] = response.data;\r\n\r\n            store.dispatch({\r\n                type: ActionType.GetAllVacations,\r\n                payload: allVacations\r\n            });\r\n        }\r\n\r\n        catch (error) {\r\n            // alert(error.message);\r\n            console.log(error);\r\n        }\r\n    }\r\n\r\n    private onVacationFollowClick = async (clickedVacation : Vacation) => {\r\n\r\n        // Checking if the user is logged based on the global store\r\n        const isUserLogged = this.checkIfUserIsLogged();\r\n\r\n        if (isUserLogged) {\r\n\r\n            try {\r\n\r\n                let clickedVacationID : number = clickedVacation.Vacation_ID;\r\n                await axios.post('http://localhost:3001/vacations/vacation_follow', {clickedVacationID});\r\n                \r\n                store.dispatch({type: ActionType.SetFollowedVacation, payload: clickedVacation});\r\n            }\r\n    \r\n            catch (error) {\r\n                \r\n                console.log(error);\r\n            }\r\n        }\r\n\r\n    }\r\n    \r\n\r\n    render() {\r\n        return (\r\n            <div className=\"allVacationsSection\" id=\"allVacationsSection\">\r\n\r\n                {/* ---------- All Vacations Section Header ---------- */}\r\n\r\n                <div className=\"headerContainer\">\r\n                    <h3 className=\"allVacationsHeader sharp-text\">All {this.state.allVacations.length} Vacations We've Got For You\r\n                        <img className=\"locationImage\" src={LocationImage} alt=\"All Vacations\"/>\r\n                    </h3>\r\n\r\n                    <img className=\"colorfulAstroidImg\" src={colorfulAstroid} alt=\"Colorful Astroid\"/>\r\n                </div>\r\n            \r\n\r\n                <div className=\"allVacations\">\r\n\r\n                    {/* ---------- All Vacations Cards ---------- */}\r\n\r\n                    {this.state.allVacations.map( (vacation : Vacation, index : number) => \r\n                        <div className=\"vacationCardContainer\" key={index}>\r\n                            <img className=\"vacationCardImg\" src={vacation.Image_URL} alt={vacation.Vacation_Description}/>\r\n\r\n                            <div className=\"vacationCard\">\r\n                                <div className=\"topVacationCardSection\">\r\n                                    <img className=\"heartIcon jackInTheBoxC\" src={EmptyHeart} onClick={() => {this.onVacationFollowClick(vacation)}} alt=\"Like Button\"/>\r\n                                    <p className=\"followersText\">{vacation.Followers_Count}</p>\r\n                                </div>\r\n\r\n                                <div className=\"vacationInfoCard\">\r\n                                    <h4 className=\"resortName\">{vacation.Vacation_Description}</h4>\r\n\r\n                                    <div className=\"vacationDates\">\r\n                                        <h4 className=\"vacationDate\">{vacation.Start_Date}</h4>\r\n                                        <span> - </span>\r\n                                        <h4 className=\"vacationDate\">{vacation.End_Date}</h4>\r\n                                    </div>\r\n\r\n                                    <h4 className=\"vacationPrice\">{vacation.Vacation_Price} $</h4>\r\n                                </div>\r\n                            </div>\r\n                            \r\n                        </div>\r\n                    )}\r\n\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}