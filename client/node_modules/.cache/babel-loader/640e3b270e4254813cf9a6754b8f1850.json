{"ast":null,"code":"import { ActionType } from \"./ActionType\";\n// --------------- This is the reducer (acts like a state machine) --------------- //\nexport default function reduce(oldAppState, action) {\n  // Copying the old app state, in order to modify it, based on the action\n  const newAppState = { ...oldAppState\n  };\n\n  switch (action.type) {\n    case ActionType.GetAllVacations:\n      newAppState.allVacations = [...action.payload];\n      break;\n\n    case ActionType.SetFollowedVacation:\n      console.log(\"----------------\");\n      console.log(\"NOW PUSHING NEW VACATION TO FAVS\");\n      newAppState.favoriteVacations.push(action.payload);\n      console.log(\"PUSHED\");\n      console.log(\"----------------\");\n      break;\n\n    case ActionType.GetFavoriteVacations:\n      newAppState.favoriteVacations = [...action.payload];\n      break;\n\n    case ActionType.UnfollowVacation:\n      newAppState.favoriteVacations.splice(action.payload, 1);\n      break;\n\n    case ActionType.AddVacation:\n      newAppState.allVacations.push(action.payload);\n      break;\n\n    case ActionType.UpdateVacation:\n      newAppState.allVacations[action.payload.indexOfClickedVacationInGlobalStore] = action.payload.convertedValidDataForUIDisplay;\n      break;\n\n    case ActionType.UpdateFavoriteVacation:\n      newAppState.favoriteVacations[action.payload.indexOfClickedFavoriteVacationInGlobalStore] = action.payload.convertedValidDataForUIDisplay;\n      break;\n\n    case ActionType.IncreaseVacationFollowersCount:\n      console.log(newAppState.allVacations[action.payload].followersCount);\n      newAppState.allVacations[action.payload].followersCount++;\n      console.log(newAppState.allVacations[action.payload].followersCount);\n      break;\n\n    case ActionType.IncreaseFavoriteVacationFollowersCount:\n      newAppState.favoriteVacations[action.payload].followersCount++;\n      break;\n\n    case ActionType.DecreaseVacationFollowersCount:\n      newAppState.allVacations[action.payload].followersCount--;\n      break;\n\n    case ActionType.DecreaseFavoriteVacationFollowersCount:\n      newAppState.favoriteVacations[action.payload].followersCount--;\n      break;\n\n    case ActionType.DeleteVacation:\n      newAppState.allVacations.splice(action.payload, 1);\n      break;\n\n    case ActionType.OnUserLogout:\n      // Clearing the user's favorite vacations on logout\n      newAppState.favoriteVacations = new Array();\n      break;\n  }\n\n  return newAppState;\n}","map":{"version":3,"sources":["C:/Users/Ben/Desktop/John Bryce/פרוייקטים/project3 - Vacations/client/src/Redux/Reducer.ts"],"names":["ActionType","reduce","oldAppState","action","newAppState","type","GetAllVacations","allVacations","payload","SetFollowedVacation","console","log","favoriteVacations","push","GetFavoriteVacations","UnfollowVacation","splice","AddVacation","UpdateVacation","indexOfClickedVacationInGlobalStore","convertedValidDataForUIDisplay","UpdateFavoriteVacation","indexOfClickedFavoriteVacationInGlobalStore","IncreaseVacationFollowersCount","followersCount","IncreaseFavoriteVacationFollowersCount","DecreaseVacationFollowersCount","DecreaseFavoriteVacationFollowersCount","DeleteVacation","OnUserLogout","Array"],"mappings":"AAEA,SAASA,UAAT,QAA2B,cAA3B;AAIA;AAEA,eAAe,SAASC,MAAT,CAAiBC,WAAjB,EAAyCC,MAAzC,EAAoE;AAE/E;AACA,QAAMC,WAAW,GAAG,EAAC,GAAGF;AAAJ,GAApB;;AAEA,UAAQC,MAAM,CAACE,IAAf;AACI,SAAKL,UAAU,CAACM,eAAhB;AACIF,MAAAA,WAAW,CAACG,YAAZ,GAA2B,CAAC,GAAGJ,MAAM,CAACK,OAAX,CAA3B;AACA;;AAEJ,SAAKR,UAAU,CAACS,mBAAhB;AACIC,MAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ;AACAD,MAAAA,OAAO,CAACC,GAAR,CAAY,kCAAZ;AACAP,MAAAA,WAAW,CAACQ,iBAAZ,CAA8BC,IAA9B,CAAmCV,MAAM,CAACK,OAA1C;AACAE,MAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ;AACAD,MAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ;AACA;;AAEJ,SAAKX,UAAU,CAACc,oBAAhB;AACIV,MAAAA,WAAW,CAACQ,iBAAZ,GAAgC,CAAC,GAAGT,MAAM,CAACK,OAAX,CAAhC;AACA;;AAEJ,SAAKR,UAAU,CAACe,gBAAhB;AACIX,MAAAA,WAAW,CAACQ,iBAAZ,CAA8BI,MAA9B,CAAqCb,MAAM,CAACK,OAA5C,EAAqD,CAArD;AACA;;AAEJ,SAAKR,UAAU,CAACiB,WAAhB;AACIb,MAAAA,WAAW,CAACG,YAAZ,CAAyBM,IAAzB,CAA8BV,MAAM,CAACK,OAArC;AACA;;AAEJ,SAAKR,UAAU,CAACkB,cAAhB;AACId,MAAAA,WAAW,CAACG,YAAZ,CAAyBJ,MAAM,CAACK,OAAP,CAAeW,mCAAxC,IAA+EhB,MAAM,CAACK,OAAP,CAAeY,8BAA9F;AACA;;AAEJ,SAAKpB,UAAU,CAACqB,sBAAhB;AACIjB,MAAAA,WAAW,CAACQ,iBAAZ,CAA8BT,MAAM,CAACK,OAAP,CAAec,2CAA7C,IAA4FnB,MAAM,CAACK,OAAP,CAAeY,8BAA3G;AACA;;AAEJ,SAAKpB,UAAU,CAACuB,8BAAhB;AACIb,MAAAA,OAAO,CAACC,GAAR,CAAYP,WAAW,CAACG,YAAZ,CAAyBJ,MAAM,CAACK,OAAhC,EAAyCgB,cAArD;AAEApB,MAAAA,WAAW,CAACG,YAAZ,CAAyBJ,MAAM,CAACK,OAAhC,EAAyCgB,cAAzC;AAEAd,MAAAA,OAAO,CAACC,GAAR,CAAYP,WAAW,CAACG,YAAZ,CAAyBJ,MAAM,CAACK,OAAhC,EAAyCgB,cAArD;AACA;;AAEJ,SAAKxB,UAAU,CAACyB,sCAAhB;AACIrB,MAAAA,WAAW,CAACQ,iBAAZ,CAA8BT,MAAM,CAACK,OAArC,EAA8CgB,cAA9C;AACA;;AAEJ,SAAKxB,UAAU,CAAC0B,8BAAhB;AACItB,MAAAA,WAAW,CAACG,YAAZ,CAAyBJ,MAAM,CAACK,OAAhC,EAAyCgB,cAAzC;AACA;;AAEJ,SAAKxB,UAAU,CAAC2B,sCAAhB;AACIvB,MAAAA,WAAW,CAACQ,iBAAZ,CAA8BT,MAAM,CAACK,OAArC,EAA8CgB,cAA9C;AACA;;AAEJ,SAAKxB,UAAU,CAAC4B,cAAhB;AACIxB,MAAAA,WAAW,CAACG,YAAZ,CAAyBS,MAAzB,CAAgCb,MAAM,CAACK,OAAvC,EAAgD,CAAhD;AACA;;AAEJ,SAAKR,UAAU,CAAC6B,YAAhB;AACI;AACAzB,MAAAA,WAAW,CAACQ,iBAAZ,GAAgC,IAAIkB,KAAJ,EAAhC;AACA;AA5DR;;AA+DA,SAAO1B,WAAP;AACH","sourcesContent":["import AppState from \"./AppState\";\r\nimport Action from \"./Action\";\r\nimport { ActionType } from \"./ActionType\";\r\nimport Vacation from \"../models/Vacation\";\r\n\r\n\r\n// --------------- This is the reducer (acts like a state machine) --------------- //\r\n\r\nexport default function reduce (oldAppState : AppState, action : Action): AppState {\r\n\r\n    // Copying the old app state, in order to modify it, based on the action\r\n    const newAppState = {...oldAppState};\r\n\r\n    switch (action.type) {\r\n        case ActionType.GetAllVacations:\r\n            newAppState.allVacations = [...action.payload];\r\n            break;\r\n\r\n        case ActionType.SetFollowedVacation:\r\n            console.log(\"----------------\");\r\n            console.log(\"NOW PUSHING NEW VACATION TO FAVS\")\r\n            newAppState.favoriteVacations.push(action.payload);\r\n            console.log(\"PUSHED\")\r\n            console.log(\"----------------\");\r\n            break;\r\n\r\n        case ActionType.GetFavoriteVacations:\r\n            newAppState.favoriteVacations = [...action.payload];\r\n            break;\r\n\r\n        case ActionType.UnfollowVacation:\r\n            newAppState.favoriteVacations.splice(action.payload, 1);\r\n            break;\r\n\r\n        case ActionType.AddVacation:\r\n            newAppState.allVacations.push(action.payload);\r\n            break;\r\n\r\n        case ActionType.UpdateVacation:\r\n            newAppState.allVacations[action.payload.indexOfClickedVacationInGlobalStore] = action.payload.convertedValidDataForUIDisplay;\r\n            break;\r\n        \r\n        case ActionType.UpdateFavoriteVacation:\r\n            newAppState.favoriteVacations[action.payload.indexOfClickedFavoriteVacationInGlobalStore] = action.payload.convertedValidDataForUIDisplay;\r\n            break;\r\n\r\n        case ActionType.IncreaseVacationFollowersCount:\r\n            console.log(newAppState.allVacations[action.payload].followersCount);\r\n            \r\n            newAppState.allVacations[action.payload].followersCount ++;\r\n\r\n            console.log(newAppState.allVacations[action.payload].followersCount);\r\n            break;\r\n\r\n        case ActionType.IncreaseFavoriteVacationFollowersCount:\r\n            newAppState.favoriteVacations[action.payload].followersCount ++;\r\n            break;\r\n\r\n        case ActionType.DecreaseVacationFollowersCount:\r\n            newAppState.allVacations[action.payload].followersCount --;\r\n            break;\r\n\r\n        case ActionType.DecreaseFavoriteVacationFollowersCount:\r\n            newAppState.favoriteVacations[action.payload].followersCount --;\r\n            break;\r\n\r\n        case ActionType.DeleteVacation:\r\n            newAppState.allVacations.splice(action.payload, 1);\r\n            break;            \r\n\r\n        case ActionType.OnUserLogout:\r\n            // Clearing the user's favorite vacations on logout\r\n            newAppState.favoriteVacations = new Array <Vacation> ();\r\n            break;\r\n    }\r\n\r\n    return newAppState;\r\n}"]},"metadata":{},"sourceType":"module"}