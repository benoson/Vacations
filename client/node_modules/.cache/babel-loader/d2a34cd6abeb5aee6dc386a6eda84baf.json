{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Ben\\\\Desktop\\\\John Bryce\\\\\\u05E4\\u05E8\\u05D5\\u05D9\\u05D9\\u05E7\\u05D8\\u05D9\\u05DD\\\\project3 - Vacations\\\\client\\\\src\\\\components\\\\reportsPage\\\\RerportsPage.tsx\";\nimport React, { Component } from 'react';\nimport { store } from '../../Redux/Store';\nimport axios from 'axios';\nimport { interceptorHandler } from '../../models/InterceptorHandler';\nimport { getUserTypeFromServerCache } from '../../models/GetUserTypeFromServerCache';\nexport default class RerportsPage extends Component {\n  constructor(props) {\n    super(props);\n    this.userTypeFromServerCache = void 0;\n    this.allVacationsInGlobalStore = store.getState().allVacations;\n\n    this.componentDidMount = async () => {\n      this.userTypeFromServerCache = await getUserTypeFromServerCache();\n\n      if (this.userTypeFromServerCache === \"ADMIN\") {\n        this.checkIfGlobalStoreHasAllVacations();\n      }\n    };\n\n    this.reportsPageErrorHandler = errorMessage => {\n      // Letting the user know he received an error, by displaying a Pop-Up Message at the bottom of the screen\n      let snackbar = document.getElementById(\"snackbar\");\n      snackbar.className = \"show\";\n      snackbar.textContent = errorMessage;\n      setTimeout(function () {\n        snackbar.className = snackbar.className.replace(\"show\", \"\");\n      }, 6000);\n    };\n\n    this.checkIfGlobalStoreHasAllVacations = () => {\n      if (this.state.followedVacations.length === 0) {\n        this.getAllFollowedVacationsFromServer();\n      } else {\n        // If the client already has all the vacations in the Global Store, filter them by the ones that have at least 1 follower\n        let followedVacationsFromGlobalStore = store.getState().allVacations.filter(vacation => vacation.followersCount > 0);\n        this.setState({\n          followedVacations: followedVacationsFromGlobalStore\n        });\n      }\n    };\n\n    this.getAllFollowedVacationsFromServer = async () => {\n      interceptorHandler(); // Getting all the followed vacations from the server\n\n      try {\n        // Attempting to get all of the followed vacations from the server\n        const response = await axios.get('http://localhost:3001/all_followed_vacations');\n        const followedVacationsData = response.data;\n        this.setState({\n          followedVacations: followedVacationsData\n        });\n      } catch (error) {\n        try {\n          let errorMessage = error.response.data.error;\n          this.reportsPageErrorHandler(errorMessage);\n        } catch {\n          this.reportsPageErrorHandler(error);\n        }\n      }\n    };\n\n    this.state = {\n      followedVacations: this.allVacationsInGlobalStore\n    };\n  }\n\n  // const state = {\n  //     labels: ['January', 'February', 'March', 'April', 'May'],\n  //     datasets: [\n  //             {\n  //                 label: 'Rainfall',\n  //                 backgroundColor: 'rgba(75,192,192,1)',\n  //                 borderColor: 'rgba(0,0,0,1)',\n  //                 borderWidth: 2,\n  //                 data: [65, 59, 80, 81, 56]\n  //             }\n  //         ]\n  // }\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 17\n      }\n    }, \"this is the reports page\"), /*#__PURE__*/React.createElement(\"div\", {\n      id: \"snackbar\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 13\n      }\n    }));\n  }\n\n}","map":{"version":3,"sources":["C:/Users/Ben/Desktop/John Bryce/פרוייקטים/project3 - Vacations/client/src/components/reportsPage/RerportsPage.tsx"],"names":["React","Component","store","axios","interceptorHandler","getUserTypeFromServerCache","RerportsPage","constructor","props","userTypeFromServerCache","allVacationsInGlobalStore","getState","allVacations","componentDidMount","checkIfGlobalStoreHasAllVacations","reportsPageErrorHandler","errorMessage","snackbar","document","getElementById","className","textContent","setTimeout","replace","state","followedVacations","length","getAllFollowedVacationsFromServer","followedVacationsFromGlobalStore","filter","vacation","followersCount","setState","response","get","followedVacationsData","data","error","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAsD,OAAtD;AAEA,SAASC,KAAT,QAAsB,mBAAtB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,SAASC,kBAAT,QAAmC,iCAAnC;AACA,SAASC,0BAAT,QAA2C,yCAA3C;AAOA,eAAe,MAAMC,YAAN,SAA2BL,SAA3B,CAAmE;AAK9EM,EAAAA,WAAW,CAACC,KAAD,EAAa;AACpB,UAAMA,KAAN;AADoB,SAHhBC,uBAGgB;AAAA,SAFhBC,yBAEgB,GAFYR,KAAK,CAACS,QAAN,GAAiBC,YAE7B;;AAAA,SAQxBC,iBARwB,GAQJ,YAAY;AAE5B,WAAKJ,uBAAL,GAA+B,MAAMJ,0BAA0B,EAA/D;;AAEA,UAAI,KAAKI,uBAAL,KAAiC,OAArC,EAA8C;AAE1C,aAAKK,iCAAL;AACH;AACJ,KAhBuB;;AAAA,SAmBhBC,uBAnBgB,GAmBWC,YAAD,IAA0B;AAExD;AAEA,UAAIC,QAAwB,GAAGC,QAAQ,CAACC,cAAT,CAAwB,UAAxB,CAA/B;AACAF,MAAAA,QAAQ,CAACG,SAAT,GAAqB,MAArB;AACAH,MAAAA,QAAQ,CAACI,WAAT,GAAuBL,YAAvB;AAEAM,MAAAA,UAAU,CAAC,YAAW;AAClBL,QAAAA,QAAQ,CAACG,SAAT,GAAqBH,QAAQ,CAACG,SAAT,CAAmBG,OAAnB,CAA2B,MAA3B,EAAmC,EAAnC,CAArB;AACH,OAFS,EAEP,IAFO,CAAV;AAGH,KA9BuB;;AAAA,SAgChBT,iCAhCgB,GAgCoB,MAAM;AAE9C,UAAI,KAAKU,KAAL,CAAWC,iBAAX,CAA6BC,MAA7B,KAAwC,CAA5C,EAA+C;AAE3C,aAAKC,iCAAL;AACH,OAHD,MAKK;AAED;AAEA,YAAIC,gCAAgC,GAAG1B,KAAK,CAACS,QAAN,GAAiBC,YAAjB,CAA8BiB,MAA9B,CAAsCC,QAAQ,IAAIA,QAAQ,CAACC,cAAT,GAA0B,CAA5E,CAAvC;AAEA,aAAKC,QAAL,CAAc;AACVP,UAAAA,iBAAiB,EAAEG;AADT,SAAd;AAGH;AACJ,KAjDuB;;AAAA,SAmDhBD,iCAnDgB,GAmDoB,YAAY;AAEpDvB,MAAAA,kBAAkB,GAFkC,CAIpD;;AAEA,UAAI;AAEA;AACA,cAAM6B,QAAQ,GAAG,MAAM9B,KAAK,CAAC+B,GAAN,CAAsB,8CAAtB,CAAvB;AACA,cAAMC,qBAAqB,GAAGF,QAAQ,CAACG,IAAvC;AAEA,aAAKJ,QAAL,CAAc;AACVP,UAAAA,iBAAiB,EAAEU;AADT,SAAd;AAGH,OATD,CAWA,OAAOE,KAAP,EAAc;AAEV,YAAI;AACA,cAAIrB,YAAY,GAAGqB,KAAK,CAACJ,QAAN,CAAeG,IAAf,CAAoBC,KAAvC;AACA,eAAKtB,uBAAL,CAA6BC,YAA7B;AACH,SAHD,CAKA,MAAM;AACF,eAAKD,uBAAL,CAA6BsB,KAA7B;AACH;AACJ;AACJ,KA/EuB;;AAGpB,SAAKb,KAAL,GAAa;AACRC,MAAAA,iBAAiB,EAAE,KAAKf;AADhB,KAAb;AAGH;;AA2ED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA4B,EAAAA,MAAM,GAAG;AAEL,wBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kCADJ,eAmBA;AAAK,MAAA,EAAE,EAAC,UAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAnBA,CADJ;AAuBH;;AA9H6E","sourcesContent":["import React, { Component, useEffect, useState } from 'react';\r\nimport { Bar } from 'react-chartjs-2';\r\nimport { store } from '../../Redux/Store';\r\nimport axios from 'axios';\r\nimport Vacation from '../../models/Vacation';\r\nimport { interceptorHandler } from '../../models/InterceptorHandler';\r\nimport { getUserTypeFromServerCache } from '../../models/GetUserTypeFromServerCache';\r\n\r\n\r\ninterface FollowedVacationsState {\r\n    followedVacations: Vacation[];\r\n}\r\n\r\nexport default class RerportsPage extends Component <any, FollowedVacationsState> {\r\n\r\n    private userTypeFromServerCache: string;\r\n    private allVacationsInGlobalStore = store.getState().allVacations;\r\n\r\n    constructor(props: any) {\r\n        super(props);\r\n    \r\n        this.state = {\r\n             followedVacations: this.allVacationsInGlobalStore\r\n        };\r\n    }\r\n    \r\n    componentDidMount = async () => {\r\n\r\n        this.userTypeFromServerCache = await getUserTypeFromServerCache();\r\n\r\n        if (this.userTypeFromServerCache === \"ADMIN\") {\r\n    \r\n            this.checkIfGlobalStoreHasAllVacations();\r\n        }\r\n    }\r\n    \r\n\r\n    private reportsPageErrorHandler = (errorMessage: string) => {\r\n\r\n        // Letting the user know he received an error, by displaying a Pop-Up Message at the bottom of the screen\r\n\r\n        let snackbar: HTMLDivElement = document.getElementById(\"snackbar\") as HTMLDivElement;\r\n        snackbar.className = \"show\";\r\n        snackbar.textContent = errorMessage;\r\n\r\n        setTimeout(function() {\r\n            snackbar.className = snackbar.className.replace(\"show\", \"\");\r\n        }, 6000);\r\n    }\r\n\r\n    private checkIfGlobalStoreHasAllVacations = () => {\r\n\r\n        if (this.state.followedVacations.length === 0) {\r\n\r\n            this.getAllFollowedVacationsFromServer();\r\n        }\r\n\r\n        else {\r\n\r\n            // If the client already has all the vacations in the Global Store, filter them by the ones that have at least 1 follower\r\n\r\n            let followedVacationsFromGlobalStore = store.getState().allVacations.filter( vacation => vacation.followersCount > 0);\r\n\r\n            this.setState({\r\n                followedVacations: followedVacationsFromGlobalStore\r\n            });\r\n        }\r\n    }\r\n\r\n    private getAllFollowedVacationsFromServer = async () => {\r\n\r\n        interceptorHandler();\r\n\r\n        // Getting all the followed vacations from the server\r\n\r\n        try {\r\n\r\n            // Attempting to get all of the followed vacations from the server\r\n            const response = await axios.get<Vacation[]>('http://localhost:3001/all_followed_vacations');\r\n            const followedVacationsData = response.data;\r\n\r\n            this.setState({\r\n                followedVacations: followedVacationsData\r\n            });\r\n        }\r\n\r\n        catch (error) {\r\n\r\n            try {\r\n                let errorMessage = error.response.data.error;\r\n                this.reportsPageErrorHandler(errorMessage);\r\n            }\r\n\r\n            catch {\r\n                this.reportsPageErrorHandler(error);\r\n            }\r\n        }\r\n    }\r\n\r\n    // const state = {\r\n    //     labels: ['January', 'February', 'March', 'April', 'May'],\r\n    //     datasets: [\r\n    //             {\r\n    //                 label: 'Rainfall',\r\n    //                 backgroundColor: 'rgba(75,192,192,1)',\r\n    //                 borderColor: 'rgba(0,0,0,1)',\r\n    //                 borderWidth: 2,\r\n    //                 data: [65, 59, 80, 81, 56]\r\n    //             }\r\n    //         ]\r\n    // }\r\n    \r\n\r\n\r\n    render() {\r\n\r\n        return (\r\n            <div>\r\n                <h2>this is the reports page</h2>\r\n            {/* <Bar\r\n                data={state}\r\n                options={{\r\n                    title:{\r\n                        display:true,\r\n                        text:'Liked Users Vacations',\r\n                        fontSize:20\r\n                    },\r\n                    legend:{\r\n                        display:true,\r\n                        position:'right'\r\n                    }\r\n                }}\r\n            /> */}\r\n\r\n\r\n            {/* The User's Snackbar Error Indication */}\r\n            <div id=\"snackbar\"></div>\r\n        </div>\r\n        )\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}