{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Ben\\\\Desktop\\\\John Bryce\\\\\\u05E4\\u05E8\\u05D5\\u05D9\\u05D9\\u05E7\\u05D8\\u05D9\\u05DD\\\\project3 - Vacations\\\\client\\\\src\\\\components\\\\topNavbar\\\\TopNavbar.tsx\";\nimport React, { useEffect } from 'react';\nimport { useHistory } from \"react-router-dom\";\nimport { isUserLoggedValidator } from '../../models/IsUserLoggedValidator';\nimport { getUserTypeFromServerCache } from '../../models/GetUserTypeFromServerCache';\nimport { store } from '../../Redux/Store';\nimport { ActionType } from '../../Redux/ActionType';\nimport { NavLink } from 'react-router-dom';\nimport axios from 'axios';\nimport './topNavbar.css'; // ------------------------------------------------- This Component Displays The Top Navigation Bar ------------------------------------------------- //\n\nexport default function TopNavbar() {\n  const history = useHistory();\n  let userTypeFromServerCache;\n  useEffect(() => {\n    (async () => {\n      const isUserLogged = isUserLoggedValidator();\n      let userTypeFromServer;\n\n      if (isUserLogged) {\n        userTypeFromServer = userTypeFromServerCache = await getUserTypeFromServerCache();\n      }\n    })();\n  }, []); // ------------------------------------------------- Controller ------------------------------------------------- //\n  // Handles The User's Request To Logout And Login\n\n  const onUserLoginStautsChange = async () => {\n    let isUserLogged = isUserLoggedValidator();\n\n    if (isUserLogged) {\n      try {\n        await axios.post(`http://localhost:3001/users/logout`); // Clearing the user's favorite vacations from the Global Store\n\n        store.dispatch({\n          type: ActionType.OnUserLogout\n        });\n      } catch {}\n    }\n\n    sessionStorage.clear();\n    history.push(\"/login\");\n  }; // ------------------------------------------------- View ------------------------------------------------- //\n  // When the user scrolls down, change the navigation bar\n\n\n  window.onscroll = () => {\n    try {\n      if (document.body.scrollTop > 130 || document.documentElement.scrollTop > 130) {\n        document.getElementById(\"topNavbar\").style.backgroundColor = \"#174d5f\";\n        document.getElementById(\"topNavbar\").style.color = \"white\";\n        document.getElementById(\"navbarRerportsText\").style.color = 'white';\n        document.getElementById(\"logStatusBtn\").style.color = 'white';\n        document.getElementById(\"navbarHomeText\").style.color = 'white';\n      } else if (document.body.scrollTop <= 130 || document.documentElement.scrollTop <= 130) {\n        document.getElementById(\"topNavbar\").style.backgroundColor = \"transparent\";\n        document.getElementById(\"topNavbar\").style.color = \"#15304c\";\n        document.getElementById(\"navbarRerportsText\").style.color = 'blue';\n        document.getElementById(\"logStatusBtn\").style.color = 'blue';\n        document.getElementById(\"navbarHomeText\").style.color = 'blue';\n      }\n    } catch {}\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    id: \"topNavbar\",\n    className: \"topNavbar\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 9\n    }\n  }, isUserLoggedValidator() ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"helloUserSection\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 21\n    }\n  }, // Displaying The Username In The Navigation Bar\n  JSON.parse(sessionStorage.getItem(\"userInfo\")).userName, userTypeFromServerCache === \"ADMIN\" && /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    id: \"adminText\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 29\n    }\n  }, \"Admin\"), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"topNavItem homeNavItem\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(NavLink, {\n    id: \"navbarHomeText\",\n    to: \"/vacations\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 33\n    }\n  }, \"Home\")), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"topNavItem reportsNavItem\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(NavLink, {\n    id: \"navbarRerportsText\",\n    to: \"/reports\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 33\n    }\n  }, \"Reports Page\"))), /*#__PURE__*/React.createElement(\"span\", {\n    id: \"logStatusBtn\",\n    onClick: onUserLoginStautsChange,\n    className: \"topNavItem loginStatusButton\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 25\n    }\n  }, \"Logout\")) : /*#__PURE__*/React.createElement(\"div\", {\n    className: \"helloUserSection\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    id: \"loginStatusBtn\",\n    onClick: onUserLoginStautsChange,\n    className: \"topNavItem loginStatusButton\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 21\n    }\n  }, \"Login\")));\n}","map":{"version":3,"sources":["C:/Users/Ben/Desktop/John Bryce/פרוייקטים/project3 - Vacations/client/src/components/topNavbar/TopNavbar.tsx"],"names":["React","useEffect","useHistory","isUserLoggedValidator","getUserTypeFromServerCache","store","ActionType","NavLink","axios","TopNavbar","history","userTypeFromServerCache","isUserLogged","userTypeFromServer","onUserLoginStautsChange","post","dispatch","type","OnUserLogout","sessionStorage","clear","push","window","onscroll","document","body","scrollTop","documentElement","getElementById","style","backgroundColor","color","JSON","parse","getItem","userName"],"mappings":"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","sourcesContent":["import React, { useEffect } from 'react';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { isUserLoggedValidator } from '../../models/IsUserLoggedValidator';\r\nimport { getUserTypeFromServerCache } from '../../models/GetUserTypeFromServerCache';\r\nimport { store } from '../../Redux/Store';\r\nimport { ActionType } from '../../Redux/ActionType';\r\nimport { NavLink } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport './topNavbar.css';\r\n\r\n\r\n// ------------------------------------------------- This Component Displays The Top Navigation Bar ------------------------------------------------- //\r\n\r\nexport default function TopNavbar() {\r\n\r\n    const history = useHistory();\r\n    let userTypeFromServerCache;\r\n\r\n\r\n    useEffect( () => {\r\n\r\n        (async () => {\r\n\r\n            const isUserLogged = isUserLoggedValidator();\r\n            let userTypeFromServer;\r\n        \r\n            if (isUserLogged) {\r\n        \r\n                userTypeFromServer = userTypeFromServerCache = await getUserTypeFromServerCache();\r\n            }\r\n        })();\r\n    }, []);\r\n\r\n\r\n\r\n    // ------------------------------------------------- Controller ------------------------------------------------- //\r\n\r\n    // Handles The User's Request To Logout And Login\r\n    const onUserLoginStautsChange = async () => {\r\n        \r\n        let isUserLogged = isUserLoggedValidator() ;\r\n\r\n        if (isUserLogged) {\r\n            \r\n            try {\r\n                \r\n                await axios.post(`http://localhost:3001/users/logout`);\r\n    \r\n                // Clearing the user's favorite vacations from the Global Store\r\n                store.dispatch({\r\n                    type: ActionType.OnUserLogout\r\n                });\r\n            }\r\n\r\n            catch {}\r\n        }\r\n        \r\n        sessionStorage.clear();\r\n        history.push(\"/login\");\r\n    }\r\n\r\n\r\n\r\n    // ------------------------------------------------- View ------------------------------------------------- //\r\n    \r\n    // When the user scrolls down, change the navigation bar\r\n    window.onscroll = () => {\r\n        try {\r\n            if (document.body.scrollTop > 130 || document.documentElement.scrollTop > 130) {\r\n                document.getElementById(\"topNavbar\").style.backgroundColor = \"#174d5f\";\r\n                document.getElementById(\"topNavbar\").style.color = \"white\";\r\n\r\n                document.getElementById(\"navbarRerportsText\").style.color = 'white';\r\n                document.getElementById(\"logStatusBtn\").style.color = 'white';\r\n                document.getElementById(\"navbarHomeText\").style.color = 'white';\r\n            }\r\n    \r\n            else if (document.body.scrollTop <= 130 || document.documentElement.scrollTop <= 130) {\r\n                document.getElementById(\"topNavbar\").style.backgroundColor = \"transparent\";\r\n                document.getElementById(\"topNavbar\").style.color = \"#15304c\";\r\n                \r\n                document.getElementById(\"navbarRerportsText\").style.color = 'blue';\r\n                document.getElementById(\"logStatusBtn\").style.color = 'blue';\r\n                document.getElementById(\"navbarHomeText\").style.color = 'blue';\r\n            }\r\n        }\r\n        catch {}\r\n    };\r\n\r\n\r\n    return (\r\n        <div id=\"topNavbar\" className=\"topNavbar\">\r\n\r\n            {isUserLoggedValidator() ? \r\n                    <div className=\"helloUserSection\">\r\n                        {\r\n                            // Displaying The Username In The Navigation Bar\r\n                            JSON.parse(sessionStorage.getItem(\"userInfo\")).userName\r\n                        }\r\n\r\n                        {/* This 'ADMIN' text is taken from the sessionStorage, because I don't want to send a request to the server.\r\n                            It is only visual, and does not make the user an Admin. */}\r\n\r\n                        {userTypeFromServerCache === \"ADMIN\"\r\n                            && \r\n                        \r\n                        <div>\r\n                            <span id=\"adminText\">Admin</span>\r\n\r\n                            <span className=\"topNavItem homeNavItem\">\r\n                                <NavLink id=\"navbarHomeText\" to=\"/vacations\">Home</NavLink>\r\n                            </span>\r\n\r\n                            <span className=\"topNavItem reportsNavItem\">\r\n                                <NavLink id=\"navbarRerportsText\" to=\"/reports\">Reports Page</NavLink>\r\n                            </span>\r\n                        </div>\r\n                        }\r\n\r\n\r\n                        <span id=\"logStatusBtn\" onClick={onUserLoginStautsChange} className=\"topNavItem loginStatusButton\">\r\n                            Logout\r\n                        </span>\r\n                    </div>\r\n                :\r\n                <div className=\"helloUserSection\">\r\n                    <span id=\"loginStatusBtn\" onClick={onUserLoginStautsChange} className=\"topNavItem loginStatusButton\">\r\n                        Login\r\n                    </span>\r\n                </div>\r\n            }\r\n\r\n        </div>\r\n    )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}